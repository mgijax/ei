Module: MGINomen
{
      autoCuil = False;
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Fri Apr  7 11:20:16 2000";
        {
          Nomen = Module : MGI;
          Group: Control
            vip_x = 25;
            vip_y = 30;
          Group: User
            homeWidget = SymbolName;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearNomen";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                            Group: Widget
                              managed = False;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = False;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  SymbolName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Symbol/Name\nSearch";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  MarkerEventMenu = MarkerEventMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                    leftWidget = SymbolName;
                                    topWidget = SymbolName;
                                  Group: User
                                    defaultChild = 2;
                                }
                                {
                                  MarkerEventReasonMenu = MarkerEventReasonMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerEventMenu;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerEventMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultChild = 2;
                                }
                                {
                                  MarkerStatusMenu = MarkerStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerEventReasonMenu;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerEventReasonMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Marker Type";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = MarkerEventMenu;
                                    topWidget = MarkerEventReasonMenu;
                                    topOffset = 5;
                                  Group: User
                                    defaultChild = 1;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ChromosomePulldown = OptionPulldown;
                                        Group: User
                                          childTemplate = OptionToggle;
                                          sql = "select chromosome, label = chromosome, sequenceNum \nfrom MRK_Chromosome where _Species_key = 1\norder by sequenceNum\nselect \"W\", label = \"W\", sequenceNum = 101";
                                      }
                                }
                                {
                                  SubmittedByMenu = NomenUserMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = SubmittedByPulldown;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ChromosomeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 20;
                                  Group: User
                                    required = False;
                                      Popups:
                                      {
                                        SubmittedByPulldown : NomenUserPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MarkerTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerTypeMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 25;
                                          columns = 25;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyNomenSymbol()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  HumanSymbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Human Symbol";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 20;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  BroadcastByMenu = NomenUserMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = BroadcastByPulldown;
                                    labelString = "Broadcast By";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    required = False;
                                    defaultOption = NotSpecified;
                                      Popups:
                                      {
                                        BroadcastByPulldown : NomenUserPulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              NotSpecified = NotSpecified : mgiOption;
                                              Group: User
                                                defaultValue = "-1";
                                                searchValue = "-1";
                                            }
                                      }
                                }
                                {
                                  BroadcastDate = mgiDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = BroadcastByMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = BroadcastByMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topOffset = "-10";
                                  Group: User
                                    fieldName = broadcast_date;
                                      {
                                        Date = Date;
                                        Group: User
                                          fieldName = broadcast_date;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Broadcast Date";
                                            }
                                      }
                                }
                                {
                                  AccessionID = AccessionID : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = BroadcastDate;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = BroadcastDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  StatusNotes = SingleNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AccessionReference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AccessionReference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Nomenclature Notes";
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          editMode = multi_line_edit;
                                          rows = 3;
                                          wordWrap = True;
                                          scrollHorizontal = False;
                                      }
                                }
                                {
                                  EditorNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StatusNotes;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    topOffset = 2;
                                    leftWidget = StatusNotes;
                                    bottomOffset = 5;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Editor's Notes";
                                        Group: User
                                          targetWidget = EditorNote;
                                      }
                                }
                                {
                                  CoordNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = EditorNote;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = EditorNote;
                                    leftOffset = 5;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Nomenclature Coordinator Notes";
                                      }
                                }
                                {
                                  OtherReference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Reference;
                                    topOffset = 2;
                                    rightOffset = 2;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 7;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 30)(all 5 10)(all 6 60)(all label 6)";
                                          xrtTblColumnLabels = "Mode,Other Key,Current Key,New Key,Name,J#,Citation";
                                          xrtTblMaxLengthSeries = "(all 4 255)(all 6 255)";
                                          xrtTblNumRows = 6;
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          userDefinedAttributes = "otherName:Int(Int)=\"4\"\notherKey:Int(Int)=\"1\"\n";
                                          xrtTblRowLabels = "Author,Other,Other,Other,Other,Other";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                        Group: User
                                          jnum = 5;
                                          citation = 6;
                                          refsCurrentKey = 2;
                                          refsKey = 3;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = BroadcastByMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = BroadcastDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblRowLabels = "Primary,Related,Related,Related,Related,Related";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-5 10)(all 6 30)(all 7 7)(all 8 10)(all label 7)";
                                          xrtTblNumColumns = 9;
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Review Key,Broadcast Key,J#,Citation,Review?,Broadcast?";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblMaxLengthSeries = "(all 6 255)";
                                          xrtTblPixelWidthSeries = "(all 0-4 0)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          userDefinedAttributes = "reviewKey:Int=\"3\"\nreview:Int=\"7\"\nbroadcastKey:Int=\"4\"\nbroadcast:Int=\"8\"\n";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                        Group: User
                                          citation = 6;
                                          jnum = 5;
                                      }
                                }
                                {
                                  GeneFamily = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Reference;
                                    rightOffset = 2;
                                    leftOffset = 10;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 30)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblMaxLengthSeries = "(all 3 255)";
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Gene Family";
                                          userDefinedAttributes = "familyCurrentKey:Int(Int)=\"1\"\nfamilyKey:Int(Int)=\"2\"\nfamilyName:Int=\"3\"\n";
                                          xrtTblVisibleRows = 3;
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                    leftOffset = 10;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblColumnLabels = "Mode,MGD Symbol,Accession #";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 15)(all 2 20)";
                                          userDefinedAttributes = "markerSymbol:Int=\"1\"\naccID:Int=\"2\"\n";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblVisibleRows = 1;
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  messageText = messageText : mgiDataTypes;
                                  Group: Widget
                                    background = Yellow;
                                    value = "All information associated with a \nRESERVED symbol is strictly CONFIDENTIAL";
                                    columns = 40;
                                    rows = 2;
                                    editMode = multi_line_edit;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = SymbolName;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = SymbolName;
                                    leftOffset = 30;
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = OtherReference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = OtherReference;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = Sequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearNomen";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    rightOffset = 10;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      BroadcastToMenu = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = Control;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            BroadcastForm = XmRowColumn;
                                {
                                  AddandSymbol = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Add and Broadcast to MGD";
                                    activateCallback = "D:VerifyEdit(mode = 2),\nD:Broadcast (type = 1),\nD:GoHome";
                                }
                                {
                                  BroadcastSymbol = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast Symbol to MGD";
                                    activateCallback = "D:Broadcast(type = 2),\nD:GoHome";
                                }
                                {
                                  BroadcastBatch = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast by Batch to MGD";
                                    activateCallback = "D:Broadcast(type = 3),\nD:GoHome";
                                }
                                {
                                  BroadcastReference = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast by Reference to MGD\n(Editors only)";
                                    activateCallback = "D:Broadcast(type = 4),\nD:GoHome";
                                }
                                {
                                  BroadcastReference1 = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast by Reference to MGD\n(Nomen Coordinator only)";
                                    activateCallback = "D:Broadcast(type = 5),\nD:GoHome";
                                }
                          }
                    }
                    {
                      CVNomen = CVNomen : mgiOption;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = BroadcastToMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = BroadcastToMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = CVNomen;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 7;
                                      }
                                }
                                {
                                  GeneFamilyList = GeneFamilyList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 3;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Nomenclature Search Results\nFull Nomenclature Record";
                                              Group: User
                                                keys = "NomenSearch.py\nNomen.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
                    {
                      BroadcastDialog = BroadcastDialog : mgiDialog;
                    }
              }
        }
}


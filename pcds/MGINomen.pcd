Module: MGINomen
{
      autoCuil = False;
      release = "TeleUSE v3.2.3 / Solaris 8";
      lastWritten = "Wed Feb 23 12:02:15 2005";
        {
          NomenModule = Module : MGI;
          Group: Control
            vip_x = 45;
            vip_y = 30;
          Group: User
            homeWidget = SymbolName;
            activateButtonName = Nomen;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearNomen";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                            Group: Widget
                              managed = False;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = False;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  messageText = messageText : mgiDataTypes;
                                  Group: Widget
                                    background = Yellow;
                                    value = "All information associated with a \nRESERVED symbol is strictly CONFIDENTIAL";
                                    columns = 40;
                                    rows = 2;
                                    editMode = multi_line_edit;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = SymbolName;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = SymbolName;
                                    leftOffset = 30;
                                }
                                {
                                  SymbolName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Symbol/Name\nSearch";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  MarkerEventMenu = MarkerEventMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                    leftWidget = SymbolName;
                                    topWidget = SymbolName;
                                  Group: User
                                    defaultChild = 2;
                                }
                                {
                                  MarkerStatusMenu = MarkerStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerEventMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerEventMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultChild = 2;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Marker Type";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = MarkerStatusMenu;
                                    topWidget = MarkerStatusMenu;
                                    leftOffset = 5;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ChromosomePulldown = OptionPulldown;
                                        Group: User
                                          childTemplate = OptionToggle;
                                          sql = "select chromosome, label = chromosome, sequenceNum \nfrom MRK_Chromosome where _Organism_key = 1\norder by sequenceNum\nselect \"W\", label = \"W\", sequenceNum = 101";
                                      }
                                }
                                {
                                  CurationStateMenu = CurationStateMenu : mgiOption;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MarkerEventMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerEventMenu;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    required = False;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MarkerEventMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerEventMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 40;
                                          columns = 40;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyNomenSymbol()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CurationStateMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  HumanSymbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Human Symbol";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 40;
                                          maxLength = 40;
                                      }
                                }
                                {
                                  Reference = ReferenceTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = SymbolName;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "reviewKey:Int(Int)=\"6\"\nreview:Int(Int)=\"10\"\n";
                                          xrtTblNumColumns = 11;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-8 10)(all 9 60)";
                                          xrtTblColumnLabels = "Mode,Assoc Key,Ref key,Ref key,Type key,Type key,Review key,Type,J#,Citation,Review?";
                                          xrtTblEditableSeries = "(all 0-7 False)";
                                          xrtTblMaxLengthSeries = "(all 9 255)";
                                          xrtTblPixelWidthSeries = "(all 0-6 0)";
                                          xrtTblTraversableSeries = "(all 0-7 False)";
                                        Group: User
                                          citation = 9;
                                          jnum = 8;
                                          refsName = 7;
                                          refsType = 7;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        ReferenceTypeMenu = ReferenceTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              ReferenceTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _RefAssocType_key, assocType, allowOnlyOne from MGI_RefType_Nomen_View where allowOnlyOne = 0 order by _RefAssocType_key";
                                                tableOption = 7;
                                            }
                                      }
                                }
                                {
                                  Synonym = SynonymTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_form;
                                    rightOffset = 5;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 20)(all 5 40)(all 6 10)(all 7 30)";
                                        Group: User
                                          requiredColumns = "5\n6";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        SynonymTypeMenu = SynonymTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              SynonymTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _SynonymType_key, synonymType from MGI_SynonymType_Nomen_View where allowOnlyOne = 0 order by _SynonymType_key";
                                            }
                                      }
                                }
                                {
                                  StatusNotes = SingleNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AccessionReference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AccessionReference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Nomenclature Notes";
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          columns = 100;
                                          rows = 3;
                                          scrollHorizontal = False;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = StatusNotes;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StatusNotes;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Synonym;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Synonym;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblPixelWidthSeries = "(all 0-4 0)(all 9-10 0)";
                                          xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 50)";
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = NSequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearNomen";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    rightOffset = 10;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblRowLabels = "Created,Modified,Broadcast";
                                          userDefinedAttributes = "broadcastBy:Int=\"2\"\nbroadcastFieldName:String=\"broadcast_date\"\n";
                                      }
                                }
                          }
                    }
                    {
                      BroadcastToMenu = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = Control;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            BroadcastForm = XmRowColumn;
                            Group: Widget
                              spacing = 15;
                                {
                                  AddBroadcastOfficial = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Add and Broadcast Official to MGD";
                                    activateCallback = "D:VerifyEdit(mode = 2),\nD:Broadcast (type = 1),\nD:GoHome";
                                }
                                {
                                  AddBroadcastInterim = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Add and Broadcast Interim to MGD";
                                    activateCallback = "D:VerifyEdit(mode = 2),\nD:Broadcast (type = 2),\nD:GoHome";
                                }
                                {
                                  BroadcastOfficial = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast Official Symbol to MGD";
                                    activateCallback = "D:Broadcast(type = 3),\nD:GoHome";
                                }
                                {
                                  BroadcastInterim = ControlPush : mgiControl;
                                  Group: Widget
                                    labelString = "Broadcast Interim Symbol to MGD";
                                    activateCallback = "D:Broadcast(type = 4),\nD:GoHome";
                                }
                          }
                    }
                    {
                      CVNomen = CVNomen : mgiCV;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = BroadcastToMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = BroadcastToMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            ReviewMenu = YesNoMenu : mgiOption;
                                Popups:
                                {
                                  ReviewPulldown = OptionPulldown : mgiOption;
                                  Group: User
                                    tableOption = 10;
                                    tableOptionKey = 6;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = CVNomen;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 7;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Nomenclature Search Results\nFull Nomenclature Record";
                                              Group: User
                                                keys = "NomenSearch.py\nNomen.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                          {
                            label = XmLabel;
                          }
                          {
                            Note = Notes : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = scrolledText;
                                  Group: Widget
                                    rows = 45;
                                    columns = 125;
                                }
                          }
                    }
                    {
                      BroadcastDialog = BroadcastDialog : mgiDialog;
                      Group: Widget
                        messageString = "Are you sure you want to broadcast this record?";
                    }
              }
        }
}


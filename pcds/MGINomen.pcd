Module: MGINomen
{
      autoCuil = False;
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Fri Dec 10 15:11:31 1999";
        {
          MGINomen = Application : MGI;
          Group: Control
            vip_x = 105;
            vip_y = 30;
              {
                MGIForm = XmForm;
                    {
                      MGIMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      MGIFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MGIMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MGIMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Nomen = XmPushButton;
                                  Group: Widget
                                    labelString = Nomenclature;
                                    activateCallback = "D:CreateMGIModule(name = \"Nomen\")";
                                    traversalOn = False;
                                    managed = True;
                                }
                                {
                                  Reference = XmPushButton;
                                  Group: Widget
                                    labelString = References;
                                    activateCallback = "D:CreateMGIModule(name = \"Reference\")";
                                    traversalOn = False;
                                    managed = True;
                                }
                                {
                                  Marker = XmPushButton;
                                  Group: Widget
                                    labelString = Markers;
                                    activateCallback = "D:CreateMGIModule(name = \"Marker\")";
                                    traversalOn = False;
                                    managed = True;
                                }
                                {
                                  Lookups = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Lookups\")";
                                    traversalOn = False;
                                    labelString = Lookups;
                                }
                          }
                    }
              }
        }
        {
          Nomen = Module : MGI;
          Group: Control
            vip_x = 35;
            vip_y = 30;
          Group: User
            homeWidget = SymbolName;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearNomen";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                            Group: Widget
                              managed = False;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = False;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Broadcast = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Broadcast to MGD";
                                          activateCallback = "D:BroadcastInit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  MarkerEventMenu = MarkerEventMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                  Group: User
                                    defaultChild = 2;
                                }
                                {
                                  MarkerStatusMenu = MarkerStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerEventMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerEventMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Marker Type";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = MarkerStatusMenu;
                                    topWidget = MarkerStatusMenu;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ChromosomePulldown = OptionPulldown;
                                        Group: User
                                          childTemplate = OptionToggle;
                                          sql = "select chromosome, label = chromosome, sequenceNum \nfrom MRK_Chromosome where _Species_key = 1\norder by sequenceNum\nselect \"MT\", label = \"MT\", sequenceNum = 100\nselect \"W\", label = \"W\", sequenceNum = 101\nselect \"RE\", label = \"RE\", sequenceNum = 102";
                                      }
                                }
                                {
                                  SymbolName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = MarkerEventMenu;
                                    leftWidget = MarkerEventMenu;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Symbol/Name\nSearch";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  ProposedSymbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = SymbolName;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = SymbolName;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Proposed\nSymbol";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 25;
                                          columns = 25;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyNomenSymbol()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  ApprovedSymbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ProposedSymbol;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ProposedSymbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Approved\nSymbol";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyNomenSymbol()";
                                          background = LightSteelBlue;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  NomenUserMenu = NomenUserMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ApprovedSymbol;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ApprovedSymbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                  Group: User
                                    required = False;
                                }
                                {
                                  ProposedName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ProposedSymbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ProposedSymbol;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Proposed\nName";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                      }
                                }
                                {
                                  ApprovedName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ProposedName;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ProposedName;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Approved\nName";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                          background = LightSteelBlue;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  BroadcastDate = mgiDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ApprovedName;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ApprovedName;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    fieldName = broadcast_date;
                                      {
                                        Date = Date;
                                        Group: User
                                          fieldName = broadcast_date;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Broadcast Date";
                                            }
                                      }
                                }
                                {
                                  HumanSymbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = BroadcastDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = BroadcastDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Human \nSymbol";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 20;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Homology = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Homology record(s)\nin MGD";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = HumanSymbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = HumanSymbol;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 2;
                                }
                                {
                                  StatusNotes = SingleNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AccessionReference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AccessionReference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Nomenclature Assistant Notes";
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          editMode = multi_line_edit;
                                          rows = 3;
                                          wordWrap = True;
                                          scrollHorizontal = False;
                                      }
                                }
                                {
                                  EditorNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StatusNotes;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                    leftWidget = StatusNotes;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Editor's Notes";
                                        Group: User
                                          targetWidget = EditorNote;
                                      }
                                }
                                {
                                  CoordNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = EditorNote;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    leftWidget = EditorNote;
                                    bottomOffset = 5;
                                    leftOffset = 5;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Nomenclature Coordinator Notes";
                                      }
                                }
                                {
                                  Other = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = BroadcastDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                    leftWidget = BroadcastDate;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 50)(all label 6)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                          xrtTblMaxLengthSeries = "(all 2 200)";
                                          xrtTblColumnLabels = "Mode,Key,Name";
                                          userDefinedAttributes = "otherKey:Int=\"1\"\notherName:Int=\"2\"\n";
                                          xrtTblRowLabels = "Author,Other,Other,Other,Other,Other";
                                          xrtTblVisibleRows = 3;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Other;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Other;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblRowLabels = "Primary,Related,Related,Related,Related,Related";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 50)(all label 7)";
                                      }
                                }
                                {
                                  GeneFamily = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Other;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Other;
                                    leftOffset = 10;
                                    rightOffset = 2;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblMaxLengthSeries = "(all 3 255)";
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Gene Family";
                                          userDefinedAttributes = "familyCurrentKey:Int(Int)=\"1\"\nfamilyKey:Int(Int)=\"2\"\nfamilyName:Int=\"3\"\n";
                                          xrtTblVisibleRows = 3;
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Reference;
                                    leftOffset = 10;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblColumnLabels = "Mode,MGD Symbol,Accession #";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 15)(all 2 20)";
                                          userDefinedAttributes = "markerSymbol:Int=\"1\"\naccID:Int=\"2\"\n";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  messageText = messageText : mgiDataTypes;
                                  Group: Widget
                                    background = Yellow;
                                    value = "All information associated with a \nRESERVED symbol is strictly CONFIDENTIAL";
                                    columns = 40;
                                    rows = 2;
                                    editMode = multi_line_edit;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = SymbolName;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = SymbolName;
                                    leftOffset = 30;
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = Sequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearNomen";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    rightOffset = 10;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = DupApproved;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = DupApproved;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                }
                                {
                                  DupProposed = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicateProposed,\nD:GoHome";
                                    labelString = "Find Duplicate Proposed Symbols";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  DupApproved = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicateApproved,\nD:GoHome";
                                    labelString = "Find Duplicate Approved Symbols";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = DupProposed;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = DupProposed;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 20;
                                      }
                                }
                                {
                                  GeneFamilyList = GeneFamilyList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 3;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Nomenclature Search Results\nFull Nomenclature Record";
                                              Group: User
                                                keys = "NomenSearch.py\nNomen.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      NomenBroadcastDialog = NomenBroadcastDialog : mgiDialog;
                          {
                            Choice = Choice;
                          }
                          {
                            mgiDate = mgiDate;
                          }
                          {
                            PreviewFileName = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 35;
                                }
                          }
                    }
              }
        }
        {
          Marker = Marker : MGD;
          Group: Control
            vip_x = 35;
            vip_y = 85;
        }
        {
          Reference = Reference : MGD;
          Group: Control
            vip_x = 175;
            vip_y = 30;
        }
}


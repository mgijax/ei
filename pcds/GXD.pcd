Module: GXD
{
      autoCuil = false;
      dDialogFile = "gxd_dlg.d";
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Mon Oct  4 07:46:47 1999";
      copy = false;
      inCreateMenu = true;
        {
          Antigen = Module : MGI;
          Group: Control
            vip_x = 175;
            vip_y = 30;
          Group: User
            clearForms = "ControlForm\nEditForm\nSourceForm";
            homeWidget = "Name\nmgiAccessionTable";
            editForms = "ControlForm\nEditForm\nSourceForm";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)\nD:InitAcc";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Region = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Region\nCovered";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                      }
                                }
                                {
                                  Note = Notes : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Region;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Region;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          columns = 75;
                                      }
                                }
                                {
                                  separatorGadget = XmSeparatorGadget;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Note;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  SourceForm = SourceForm : MGI;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separatorGadget;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)\nD:InitAcc";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Delete = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: Widget
                                          managed = False;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                  }
                                                  {
                                                    SequencePID = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Antibody = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 85;
          Group: User
            clearForms = "ControlForm\nEditForm\nSourceForm";
            homeWidget = "Name\nmgiAccessionTable\nMarker\nAlias";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 85;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AntibodyTypeMenu = AntibodyTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AntibodyClassMenu = AntibodyClassMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = AntibodyTypeMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = AntibodyTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AntibodySpeciesMenu = AntibodySpeciesMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = AntibodyClassMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = AntibodyClassMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  WesternMenu = WesternMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AntibodyTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AntibodyTypeMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ImmunoMenu = ImmunoMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = WesternMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = WesternMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = ImmunoMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AntigenAccession = mgiAccession : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ImmunoMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    tableID = 200;
                                      {
                                        ObjectID = ID;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify\nD:DisplayMolecularSource";
                                            }
                                      }
                                      {
                                        AccessionID = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Antigen Accession ID";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() DisplayAntigenSource()";
                                            }
                                      }
                                      {
                                        AccessionName = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Antigen Name";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 40;
                                            }
                                      }
                                }
                                {
                                  SourceForm = SourceForm : MGI;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AntigenAccession;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Marker = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = separator;
                                    topOffset = 5;
                                    rightOffset = 5;
                                    leftWidget = SourceForm;
                                    leftOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Marker,Chr";
                                          xrtTblNumColumns = 5;
                                          xrtTblCharWidthSeries = "(all 0 1) (all 1-2 10) (all 3 20) (all 4 4)";
                                          xrtTblMaxLengthSeries = "(all 3 25) (all 4 8)";
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"4\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = Markers;
                                            }
                                      }
                                }
                                {
                                  Alias = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = SourceForm;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = SourceForm;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 6;
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblColumnLabels = "Mode, Key, Ref Key,  Alias, J:, Citation";
                                          xrtTblMaxLengthSeries = "(all 3 255) (all 4 10) (all 5 255)";
                                          xrtTblCharWidthSeries = "(all 0 1) (all 3 20) (all 4 10) (all 5 35)";
                                          userDefinedAttributes = "aliasKey:Int=\"1\"\nrefsKey:Int=\"2\"\nalias:Int=\"3\"\njnum:Int=\"4\"\ncitation:Int=\"5\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = Aliases;
                                            }
                                      }
                                }
                                {
                                  AntibodyNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Alias;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 10;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Antibody Notes";
                                      }
                                }
                                {
                                  AntigenNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = AntibodyNote;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = AntibodyNote;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Antigen Recognition Notes";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = ATCC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                  }
                                                  {
                                                    SequencePID = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Assay = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 140;
          Group: User
            homeWidget = "Jnum\nmgiAccessionTable";
            clearForms = "ControlForm\nEditForm\nProbePrepForm\nAntibodyPrepForm\nInSituForm\nGelForm";
            editForms = "ControlForm\nEditForm\nProbePrepForm\nAntibodyPrepForm\nInSituForm\nGelForm";
              {
                MainForm = XmForm;
                Group: Widget
                  height = 775;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:AssayClear()";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Transfer = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "C: TuManage(find = MRKTransferDialog)";
                                          labelString = "Marker Transfer";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              width = 800;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Jnum = Jnum;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
 Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyReference() InitImagePane()";
                                            }
                                      }
                                }
                                {
                                  AssayTypeMenu = AssayTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiMarker = mgiMarker : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = AssayTypeMenu;
                                    leftOffset = 25;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = AssayTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-10";
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Marker = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                userDefinedAttributes = "verifyAccessionID:Widget\n";
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMarker() VerifyMarkerInTable()";
                                              Group: User
                                                verifyAccessionID = ProbeAccession;
                                            }
                                      }
                                }
                                {
                                  AssayNote = mgiNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiMarker;
                                    leftOffset = 25;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = AssayTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Note = Notes;
                                      }
                                      {
                                        NotePush = NotePush;
                                        Group: Widget
                                          labelString = "Assay Notes";
                                      }
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiMarker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  ProbePrepForm = ProbePrepForm : GXD;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AntibodyPrepForm = AntibodyPrepForm : GXD;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  separator1 = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = ProbePrepForm;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  InSituForm = InSituForm : GXD;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    topWidget = separator1;
                                }
                                {
                                  GelForm = GelForm : GXD;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separator1;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:AssayClear()";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Duplicate = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:VerifyEdit(mode = 4),\nD:Duplicate,\nD:GoHome";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Search;
                                    topOffset = 2;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicate;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 1;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: Widget
                                          managed = False;
                                        Group: User
                                          defaultOption = MGI;
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 8;
                                      }
                                }
                                {
                                  CVSpecimen = CVSpecimen : mgiOption;
                                }
                                {
                                  CVGel = CVGel : mgiOption;
                                      {
                                        StructureList = StructureList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: User
                                                targetWidget = GelLane;
                                            }
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
                    {
                      GenotypeDialog = GenotypeDialog : mgiDialog;
                          {
                            EditForm = EditForm : MGI;
                                {
                                  ID = ID;
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                }
                                {
                                  AllelePair = TableLabel : mgiTable;
                                }
                                {
                                  AlleleName = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Name";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          defaultValue = "allele name in progress";
                                      }
                                }
                          }
                    }
                    {
                      InSituResultDialog = InSituResultDialog : mgiDialog;
                    }
                    {
                      VerifyAlleleAdd = VerifyAlleleAdd : mgiDialog;
                    }
                    {
                      MRKTransferDialog = MRKTransferDialog : mgiDialog;
                          {
                            frame = XmFrame;
                          }
                          {
                            Marker = Table;
                          }
                          {
                            manualFrame = XmFrame;
                          }
                          {
                            autoFrame = XmFrame;
                          }
                          {
                            Lookup = XmFrame;
                          }
                          {
                            Buttons = Buttons;
                                {
                                  OK = DialogPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                          }
                    }
              }
        }
        {
          ProbePrepForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 175;
            vip_y = 85;
              {
                PrepID : ID = ID;
              }
              {
                label = XmLabel;
                Group: Widget
                  labelString = "Probe Prep";
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                PrepTypeMenu = PrepTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = label;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = label;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SenseMenu = SenseMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = PrepTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = PrepTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 15;
              }
              {
                LabelTypeMenu = LabelMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = PrepTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = PrepTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                CoverageMenu = CoverageMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = LabelTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = LabelTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 15;
              }
              {
                VisualizationMenu = VisualizationMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = LabelTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = LabelTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                ProbeAccession = mgiAccession : mgiDataTypes;
                Group: Widget
                  orientation = horizontal;
                  userDefinedAttributes = "markerTableID:Int(Int)=\"133\"\n";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = VisualizationMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = VisualizationMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 135;
                    {
                      ObjectID = ID;
                    }
                    {
                      AccessionID = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Probe Accession ID";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() VerifyMarkerInTable() VerifyProbeHolder()";
                            Group: User
                              required = True;
                          }
                    }
                    {
                      AccessionName = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Probe Name";
                          }
                    }
              }
              {
                Holder = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ProbeAccession;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = ProbeAccession;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Probe Holder";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 40;
                    }
              }
        }
        {
          AntibodyPrepForm = EditForm : MGI;
          Group: Widget
            managed = False;
          Group: Control
            vip_x = 175;
            vip_y = 140;
              {
                PrepID : ID = ID;
              }
              {
                label = XmLabel;
                Group: Widget
                  labelString = "Antibody Prep";
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SecondaryMenu = SecondaryMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = label;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = label;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                LabelTypeMenu = LabelMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = SecondaryMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = SecondaryMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                AntibodyAccession = mgiAccession : mgiDataTypes;
                Group: Widget
                  orientation = horizontal;
                  userDefinedAttributes = "markerTableID:Int=\"202\"\n";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = LabelTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = LabelTypeMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 201;
                    {
                      ObjectID = ID;
                    }
                    {
                      AccessionID = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Primary Antibody \nAccession ID";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() VerifyMarkerInTable() VerifyWesternBlot()";
                          }
                    }
                    {
                      AccessionName = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Antibody Name";
                          }
                    }
              }
        }
        {
          InSituForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            width = 800;
          Group: Control
            vip_x = 60;
            vip_y = 195;
              {
                Specimen = TableLabel : mgiTable;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Specimen Key,Geno Key,Age Key,Age Min, Age Max,Sex key,Fix Key,Embed Key,Hybrid Key,Specimen Label,Genotype,Age,Age Range,Age Note,Sex,Fixation,Embedding,Hybridization,Results,Notes";
                        xrtTblNumColumns = 21;
                        xrtTblPixelWidthSeries = "(all 0-9 0)";
                        xrtTblEditableSeries = "(all 0 False) (all 11-20 False) (all 13 True)";
                        userDefinedAttributes = "genotypeKey:Int(Int)=\"2\"\ngenotype:Int(Int)=\"11\"\nageKey:Int(Int)=\"3\"\nagePrefix:Int(Int)=\"12\"\nageRange:Int(Int)=\"13\"\nsexKey:Int(Int)=\"6\"\nsex:Int(Int)=\"15\"\nfixationKey:Int(Int)=\"7\"\nfixation:Int(Int)=\"16\"\nembeddingKey:Int(Int)=\"8\"\nembedding:Int(Int)=\"17\"\nhybridizationKey:Int(Int)=\"9\"\nhybridization:Int(Int)=\"18\"\nageMin:Int(Int)=\"4\"\nageMax:Int(Int)=\"5\"\nageNote:Int(Int)=\"14\"\nspecimenNote:Int(Int)=\"20\"\nspecimenKey:Int(Int)=\"1\"\nresults:Int(Int)=\"19\"\nspecimenLabel:Int(Int)=\"10\"\n";
                        xrtTblNumRows = 11;
                        xrtTblVisibleRows = 10;
                        xrtTblEnterCellCallback = "D:SetOptions";
                        xrtTblValidateCellCallback = "D:CopySpecimen,\nD:VerifyGenotype,\nD:VerifyAge(ageMenu = \"CVSpecimen\"),\nD:CommitTableCellEdit";
                        xrtTblCharWidthSeries = "(all 0 1)(all 10 14)(all 11 8)(all 15 6)(all 16 8)(all 17 9)(all 18 13)(all 19 7)(all 20 5)";
                        xrtTblTraversableSeries = "(all 0-9 False)";
                        xrtTblMaxLengthSeries = "(all 10 255)(all 14 255)(all 20 255)";
                          {
                            label = XtXrtLabel;
                            Group: Widget
                              labelString = Specimen;
                          }
                    }
              }
        }
        {
          Image = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 250;
          Group: User
            homeWidget = "Jnum\nmgiAccessionTable";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  xDim = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CopyrightNote;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "X Dimension";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          editable = False;
                                      }
                                }
                                {
                                  yDim = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = xDim;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = xDim;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Y Dimension";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          editable = False;
                                      }
                                }
                                {
                                  FigureLabel = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Figure Label";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 85;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  ImageNote = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FigureLabel;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FigureLabel;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Image Notes";
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 10;
                                      }
                                }
                                {
                                  CopyrightNote = SingleNote : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ImageNote;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ImageNote;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Copyright Notes";
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 2;
                                          editMode = multi_line_edit;
                                      }
                                }
                                {
                                  ImagePane = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CopyrightNote;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    leftOffset = 25;
                                    bottomOffset = 5;
                                    leftWidget = xDim;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1) (all 3 30) (all 4 25)";
                                          xrtTblMaxLengthSeries = "(all 4 255)";
                                          xrtTblColumnLabels = "Mode,IP Key,FT Key,Field Type,Label";
                                          userDefinedAttributes = "imagePaneKey:Int=\"1\"\nfieldTypeKey:Int=\"2\"\nfieldType:Int=\"3\"\npaneLabel:Int=\"4\"\n";
                                          xrtTblPixelHeightSeries = "(allcells allcells 30)";
                                          xrtTblAlignmentSeries = "(all all alignment_middlebegin)";
                                          xrtTblCreateWidgetCallback = "D:CreateTableMenuWidget(menu = \"FieldTypeCombo\")";
                                          xrtTblEditableSeries = "(all 0 False) (all 3 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Image Panes";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = MGIImage;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                  }
                                                  {
                                                    SequencePID = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  CVImage = CVImage : mgiOption;
                                      {
                                        FieldTypeMenu = FieldTypeMenu;
                                            Popups:
                                            {
                                              FieldTypePulldown = OptionPulldown;
                                              Group: User
                                                tableOptionKey = 2;
                                                tableOption = 3;
                                                tableForm = ImagePane;
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          GelForm = SubEditForm : MGI;
          Group: Widget
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 800;
          Group: Control
            vip_x = 175;
            vip_y = 195;
              {
                ImagePaneList = LookupList : mgiLookup;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                Group: User
                  cmd = "select _ImagePane_key, paneLabel from IMG_ImagePaneRef_View where _Refs_key =";
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 Image Panes";
                        activateCallback = "D:InitImagePane";
                      Group: User
                        defaultLabel = "Image Panes";
                    }
                    {
                      List = list;
                      Group: Widget
                        visibleItemCount = 2;
                        scrollBarDisplayPolicy = as_needed;
                        listSizePolicy = variable;
                    }
              }
              {
                GelLane = TableLabel : mgiTable;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topWidget = ImagePaneList;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 22;
                        xrtTblColumnLabels = "Mode,Gel Lane Key,Control Key,Genotype key,Structure Key,RNA Key,Age Key,Age Min,Age Max,Sex Key,Lane,Label,Control,Genotype,Structures,Sample Amt,RNA,Age,Age Range,Age Note,Sex,Notes";
                        xrtTblPixelWidthSeries = "(all 0-9 0)";
                        xrtTblTraversableSeries = "(all 0-10 False)";
                        xrtTblEditableSeries = "(all all False) (all 11 True) (all 15 True) (all 18 True)";
                        userDefinedAttributes = "laneKey:Int(Int)=\"1\"\ncontrolKey:Int(Int)=\"2\"\ngenotypeKey:Int(Int)=\"3\"\nrnaKey:Int(Int)=\"5\"\nageKey:Int(Int)=\"6\"\nageMin:Int(Int)=\"7\"\nageMax:Int(Int)=\"8\"\nsexKey:Int(Int)=\"9\"\nseqNum:Int(Int)=\"10\"\nlabel:Int(Int)=\"11\"\ncontrol:Int(Int)=\"12\"\ngenotype:Int(Int)=\"13\"\nstructures:Int(Int)=\"14\"\nsampleAmt:Int(Int)=\"15\"\nrna:Int(Int)=\"16\"\nagePrefix:Int(Int)=\"17\"\nageRange:Int(Int)=\"18\"\nageNote:Int(Int)=\"19\"\nsex:Int(Int)=\"20\"\nlaneNote:Int(Int)=\"21\"\nstructureKeys:Int(Int)=\"4\"\nverifyFloat:StringTable=\"15\"\n";
                        xrtTblCharWidthSeries = "(all 0 1)(all 10 4)(all 11 5)(all 12 7)(all 13 8)(all 14 10)(all 16 8)(all 18 9)(all 19 8)(all 20 6)(all 21 5)";
                        xrtTblEnterCellCallback = "D:SetStructure,\nD:SetOptions";
                        xrtTblValidateCellCallback = "D:CopyGelLane,\nD:VerifyFloat,\nD:VerifyGenotype,\nD:VerifyAge(ageMenu = \"CVGel\"),\nD:CommitTableCellEdit";
                        xrtTblMaxLengthSeries = "(all 11 255)(all 19 255)(all 21 255)";
                      Group: User
                        addSeqNum = True;
                          {
                            label = XtXrtLabel;
                            Group: Widget
                              labelString = "Gel Lanes";
                          }
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      CopyColumn = TablePush : mgiTable;
                      Group: Widget
                        activateCallback = "D:CopyGelLaneColumn,\nD:GoHome";
                        labelString = "Copy Column";
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = DeleteRow;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = DeleteRow;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
              }
              {
                GelRow = TableLabel : mgiTable;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = GelLane;
                  bottomAttachment = attach_form;
                  resizable = true;
                  leftWidget = GelLane;
                  bottomOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 7;
                        xrtTblEditableSeries = "(all 0-3 False) (all 5-6 False)";
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblColumnLabels = "Mode,Row Key,Unit Key,Row,Size,Units,Notes";
                        userDefinedAttributes = "rowKey:Int(Int)=\"1\"\nunitsKey:Int(Int)=\"2\"\nseqNum:Int(Int)=\"3\"\nsize:Int(Int)=\"4\"\nunits:Int(Int)=\"5\"\nrowNotes:Int(Int)=\"6\"\nbandIncrement:Int(Int)=\"6\"\nlaneKey:Int(Int)=\"8\"\nbandKey:Int(Int)=\"9\"\nstrengthKey:Int(Int)=\"10\"\nstrength:Int(Int)=\"11\"\nbandNotes:Int(Int)=\"12\"\nverifyFloat:StringTable(StringTable)=\"4\"\nbandMode:Int(Int)=\"7\"\n";
                        xrtTblCharWidthSeries = "(all 0 1)(all 3 3)(all 4-6 5)";
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                        xrtTblFrozenColumns = 6;
                        xrtTblEnterCellCallback = "D:SetOptions";
                        xrtTblValidateCellCallback = "D:CopyGelRow,\nD:VerifyFloat,\nD:VerifyGelRowUnits,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                      Group: Control
                        lockedResources = xrtTblColumnLabels;
                      Group: User
                        addSeqNum = True;
                          {
                            label = XtXrtLabel;
                            Group: Widget
                              labelString = "Gel Rows and Bands";
                          }
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      DeleteBand = TablePush : mgiTable;
                      Group: Widget
                        labelString = "Delete Band";
                        activateCallback = "D:DeleteGelBand";
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = DeleteRow;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = DeleteRow;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
              }
        }
        {
          IndexStage = Module : MGI;
          Group: Widget
            title = "GXD Index";
          Group: Control
            vip_x = 175;
            vip_y = 250;
          Group: User
            homeWidget = Marker;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiMarker = mgiMarker : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiMarker;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = mgiMarker;
                                }
                                {
                                  Note = SingleNote : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 75;
                                          rows = 2;
                                          editMode = multi_line_edit;
                                      }
                                }
                                {
                                  Stage = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Note;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Note;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 11;
                                          xrtTblNumColumns = 43;
                                          xrtTblCharWidthSeries = "(all label 30) (all 0 1)(all 1-42 4)";
                                          xrtTblDisplayHorizScrollBar = dispsb_always;
                                          xrtTblRowLabels = "In situ protein (section),In situ RNA (section),In situ protein (whole mount),In situ RNA (whole mount),Northern blot,Western blot,RT-PCR,cDNA clones,RNase protection,Nuclease S1,Primer Extension";
                                          xrtTblVisibleColumns = 15;
                                          xrtTblColumnLabels = "Mode,0.5,1,1.5,2,2.5,3,3.5,4,4.5,5,5.5,6,6.5,7,7.5,8,8.5,9,9.5,10,10.5,11,11.5,12,12.5,13,13.5,14,14.5,15,15.5,16,16.5,17,17.5,18,18.5,19,19.5,20,E,A";
                                          xrtTblEditableSeries = "(all all False)";
                                          xrtTblSelectionPolicy = select_single;
                                          xrtTblSelectCallback = "D:SetCellToX";
                                          xrtTblSelectedBackground = None;
                                          xrtTblSelectedForeground = None;
                                          userDefinedAttributes = "beginX:Int=\"1\"\nendX:Int=\"42\"\n";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = DPC;
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                          }
                    }
              }
        }
        {
          GXD = Application : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 30;
          Group: User
            initDialog = "StrainDialog\nTissueDialog";
              {
                GXDForm = XmForm;
                    {
                      GXDMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      GXDFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = GXDMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = GXDMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Antigen = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Antigen\")";
                                    traversalOn = False;
                                    labelString = Antigens;
                                }
                                {
                                  Antibody = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Antibody\")";
                                    traversalOn = False;
                                    labelString = Antibodies;
                                }
                                {
                                  Image = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Image\")";
                                    traversalOn = False;
                                    labelString = Images;
                                }
                                {
                                  Assay = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Assay\")";
                                    traversalOn = False;
                                    labelString = Assays;
                                }
                                {
                                  Dictionary = XmPushButton;
                                  Group: Widget
                                    labelString = "Anat. Dictionary";
                                    activateCallback = "D:CreateMGIModule(name = \"Dictionary\")";
                                    traversalOn = False;
                                }
                                {
                                  IndexStage = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"IndexStage\")";
                                    traversalOn = False;
                                    labelString = "GXD Index/Stages";
                                }
                                {
                                  separator = XmSeparator;
                                }
                                {
                                  Lookups = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Lookups\")";
                                    traversalOn = False;
                                    labelString = Lookups;
                                }
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog;
              }
              {
                WorkingDialog = WorkingDialog;
              }
              {
                StrainDialog = StrainDialog : mgiDialog;
                    {
                      ItemList = LookupList;
                    }
                    {
                      Selection = CharText;
                          {
                            Selection = XmLabel;
                          }
                          {
                            text = text;
                          }
                    }
              }
              {
                TissueDialog = TissueDialog : mgiDialog;
                    {
                      ItemList = LookupList;
                    }
                    {
                      Selection = CharText;
                          {
                            Selection = XmLabel;
                          }
                          {
                            text = text;
                          }
                    }
              }
        }
}


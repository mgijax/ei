Module: MGD
{
      autoCuil = False;
      release = "TeleUSE version 4.0.0 rev 1 build 0001 / RedHat Enterprise Linux 5.0 AMD64";
      lastWritten = "Fri Oct 28 07:30:53 2016";
      nodesUsed = MutantCellLineModule;
        {
          OrganismModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 965;
          Group: User
            homeWidget = Latin;
            activateButtonName = Organism;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear (clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Latin = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Organism\n(latin)";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Common = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Latin;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Latin;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Common\nName";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  OrganismType = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Common;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 75;
                                  Group: Control
                                    vipComment = "";
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 6;
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 3)(all 5 30)";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblColumnLabels = "Mode,Key,Key,Current Order,#,MGI Type";
                                          userDefinedAttributes = "currentTypeKey:Int=\"1\"\ntypeKey:Int=\"2\"\ntypeName:Int=\"3\"\n";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "MGI Types for Which \nThis Organism is Valid";
                                            }
                                      }
                                }
                                {
                                  Chromosome = OrderedTableLabel : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = OrganismType;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "chr:Int(Int)=\"4\"\nchrKey:Int=\"1\"\n";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 3)(all 4 8)";
                                          xrtTblColumnLabels = "Mode,Key,Current Order,#,Chrom";
                                          xrtTblNumColumns = 5;
                                          xrtTblVisibleRows = 10;
                                          xrtTblNumRows = 11;
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                        Group: User
                                          saveEditableSeries = "(all 0-3 False)";
                                          saveTraversableSeries = "(all 0-3 False)";
                                          currentSeqNum = 2;
                                          seqNum = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Chromosome Order\n(All Organism)";
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = AddRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = AddRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Anchor = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Chromosome;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 10)(all 4 8)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Marker,Chrom";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"4\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Anchors for Web Mini-Map\n(Mouse only)";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear (clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = Taxon;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  OrganismMGITypeList = OrganismMGITypeList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = 2;
                                          targetText = 3;
                                          targetWidget = OrganismType;
                                      }
                                }
                          }
                    }
              }
        }
        {
          RISetModule = Module : MGI;
          Group: Widget
            title = "RI Sets";
          Group: Control
            vip_x = 90;
            vip_y = 1075;
          Group: User
            homeWidget = Designation;
            activateButtonName = RISet;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                            Group: Widget
                              managed = True;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Designation = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Designation;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 15;
                                          columns = 15;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Strain1 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Designation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Designation;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain 1";
                                            }
                                      }
                                }
                                {
                                  Strain2 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Strain1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain1;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain 2";
                                            }
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Strain2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain2;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev1;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev2;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Labels = CharSText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Labels;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                          }
                    }
              }
        }
        {
          CrossModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 305;
          Group: User
            homeWidget = Name;
            activateButtonName = Cross;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                            Group: Widget
                              managed = True;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Cross;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  CrossTypeFrame = CrossTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                    rightOffset = 2;
                                }
                                {
                                  Allele = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Offspring type indicate alleles from segregating parent";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  F1 = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "F1 direction known";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Allele;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  FStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Allele;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Female Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  MStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Male Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain1 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain2 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev2;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  FAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev2;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Female Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  FAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Male Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  Progeny = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "# Progeny";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                      }
                                }
                                {
                                  Displayed = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Displayed in Lookup List";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Progeny;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Progeny;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
              }
        }
        {
          TissueModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 1185;
          Group: User
            homeWidget = Name;
            activateButtonName = Tissue;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                            Group: Widget
                              managed = True;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Tissue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  StandardFrame = StandardFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
              }
        }
        {
          MolecularSegmentModule = Module1 : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 635;
          Group: User
            homeWidget = Name;
            editForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
            clearForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
            activateButtonName = MolecularSegment;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        References = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                          valueChangedCallback = "D:ViewMolSegForm";
                                        Group: User
                                          form1 = MolMasterForm;
                                          form2 = MolReferenceForm;
                                      }
                                      {
                                        Strain = MenuPush : mgiMenu;
                                      }
                                      {
                                        Tissue = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = True;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 600;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                          {
                            ID = ID;
                          }
                          {
                            MolMasterForm = MolMasterForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                                {
                                  MolDetailForm = MolDetailForm;
                                      {
                                        ParentClone = mgiAccession : mgiDataTypes;
                                      }
                                      {
                                        VectorTypeFrame = VectorTypeFrame : mgiOption;
                                      }
                                      {
                                        InsertSite = CharText : mgiDataTypes;
                                      }
                                      {
                                        InsertSize = CharText : mgiDataTypes;
                                      }
                                      {
                                        separator = XmSeparator;
                                      }
                                      {
                                        SourceForm = SourceForm : MGI;
                                            {
                                              SourceID = ID : mgiDataTypes;
                                            }
                                            {
                                              Library = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Library;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 75;
                                                  }
                                            }
                                            {
                                              mgiCitation = mgiCitation : mgiDataTypes;
                                                  {
                                                    ObjectID = ID;
                                                  }
                                                  {
                                                    Jnum = Jnum;
                                                  {
                                                    label = XmLabel;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: User
                                                      required = False;
                                                  }
                                                  }
                                                  {
                                                    Citation = Citation;
                                                  {
                                                    label = XmLabel;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: User
                                                      required = False;
                                                  }
                                                  }
                                            }
                                            {
                                              SourceSegmentTypeFrame = SegmentTypeFrame : mgiOption;
                                                  {
                                                    SourceSegmentTypeMenu : SegmentTypeMenu = XmOptionMenu;
                                                    Group: Widget
                                                      subMenuId = SourceSegmentTypePulldown;
                                                  }
                                                  Popups:
                                                  {
                                                    SourceSegmentTypePulldown : SegmentTypePulldown = OptionPulldown;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                  }
                                                  }
                                            }
                                            {
                                              SourceVectorTypeFrame = VectorTypeFrame : mgiOption;
                                                  {
                                                    SourceVectorTypeMenu : VectorTypeMenu = XmOptionMenu;
                                                    Group: Widget
                                                      subMenuId = SourceVectorTypePulldown;
                                                  }
                                                  Popups:
                                                  {
                                                    SourceVectorTypePulldown : VectorTypePulldown = OptionPulldown;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                  }
                                                  }
                                            }
                                            {
                                              ProbeOrganismFrame = ProbeOrganismFrame : mgiOption;
                                            }
                                            {
                                              Strain = Strain : mgiDataTypes;
                                            }
                                            {
                                              Tissue = Tissue : mgiDataTypes;
                                            }
                                            {
                                              Description = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "Tissue\nDescription";
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 50;
                                                  }
                                            }
                                            {
                                              CellLine = mgiVerify : mgiDataTypes;
                                                  {
                                                    Verify = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "Cell Line";
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 50;
                                                  }
                                                  }
                                                  {
                                                    CellLineID : VerifyID = ID : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: User
                                                      defaultValue = 316335;
                                                  }
                                                  }
                                            }
                                            {
                                              AgeFrame = AgeFrame : mgiOption;
                                            }
                                            {
                                              Age = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 20;
                                                      maxLength = 50;
                                                  }
                                            }
                                      }
                                }
                                {
                                  separator1 = XmSeparator;
                                }
                                {
                                  SegmentTypeFrame : SegmentTypeMenu = SegmentTypeFrame;
                                }
                                {
                                  Name = CharText;
                                }
                                {
                                  MJnum = mgiCitation;
                                }
                                {
                                  Region = CharText;
                                }
                                {
                                  separator = XmSeparator;
                                }
                                {
                                  MolPrimerForm = MolPrimerForm;
                                }
                          }
                          {
                            MolReferenceForm = MolReferenceForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                                {
                                  ReferenceID = ID;
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                }
                                {
                                  AccRef = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMSequenceType = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RuleyHECellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IshidaYCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NorCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Lexicon = AccToggle : mgiOption;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  References = ViewToggle : mgiControl;
                                  Group: Widget
                                    valueChangedCallback = "D:ViewMolSegForm";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModificationHistory;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                  Group: User
                                    form1 = MolMasterForm;
                                    form2 = MolReferenceForm;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    All = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                                  }
                                                  {
                                                    MolecularSegments = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 63, clearLists = 3)";
                                                      labelString = "Molecular Segments";
                                                  }
                                                  {
                                                    References = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 65, clearLists = 4)";
                                                      labelString = References;
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: Widget
                                                managed = False;
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 8;
                                      }
                                }
                                {
                                  ReferenceList = LookupList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "0 References";
                                        Group: User
                                          defaultLabel = References;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectReference";
                                      }
                                }
                                {
                                  LibraryList = LibraryList : mgiLookup;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          MolMasterForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 90;
            vip_y = 1900;
              {
                ID = ID;
              }
              {
                SegmentTypeFrame = SegmentTypeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Name = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SegmentTypeFrame;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Name;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 30;
                      Group: User
                        required = True;
                    }
              }
              {
                MJnum = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Name;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Name;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-2";
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                      Group: Widget
                        managed = False;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                Region = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Name;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Region\nCovered";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Region;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolPrimerForm = MolPrimerForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                MolDetailForm = MolDetailForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      ParentClone = mgiAccession : mgiDataTypes;
                    }
                    {
                      VectorTypeFrame = VectorTypeFrame : mgiOption;
                    }
                    {
                      InsertSite = CharText : mgiDataTypes;
                    }
                    {
                      InsertSize = CharText : mgiDataTypes;
                    }
                    {
                      separator = XmSeparator;
                    }
                    {
                      SourceForm = SourceForm : MGI;
                          {
                            SourceID = ID : mgiDataTypes;
                          }
                          {
                            Library = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Library;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 75;
                                }
                          }
                          {
                            mgiCitation = mgiCitation : mgiDataTypes;
                                {
                                  ObjectID = ID;
                                }
                                {
                                  Jnum = Jnum;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = text;
                                        Group: User
                                          required = False;
                                      }
                                }
                                {
                                  Citation = Citation;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = text;
                                        Group: User
                                          required = False;
                                      }
                                }
                          }
                          {
                            SourceSegmentTypeFrame = SegmentTypeFrame : mgiOption;
                                {
                                  SourceSegmentTypeMenu : SegmentTypeMenu = XmOptionMenu;
                                  Group: Widget
                                    subMenuId = SourceSegmentTypePulldown;
                                }
                                Popups:
                                {
                                  SourceSegmentTypePulldown : SegmentTypePulldown = OptionPulldown;
                                      {
                                        SearchAll = SearchAll : mgiOption;
                                      }
                                }
                          }
                          {
                            SourceVectorTypeFrame = VectorTypeFrame : mgiOption;
                                {
                                  SourceVectorTypeMenu : VectorTypeMenu = XmOptionMenu;
                                  Group: Widget
                                    subMenuId = SourceVectorTypePulldown;
                                }
                                Popups:
                                {
                                  SourceVectorTypePulldown : VectorTypePulldown = OptionPulldown;
                                      {
                                        SearchAll = SearchAll : mgiOption;
                                      }
                                }
                          }
                          {
                            ProbeOrganismFrame = ProbeOrganismFrame : mgiOption;
                          }
                          {
                            Strain = Strain : mgiDataTypes;
                          }
                          {
                            Tissue = Tissue : mgiDataTypes;
                          }
                          {
                            Description = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = "Tissue\nDescription";
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 50;
                                }
                          }
                          {
                            CellLine = mgiVerify : mgiDataTypes;
                                {
                                  Verify = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cell Line";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  CellLineID : VerifyID = ID : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = text;
                                        Group: User
                                          defaultValue = 316335;
                                      }
                                }
                          }
                          {
                            AgeFrame = AgeFrame : mgiOption;
                          }
                          {
                            Age = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 20;
                                    maxLength = 50;
                                }
                          }
                    }
              }
              {
                separator1 = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = MolDetailForm;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolMarkerForm = MolMarkerForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator1;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MolMarkerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 90;
            vip_y = 1845;
              {
                Marker = ReferenceTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Current Key,New Key,Refs Key,Chr,Marker,R,J#,Citation,Modified By,Date";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 4)(all 5 20)(all 6 1)(all 7 10)(all 8 40)(all 9 20)(all 10 10)";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblMaxLengthSeries = "(all 4 8)(all 5 40)(all 6 1)(all 8 255)";
                        xrtTblNumColumns = 11;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyReference,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerChr:Int(Int)=\"4\"\nmarkerColumns:Int(Int)=\"1\"\nmarkerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"5\"\nrelationship:Int(Int)=\"6\"\nmodifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                        xrtTblVisibleRows = 5;
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                      Group: User
                        citation = 8;
                        jnum = 7;
                        refsCurrentKey = 3;
                        refsKey = 3;
                        requiredColumns = 3;
                    }
              }
              {
                MolNote = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = mgiNoteForm;
                  leftOffset = 5;
                  bottomOffset = 2;
                  rightOffset = 5;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 91;
                    }
              }
              {
                MolSeqNoteFrame = NoteFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Marker;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      MolSeqNoteMenu : NoteMenu = XmOptionMenu;
                      Group: Widget
                        subMenuId = MolSeqNotePulldown;
                        labelString = "Pick List of Molecular Segment Notes";
                    }
                    Popups:
                    {
                      MolSeqNotePulldown : NotePulldown = OptionPulldown : mgiOption;
                          {
                            PrimerGenerated = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Primer generated";
                            Group: User
                              note = "This cDNA was generated by PCR using primers MGI:*";
                              noteWidget = MolNote;
                          }
                          {
                            ABITaqMan = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "ABI TaqMan Gene Expression Assay";
                            Group: User
                              note = "ABI TaqMan Gene Expression Assay probe/primer set.";
                              noteWidget = MolNote;
                          }
                          {
                            Chimeric = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = Chimeric;
                            Group: User
                              note = "Chimeric:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence appears to be artifactually chimeric.";
                              noteWidget = MolNote;
                          }
                          {
                            Same5 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "5'-overlap same strand";
                            Group: User
                              note = "5'-overlap same strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that initiates at a site within a linked upstream gene, where the upstream gene is transcribed in the same direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Same3 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "3'-overlap same strand";
                            Group: User
                              note = "3'-overlap same strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that extends (reads-through) into a linked downstream gene, where the downstream gene is transcribed in the same direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Opposite5 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "5'-overlap opposite strand";
                            Group: User
                              note = "5'-overlap opposite strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that initiates at a site within a linked upstream gene, where the upstream gene is transcribed in the opposite direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Opposite3 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "3'-overlap opposite strand";
                            Group: User
                              note = "3'-overlap opposite strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that extends (reads-through) into a linked downstream gene, where the downstream gene is transcribed in the opposite direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Intron = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Intron-Containing";
                            Group: User
                              note = "Intron-Containing:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This cDNA sequence appears to contain intronic sequence as a consequence of incomplete transcript processing.";
                              noteWidget = MolNote;
                          }
                          {
                            FrameShift = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Frame-Shift";
                            Group: User
                              note = "Frame-Shift:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. Conceptual translation of this sequence reveals frame shift errors in the presumed coding region, which may be due to unreliable sequence data.";
                              noteWidget = MolNote;
                          }
                          {
                            Undetermined = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Undetermined Problem Sequence";
                            Group: User
                              note = "Undetermined:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. The artifact may have been introduced during the cloning process, or may be due to unreliable sequence data.";
                              noteWidget = MolNote;
                          }
                          {
                            DownstreamArich = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Downstream A-rich region primed";
                            Group: User
                              note = "Downstream A-rich primed:  MGI curatorial staff have found evidence of \nartifact in the sequence of this molecular segment. This cDNA clone appears to \nbe the product of reverse transcription primed internally at downstream A-rich \nsequences.";
                              noteWidget = MolNote;
                          }
                          {
                            ReversedClone = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Reversed clone";
                            Group: User
                              note = "Reversed clone: MGI curatorial staff have found evidence of artifact in the \nsequence of this molecular segment. The sequence of this cDNA clone appears to be\nreversed.";
                              noteWidget = MolNote;
                          }
                          {
                            Contaiminated = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Contaminated clone";
                            Group: User
                              note = "Contaminated clone: MGI curatorial staff have found evidence of artifact in the \nsequence of this molecular segment. The sequence of this cDNA clone appears to \nbe from species other than mouse.";
                              noteWidget = MolNote;
                          }
                          {
                            KFMemorial = AppendNotePush : mgiDataTypes;
                            Group: User
                              noteWidget = MolNote;
                              note = "This clone is derived from a gene that produces alternate transcripts.";
                          }
                    }
              }
              {
                mgiNoteForm = mgiNoteForm : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MolSeqNoteFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
              }
        }
        {
          MolReferenceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
            managed = False;
          Group: Control
            vip_x = 90;
            vip_y = 2010;
          Group: User
            homeWidget = Jnum;
            queryList = ReferenceList;
              {
                ReferenceID : ID = ID;
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                AccRef = mgiAccessionTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 6;
                        xrtTblNumRows = 10;
                    }
                    {
                      Add = TablePush;
                    }
                    {
                      Delete = TablePush;
                    }
                    {
                      AccSourceFrame = AccSourceFrame;
                          {
                            AccSourceMenu = XmOptionMenu;
                            Group: User
                              defaultOption = NSequence;
                          }
                          Popups:
                          {
                            AccSourcePulldown = OptionPulldown;
                            Group: User
                              tableForm = AccRef;
                                {
                                  MGI = AccToggle;
                                }
                                {
                                  MRK = AccToggle : mgiOption;
                                }
                                {
                                  J = AccToggle;
                                }
                                {
                                  PubMed = AccToggle : mgiOption;
                                }
                                {
                                  DXDOI = AccToggle : mgiOption;
                                }
                                {
                                  GOREF = AccToggle : mgiOption;
                                }
                                {
                                  NSequence = AccToggle;
                                  Group: Widget
                                    set = True;
                                    managed = True;
                                }
                                {
                                  EnsemblGeneModel = AccToggle : mgiOption;
                                }
                                {
                                  EnsemblProtein = AccToggle : mgiOption;
                                }
                                {
                                  EnsemblTranscript = AccToggle : mgiOption;
                                }
                                {
                                  EntrezGene = AccToggle : mgiOption;
                                }
                                {
                                  NCBIGeneModel = AccToggle : mgiOption;
                                }
                                {
                                  NCBIGeneModelEvidence = AccToggle : mgiOption;
                                }
                                {
                                  RefSeq = AccToggle : mgiOption;
                                }
                                {
                                  SWISSPROT = AccToggle;
                                }
                                {
                                  TrEMBL = AccToggle : mgiOption;
                                }
                                {
                                  VEGAGeneModel = AccToggle : mgiOption;
                                }
                                {
                                  VEGAProtein = AccToggle : mgiOption;
                                }
                                {
                                  VEGATranscript = AccToggle : mgiOption;
                                }
                                {
                                  AllenBrainAtlas = AccToggle : mgiOption;
                                }
                                {
                                  Affy1 = AccToggle : mgiOption;
                                }
                                {
                                  Affy430 = AccToggle : mgiOption;
                                }
                                {
                                  AffyU74 = AccToggle : mgiOption;
                                }
                                {
                                  ArrayExpress = AccToggle : mgiOption;
                                }
                                {
                                  CCDS = AccToggle : mgiOption;
                                }
                                {
                                  EC = AccToggle;
                                }
                                {
                                  FuncBase = AccToggle : mgiOption;
                                }
                                {
                                  HomoloGene = AccToggle : mgiOption;
                                }
                                {
                                  miRBase = AccToggle : mgiOption;
                                }
                                {
                                  PDB = AccToggle : mgiOption;
                                }
                                {
                                  ProteinOntology = AccToggle : mgiOption;
                                }
                                {
                                  RIKENCluster = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RIKENClone = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RIKENFANTOM = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  UniGene = AccToggle : mgiOption;
                                }
                                {
                                  QTLArchive = AccToggle : mgiOption;
                                }
                                {
                                  InterPro = AccToggle : mgiOption;
                                }
                                {
                                  IMAGE = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  MGC = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  WashU = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  ATCC = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  MGIImage = AccToggle : mgiOption;
                                }
                                {
                                  BGEM = AccToggle : mgiOption;
                                }
                                {
                                  GUDMAP = AccToggle : mgiOption;
                                }
                                {
                                  CREX = AccToggle : mgiOption;
                                }
                                {
                                  HYEX = AccToggle : mgiOption;
                                }
                                {
                                  INEX = AccToggle : mgiOption;
                                }
                                {
                                  FSEX = AccToggle : mgiOption;
                                }
                                {
                                  RIEX = AccToggle : mgiOption;
                                }
                                {
                                  TEXT = AccToggle : mgiOption;
                                }
                                {
                                  TXEX = AccToggle : mgiOption;
                                }
                                {
                                  E = AccToggle : mgiOption;
                                }
                                {
                                  HGNC = AccToggle : mgiOption;
                                }
                                {
                                  OMIM = AccToggle : mgiOption;
                                }
                                {
                                  RGD = AccToggle : mgiOption;
                                }
                                {
                                  NIA = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  NIA7 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  NIA15K = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RPCI23 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RPCI24 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  UniSTS = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  BROAD = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
              }
              {
                Notes = SingleNote : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = AccRef;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = AccRef;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText : mgiDataTypes;
                      Group: Widget
                        rows = 2;
                        columns = 90;
                    }
              }
              {
                HasSequence = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Has Sequence Presented";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AccRef;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 25;
              }
              {
                RMAP = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "RMAP Info";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = HasSequence;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = HasSequence;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                RFLV = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 10;
                        xrtTblColumnLabels = "Mode,RFLV key,Allele key,Marker key,Strain keys,Endo,Marker,Allele,Fragments,Strains";
                        xrtTblMaxLengthSeries = "(all 5 15)(all 6 25)(all 7 30)(all 8 255)(all 9 5000)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 5-7 10)(all 8 20)(all 9 100)";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblValidateCellCallback = "D:CopyEndoMarker,\nD:VerifyMarker,\nD:VerifyStrains,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "rflvKey:Int=\"1\"\nalleleKey:Int=\"2\"\nmarkerKey:Int=\"3\"\nstrainKeys:Int=\"4\"\nendo:Int=\"5\"\nmarkerSymbol:Int=\"6\"\nallele:Int=\"7\"\nfragments:Int=\"8\"\nstrains:Int=\"9\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                        xrtTblNumRows = 11;
                        xrtTblVisibleRows = 10;
                        xrtTblPixelWidthSeries = "(all 0-4 0)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                      Group: Widget
                        activateCallback = "D:InsertTableRow";
                        labelString = "Insert Row";
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = DeleteRow;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = DeleteRow;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
              }
              {
                Alias = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = HasSequence;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = HasSequence;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 3;
                        xrtTblMaxLengthSeries = "(all 2 30)";
                        xrtTblColumnLabels = "Mode,Alias key,Alias";
                        xrtTblCharWidthSeries = "(all 0 1)(all 2 30)";
                        xrtTblEditableSeries = "(all 0-1 False)";
                        xrtTblPixelWidthSeries = "(all 0-1 0)";
                        xrtTblTraversableSeries = "(all 0-1 False)";
                        userDefinedAttributes = "aliasKey:Int=\"1\"\nalias:Int=\"2\"\n";
                        xrtTblVisibleRows = 3;
                    }
              }
        }
        {
          MolPrimerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 90;
            vip_y = 1955;
              {
                Sequence1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 1";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 40;
                        maxLength = 80;
                    }
              }
              {
                Sequence2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence1;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 2";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 80;
                        columns = 40;
                    }
              }
              {
                ProductSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence2;
                  bottomAttachment = attach_form;
                  resizable = true;
                  bottomOffset = 5;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Product Size";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 20;
                    }
              }
        }
        {
          MolecularSourceModule = Module : MGI;
          Group: Widget
            closeWindowCallback = "D:MolecularSourceExit";
          Group: Control
            vip_x = 90;
            vip_y = 690;
          Group: User
            editForms = "ControlForm\nEditForm\nSourceForm";
            clearForms = "ControlForm\nEditForm\nSourceForm";
            homeWidget = Library;
            activateButtonName = MolecularSource;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MolecularSourceExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  SourceForm = SourceForm : MGI;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        SourceID = ID : mgiDataTypes;
                                      }
                                      {
                                        Library = CharText : mgiDataTypes;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        mgiCitation = mgiCitation : mgiDataTypes;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        SourceSegmentTypeFrame = SegmentTypeFrame : mgiOption;
                                        Group: Widget
                                          managed = True;
                                            {
                                              SourceSegmentTypeMenu = XmOptionMenu;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                      {
                                        SourceVectorTypeFrame = VectorTypeFrame : mgiOption;
                                        Group: Widget
                                          managed = True;
                                            {
                                              SourceVectorTypeMenu = XmOptionMenu;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                      {
                                        ProbeOrganismFrame = ProbeOrganismFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          leftOffset = 5;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = SourceSegmentTypeFrame;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        Strain = Strain : mgiDataTypes;
                                      }
                                      {
                                        Tissue = Tissue : mgiDataTypes;
                                      }
                                      {
                                        Description = CharText : mgiDataTypes;
                                      }
                                      {
                                        CellLine = mgiVerify : mgiDataTypes;
                                      }
                                      {
                                        AgeFrame = AgeFrame : mgiOption;
                                      }
                                      {
                                        Age = CharText : mgiDataTypes;
                                      }
                                      {
                                        GenderFrame = GenderFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = AgeFrame;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = AgeFrame;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = IMAGELibrary;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          ExptTextForm = ExptForm : MGD;
          Group: Widget
            rubberPositioning = False;
            height = 450;
            width = 600;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 90;
            vip_y = 1680;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topOffset = 0;
                  bottomOffset = 2;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        rows = 30;
                    }
              }
        }
        {
          ExptForm = EditForm : MGI;
          Group: Widget
            width = 600;
            height = 900;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 90;
            vip_y = 1405;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                  bottomOffset = 2;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 1;
                    }
              }
        }
        {
          ExptHybridForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 90;
            vip_y = 1515;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Concordance = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 50;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 2 10)(all 3 3)(all 4 20)(all 5-8 5)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker/Chromosome,Cpp,Cpn,Cnp,Cnn";
                        xrtTblNumColumns = 9;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5-8 10)";
                        xrtTblValidateCellCallback = "D:SetHybrid,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"4\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\ncpp:Int=\"5\"\ncpn:Int=\"6\"\ncnp:Int=\"7\"\ncnn:Int=\"8\"\nmarkerSymbolSave:Int=\"4\"\n";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                ChrOrMarker = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
              }
        }
        {
          ExptInSituForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 90;
            vip_y = 1570;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
                    {
                      StrainID = XmXrtAligner;
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Total = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Grains Scored";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Grains = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Total;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Total;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Grains Correct Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Other = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Grains;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Grains;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Most # Grains Other Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Widget
                  x = "-1";
                  y = "-1";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Count";
                        xrtTblNumColumns = 5;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all all 10)";
                        userDefinedAttributes = "region:Int(Int)=\"3\"\ngrains:Int(Int)=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                    }
                    {
                      EditOrder = toggle : mgiDataTypes;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
        }
        {
          ExptFISHForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 90;
            vip_y = 1460;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
                    {
                      StrainID = XmXrtAligner;
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Label = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Label;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 50;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Label;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Label;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Single = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Single Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Double = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Single;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Single;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Double Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Single Sig,Double Sig";
                        xrtTblMaxLengthSeries = "(all all 10)";
                        xrtTblNumColumns = 6;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        userDefinedAttributes = "region:Int=\"3\"\nsingleSignal:Int=\"4\"\ndoubleSignal:Int=\"5\"\n";
                    }
              }
        }
        {
          ExptRIForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 90;
            vip_y = 1625;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                mgiRISet = mgiRISet : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
                    {
                      RIID = ID;
                    }
                    {
                      Origin = CharText : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev1;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
                    {
                      Abbrev2 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev2;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
              }
              {
                Animal = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiRISet;
                  leftOffset = 120;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiRISet;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Animal;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 60;
                    }
              }
              {
                RIHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Animal;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 3 3)(all 4 20)(all 5 60)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker,Haplotypes";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5 255)";
                        xrtTblValidateCellCallback = "D:VerifyExptRIAllele,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"4\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\nhaplotype:Int(Int)=\"5\"\n";
                        xrtTblNumColumns = 6;
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                RITwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RIHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RIHaplotype;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 20)(all 7-8 10)(all 9 20)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2,Discordant,Strains,RI Sets";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 10;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\ndiscordant:Int=\"7\"\nstrains:Int=\"8\"\nsets:Int=\"9\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RITwoPt;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RITwoPt;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
              }
        }
        {
          ExptCrossForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 90;
            vip_y = 1240;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                mgiCross = mgiCross : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossTypeFrame = CrossTypeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = mgiCross;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = mgiCross;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 10;
              }
              {
                Female = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiCross;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Female;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                FStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Female;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Female Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Male = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Female;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = FStrain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Male;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                MStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Male;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Male Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Abbrev1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MStrain;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = "-10";
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain1 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Abbrev2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain2 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Allele = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Offspring type indicate \nalleles from segregating parent";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                F1 = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "F1 direction known";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain2;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Displayed = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = F1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = F1;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev2;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 5)(all 4 20)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Mice,Haplotype";
                        xrtTblNumColumns = 5;
                        xrtTblValidateCellCallback = "D:VerifyExptHaplotypes,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        xrtTblMaxLengthSeries = "(all 4 255)";
                        userDefinedAttributes = "mice:Int=\"3\"\nhaplotype:Int=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
              {
                CrossTwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = CrossHaplotype;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_opposite_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 10)(all 7-87 8)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2, Recomb,Parental";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 9;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nrecomb:Int=\"7\"\nparental:Int=\"8\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit \nOrder";
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CrossHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topOffset = 2;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 2;
                    }
              }
        }
        {
          ExptMasterForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 775;
          Group: Control
            vip_x = 90;
            vip_y = 1735;
          Group: User
            homeWidget = Jnum;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 10;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                Marker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 200;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Current Order,key,Marker key,#,Primary Markers";
                        xrtTblNumRows = 25;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 20;
                        xrtTblMaxLengthSeries = "(all 5 50)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"5\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\nrefMarkerKey:Int=\"2\"\n";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5 40)";
                        xrtTblNumColumns = 6;
                      Group: User
                        seqNum = 4;
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                    }
              }
              {
                DisplayMarker = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Only display the marker \nbeing queried.";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiCitation;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: Control
                  vipComment = "XmToggleButtonGadget sets nontransitory state data within an application. Usually this gadget consists of an indicator (square or diamond) with either text or a pixmap to its right. The indicator implies a selected or unselected state. Normally, mouse button 1 is used to arm and activate the XmToggleButtonGadget.";
              }
        }
        {
          ExptDetailForm1 = EditForm : MGI;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 1000;
          Group: Control
            vip_x = 90;
            vip_y = 1350;
          Group: User
            homeWidget = Chromosome;
            queryList = ExperimentList;
            conditionalList = ExperimentList;
              {
                ID = ID;
              }
              {
                Jnum = Jnum : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = text;
                      Group: User
                        required = False;
                    }
              }
              {
                ExptTypeFrame = ExptTypeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Jnum;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Jnum;
                  topOffset = 5;
              }
              {
                ChromosomeFrame = ChromosomeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ExptTypeFrame;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = ExptTypeFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      ChromosomePulldown = OptionPulldown;
                      Group: User
                        sql = "select chromosome, chromosome as label, sequenceNum \nfrom MRK_Chromosome where _Organism_key = 1\norder by sequenceNum";
                    }
              }
              {
                ExptMarker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Jnum;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 12;
                        xrtTblCharWidthSeries = "(all 0 1)(all 6 3)(all 7 25)(all 8 15)(all 9-10 20)(all 11 7)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,Chr,Allele key,Assay key,#,Marker,Allele,Assay Type,Description,Matrix?";
                        xrtTblEditableSeries = "(all 0-6 False)";
                        xrtTblPixelWidthSeries = "(all 0-5 0)";
                        xrtTblTraversableSeries = "(all 0-6 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyExptChromosome,\nD:VerifyAllele,\nD:VerifyExptAssay,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 10;
                        xrtTblMaxLengthSeries = "(all 7 40)(all 8 20)(all 9 80)(all 10 255)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nalleleKey:StringTable=\"4\"\nassayKey:Int(Int)=\"5\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"3\"\nmarkerColumns:Int(Int)=\"1\"\nalleleSymbol:StringTable=\"8\"\nassay:Int(Int)=\"9\"\ndescription:Int(Int)=\"10\"\nyesno:Int(Int)=\"11\"\n";
                        xrtTblNumRows = 20;
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                      Group: User
                        seqNum = 6;
                        saveTraversableSeries = "(all 0-6 False)";
                        saveEditableSeries = "(all 0-6 False)";
                    }
              }
              {
                ExptTextForm = ExptTextForm : MGD;
                Group: Widget
                  managed = True;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptInSituForm = ExptInSituForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Total = CharText;
                    }
                    {
                      Grains = CharText;
                    }
                    {
                      Other = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptFISHForm = ExptFISHForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Label = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Single = CharText;
                    }
                    {
                      Double = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptCrossForm = ExptCrossForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      FStrain = Strain : mgiDataTypes;
                    }
                    {
                      Male = CharText;
                    }
                    {
                      MStrain = Strain : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText;
                    }
                    {
                      Strain1 = Strain;
                    }
                    {
                      Abbrev2 = CharText;
                    }
                    {
                      Strain2 = Strain;
                    }
                    {
                      Allele = toggle;
                    }
                    {
                      F1 = toggle;
                    }
                    {
                      Displayed = toggle;
                    }
                    {
                      CrossHaplotype = OrderedTable;
                    }
                    {
                      CrossTwoPt = OrderedTable;
                    }
                    {
                      Statistics = Statistics;
                    }
              }
              {
                ExptHybridForm = ExptHybridForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptRIForm = ExptRIForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MGD = Application : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 30;
          Group: User
            initDialog = "StrainDialog\nTissueDialog";
              {
                MGDForm = XmForm;
                    {
                      MGDMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      MGDFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MGDMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MGDMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Reference = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Reference\")";
                                    labelString = References;
                                    traversalOn = False;
                                }
                                {
                                  Marker = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Marker\")";
                                    labelString = Markers;
                                    traversalOn = False;
                                }
                                {
                                  Allele = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Allele\")";
                                    labelString = Alleles;
                                    traversalOn = False;
                                }
                                {
                                  Genotypes = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Genotype\")";
                                    labelString = Genotypes;
                                    traversalOn = False;
                                }
                                {
                                  MolecularSegment = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSegment\")";
                                    labelString = "Molecular Probes & Segments";
                                    traversalOn = False;
                                }
                                {
                                  Mapping = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLDP\")";
                                    labelString = Mapping;
                                    traversalOn = False;
                                }
                                {
                                  GOVocAnnot = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"GOVocAnnot\")";
                                    labelString = "GO Vocabulary Annotations";
                                    traversalOn = False;
                                }
                                {
                                  MPVocAnnot = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MPVocAnnot\")";
                                    labelString = "MP Vocabulary Annotations";
                                    traversalOn = False;
                                }
                                {
                                  OMIMVocAnnot = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"OMIMVocAnnot\")";
                                    labelString = "OMIM Vocabulary Annotations";
                                    traversalOn = False;
                                }
                                {
                                  TDCVocAnnot = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"TDCVocAnnot\")";
                                    labelString = "TDC Annotations";
                                    traversalOn = False;
                                    managed = True;
                                }
                                {
                                  Image = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Image\")";
                                    traversalOn = False;
                                    labelString = Images;
                                }
                                {
                                  AlleleDerivation = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"AlleleDerivation\")";
                                    labelString = "Allele Derivations";
                                    traversalOn = False;
                                }
                                {
                                  Strain = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Strains\")";
                                    traversalOn = False;
                                    labelString = Strains;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  SimpleVocab = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"SimpleVocab\")";
                                    labelString = "Simple Vocabulary";
                                    traversalOn = False;
                                }
                                {
                                  ControlledVocab = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"ControlledVocab\")";
                                    labelString = "Controlled Vocab";
                                    traversalOn = False;
                                }
                                {
                                  NonMouseMarkers = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MarkerNonMouse\")";
                                    labelString = "Markers (non-mouse)";
                                    traversalOn = False;
                                }
                                {
                                  MolecularSource = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSource\")";
                                    labelString = "Clone Libraries";
                                    traversalOn = False;
                                }
                                {
                                  Organism = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Organism\")";
                                    traversalOn = False;
                                }
                                {
                                  Cross = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Cross\")";
                                    labelString = Crosses;
                                    traversalOn = False;
                                }
                                {
                                  RISet = XmPushButton;
                                  Group: Widget
                                    labelString = "RI Sets";
                                    activateCallback = "D:CreateMGIModule(name = \"RISet\")";
                                    traversalOn = False;
                                }
                                {
                                  Tissue = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Tissues\")";
                                    traversalOn = False;
                                    labelString = Tissues;
                                }
                                {
                                  Translation = XmPushButton;
                                  Group: Widget
                                    labelString = Translations;
                                    activateCallback = "D:CreateMGIModule(name = \"Translation\")";
                                    traversalOn = False;
                                }
                                {
                                  UserRole = XmPushButton;
                                  Group: Widget
                                    labelString = "User Permissions";
                                    activateCallback = "D:CreateMGIModule(name = \"UserRole\")";
                                    traversalOn = False;
                                }
                                {
                                  ActualLogical = XmPushButton;
                                  Group: Widget
                                    labelString = "Actual/Logical DBs";
                                    activateCallback = "D:CreateMGIModule(name = \"ActualLogical\")";
                                    traversalOn = False;
                                    managed = True;
                                }
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog;
              }
              {
                WorkingDialog = WorkingDialog;
              }
              {
                StrainDialog = StrainDialog : mgiDialog;
              }
              {
                TissueDialog = TissueDialog : mgiDialog;
              }
        }
        {
          MarkerNonMouseModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 525;
          Group: User
            homeWidget = Symbol;
            activateButtonName = MarkerNonMouse;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Symbol;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiOrganism = mgiOrganism : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Organism = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiOrganism;
                                    leftWidget = mgiOrganism;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Chromosome = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Chromosome;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 8;
                                          maxLength = 8;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                    leftWidget = mgiOrganism;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-4 0) (all 9-10 0)";
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = NSequence;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = EntrezGene;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = False;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  OrganismList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Organism_key, organism from MGI_Organism_Marker_View order by organism";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 10;
                                        Group: User
                                          targetWidget = mgiOrganism;
                                          targetText = Organism;
                                          targetKey = ObjectID;
                                      }
                                }
                          }
                    }
              }
        }
        {
          ReferenceModule = Module : MGI;
          Group: Widget
            title = "Master Bibliography";
          Group: Control
            vip_x = 90;
            vip_y = 1020;
          Group: User
            homeWidget = Authors;
            clearForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
            editForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
            activateButtonName = Reference;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearReference()";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                          }
                          {
                            NLM = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "C: TuManage(find = NLMDialog)";
                              labelString = NLM;
                          }
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  RefTypeFrame = RefTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  NLMStatusFrame = NLMStatusFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = RefTypeFrame;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RefTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ReviewStatusFrame = ReviewStatusFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RefTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RefTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  IsReviewFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ReviewStatusFrame;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ReviewStatusFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = No;
                                      {
                                        IsReviewMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = IsReviewPulldown;
                                          labelString = "Is Review Article?";
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        IsReviewPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  Authors = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ReviewStatusFrame;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = ReviewStatusFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Authors;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  PrimaryAuthor = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Primary Author";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                          columns = 60;
                                          inTabGroup = False;
                                          traversalOn = False;
                                          editable = False;
                                      }
                                }
                                {
                                  Title = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Title;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  mgiJournal = mgiJournal : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Title;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Title;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiDate = mgiDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiJournal;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiJournal;
                                    topOffset = 2;
                                      {
                                        Date = Date;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 15;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Volume = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiDate;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Volume;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 20;
                                          columns = 10;
                                      }
                                }
                                {
                                  Issue = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Volume;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Volume;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Issue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 25;
                                          columns = 10;
                                      }
                                }
                                {
                                  Page = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Issue;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Issue;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Page;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  DBS = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = DBS;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                      }
                                }
                                {
                                  DataSets = DataSets : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Page;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        DataSetsForm = XmForm;
                                        Group: Widget
                                          rubberPositioning = False;
                                          resizePolicy = resize_any;
                                            {
                                              RefDBSStatus = RefDBSStatus : mgiTable;
                                              Group: Constraint
                                                leftAttachment = attach_form;
                                                rightAttachment = attach_widget;
                                                rightWidget = RefDBSNonStatus;
                                                topAttachment = attach_form;
                                                bottomAttachment = attach_none;
                                                resizable = true;
                                                rightOffset = 10;
                                            }
                                            {
                                              RefDBSNonStatus = RefDBSNonStatus : mgiTable;
                                              Group: Constraint
                                                leftAttachment = attach_none;
                                                rightAttachment = attach_form;
                                                topAttachment = attach_form;
                                                bottomAttachment = attach_none;
                                                resizable = true;
                                            }
                                      }
                                }
                                {
                                  notebookForm = notebookForm : mgiNoteBook;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = DataSets;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                      {
                                        separator = XmSeparatorGadget;
                                      }
                                      {
                                        legend = XmLabelGadget;
                                        Group: Widget
                                          labelString = "1 = Alleles, 2 = Markers, 3 = Notes, 4 = Abstract, 5 = Book";
                                      }
                                      {
                                        notebook = notebook : mgiNoteBook;
                                            {
                                              RefAllele = Table : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      userDefinedAttributes = "markerKey:Int(Int)=\"4\"\nmarkerSymbol:Int(Int)=\"8\"\nalleleKey:StringTable(StringTable)=\"3\"\nalleleSymbol:StringTable(StringTable)=\"6\"\nassocKey:Int(Int)=\"1\"\nrefsTypeKey:Int(Int)=\"2\"\nrefsType:Int(Int)=\"5\"\nmarkerColumns:Int(Int)\nalleleID:StringTable(StringTable)=\"7\"\n";
                                                      xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyAllele,\nD:CommitTableCellEdit";
                                                      xrtTblNumColumns = 9;
                                                      xrtTblColumnLabels = "Mode,Key,Key,Key,Key,Type,Allele,Allele ID,Marker";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 15)(all 6 40)(all 7 20)(all 8 30)";
                                                      xrtTblEditableSeries = "(all 0-5 False)(all 8 False)";
                                                      xrtTblTraversableSeries = "(all 0-5 False) (all 8 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-4 0)";
                                                      xrtTblNumRows = 10;
                                                      xrtTblVisibleRows = 9;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_form;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                    Group: User
                                                      saveTraversableSeries = "(all 0-5 False) (all 8 False)";
                                                      saveEditableSeries = "(all 0-5 False) (all 8 False)";
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      activateCallback = "D:AddRefTypeRow";
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 2;
                                                      leftWidget = Table;
                                                      topWidget = Table;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftWidget = AddRow;
                                                      topWidget = AddRow;
                                                  }
                                                  {
                                                    ReferenceTypeFrame = ReferenceTypeFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftWidget = DeleteRow;
                                                      topWidget = DeleteRow;
                                                  Popups:
                                                  {
                                                    ReferenceTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      tableForm = RefAllele;
                                                      sql = "(\nselect _RefAssocType_key, assocType, allowOnlyOne, 1 as orderBy \nfrom MGI_RefType_Allele_View\nwhere _RefAssocType_key = 1013\nunion\nselect _RefAssocType_key, assocType, allowOnlyOne, 2 as orderBy \nfrom MGI_RefType_Allele_View\nwhere _RefAssocType_key != 1013\n)\norder by orderBy, assocType\n";
                                                      tableOptionKey = 2;
                                                      tableOption = 5;
                                                  }
                                                  }
                                            }
                                            {
                                              RefMarker = Table : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      userDefinedAttributes = "markerKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"5\"\nassocKey:Int(Int)=\"1\"\nrefsTypeKey:Int(Int)=\"2\"\nrefsType:Int(Int)=\"4\"\nmarkerColumns:Int(Int)\nmarkerID:Int(Int)=\"6\"\n";
                                                      xrtTblValidateCellCallback = "D:VerifyMarker(allowWithdrawn = false, allowReserved = false),\nD:CommitTableCellEdit";
                                                      xrtTblNumColumns = 7;
                                                      xrtTblColumnLabels = "Mode,Key,Key,Key,Type,Marker,Marker ID";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 15)(all 5 50)(all 6 20)";
                                                      xrtTblEditableSeries = "(all 0-4 False)";
                                                      xrtTblTraversableSeries = "(all 0-4 False)(all 6 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-3 0)";
                                                      xrtTblNumRows = 10;
                                                      xrtTblVisibleRows = 9;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_form;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                    Group: User
                                                      saveTraversableSeries = "(all 0-4 False) (all 6 False)";
                                                      saveEditableSeries = "(all 0-4 False)(all 6 False)";
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      activateCallback = "D:AddRefTypeRow";
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 2;
                                                      leftWidget = Table;
                                                      topWidget = Table;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftWidget = AddRow;
                                                      topWidget = AddRow;
                                                  }
                                                  {
                                                    ReferenceTypeFrame = ReferenceTypeFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftWidget = DeleteRow;
                                                      topWidget = DeleteRow;
                                                  Popups:
                                                  {
                                                    ReferenceTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      tableForm = RefMarker;
                                                      sql = "select _RefAssocType_key, assocType from MGI_RefType_Marker_View order by _RefAssocType_key";
                                                      tableOptionKey = 2;
                                                      tableOption = 4;
                                                  }
                                                  }
                                            }
                                            {
                                              Notes = Notes : mgiDataTypes;
                                              Group: Widget
                                                xrtGearOrientation = vertical;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    label = XmLabel;
                                                  }
                                                  {
                                                    text = scrolledText;
                                                    Group: Widget
                                                      columns = 100;
                                                      rows = 20;
                                                  }
                                            }
                                            {
                                              Abstract = Text : mgiDataTypes;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Abstract;
                                                  }
                                                  {
                                                    text = scrolledText;
                                                    Group: Widget
                                                      columns = 100;
                                                      rows = 15;
                                                  }
                                            }
                                            {
                                              BookForm = EditForm : MGI;
                                                  {
                                                    ID = ID;
                                                  }
                                                  {
                                                    Editors = CharText : mgiDataTypes;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      leftOffset = 2;
                                                      rightAttachment = attach_form;
                                                      rightOffset = 2;
                                                      topAttachment = attach_form;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Editors;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 95;
                                                      maxLength = 160;
                                                  }
                                                  }
                                                  {
                                                    Title = CharText : mgiDataTypes;
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      leftWidget = Editors;
                                                      rightAttachment = attach_form;
                                                      rightOffset = 2;
                                                      topAttachment = attach_widget;
                                                      topWidget = Editors;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Title;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      maxLength = 200;
                                                      columns = 95;
                                                  }
                                                  }
                                                  {
                                                    Place = CharText : mgiDataTypes;
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      leftWidget = Title;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      topWidget = Title;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_form;
                                                      resizable = true;
                                                      bottomOffset = 2;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Place;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      columns = 20;
                                                      maxLength = 50;
                                                  }
                                                  }
                                                  {
                                                    Publisher = CharText : mgiDataTypes;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      leftWidget = Place;
                                                      leftOffset = 2;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      topWidget = Place;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Publisher;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      maxLength = 50;
                                                      columns = 25;
                                                  }
                                                  }
                                                  {
                                                    Series = CharText : mgiDataTypes;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      leftWidget = Publisher;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      topWidget = Publisher;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftOffset = 5;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Edition;
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      maxLength = 50;
                                                      columns = 25;
                                                  }
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearReference()";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    J = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  NextJnum = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Last J#";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          traversalOn = False;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      NLMDialog = NLMDialog;
                    }
              }
        }
        {
          MolDetailForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 90;
            vip_y = 1790;
              {
                ParentClone = mgiAccession : mgiDataTypes;
                Group: Widget
                  orientation = horizontal;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 135;
                    {
                      ObjectID = ID;
                    }
                    {
                      AccessionID = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent Clone\nAccession ID";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() DisplayParentSource()";
                          }
                    }
                    {
                      AccessionName = CharSText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent\nClone";
                          }
                    }
              }
              {
                VectorTypeFrame = VectorTypeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                Group: User
                  defaultValue = "Not Specified";
              }
              {
                InsertSite = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = VectorTypeFrame;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSite";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                InsertSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = InsertSite;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = InsertSite;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSize";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = InsertSite;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SourceForm = SourceForm : MGI;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      SourceID = ID : mgiDataTypes;
                    }
                    {
                      Library = CharText : mgiDataTypes;
                      Group: Widget
                        managed = True;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Library;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
                    {
                      mgiCitation = mgiCitation : mgiDataTypes;
                          {
                            ObjectID = ID;
                          }
                          {
                            Jnum = Jnum;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: User
                                    required = False;
                                }
                          }
                          {
                            Citation = Citation;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: User
                                    required = False;
                                }
                          }
                    }
                    {
                      SourceSegmentTypeFrame = SegmentTypeFrame : mgiOption;
                          {
                            SourceSegmentTypeMenu : SegmentTypeMenu = XmOptionMenu;
                            Group: Widget
                              subMenuId = SourceSegmentTypePulldown;
                          }
                          Popups:
                          {
                            SourceSegmentTypePulldown : SegmentTypePulldown = OptionPulldown;
                                {
                                  SearchAll = SearchAll : mgiOption;
                                }
                          }
                    }
                    {
                      SourceVectorTypeFrame = VectorTypeFrame : mgiOption;
                          {
                            SourceVectorTypeMenu : VectorTypeMenu = XmOptionMenu;
                            Group: Widget
                              subMenuId = SourceVectorTypePulldown;
                          }
                          Popups:
                          {
                            SourceVectorTypePulldown : VectorTypePulldown = OptionPulldown;
                                {
                                  SearchAll = SearchAll : mgiOption;
                                }
                          }
                    }
                    {
                      ProbeOrganismFrame = ProbeOrganismFrame : mgiOption;
                      Group: Constraint
                        leftAttachment = attach_form;
                        leftOffset = 5;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topOffset = 5;
                        bottomAttachment = attach_none;
                        resizable = true;
                        topWidget = Library;
                    }
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      Tissue = Tissue : mgiDataTypes;
                    }
                    {
                      Description = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Tissue\nDescription";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 50;
                          }
                    }
                    {
                      CellLine = mgiVerify : mgiDataTypes;
                          {
                            Verify = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = "Cell Line";
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 50;
                                }
                          }
                          {
                            CellLineID : VerifyID = ID : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: User
                                    defaultValue = 316335;
                                }
                          }
                    }
                    {
                      AgeFrame = AgeFrame : mgiOption;
                    }
                    {
                      Age = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              managed = False;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 20;
                              maxLength = 50;
                          }
                    }
              }
        }
        {
          AlleleModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 140;
          Group: User
            homeWidget = Symbol;
            activateButtonName = Allele;
            clearForms = "ControlForm\nEditForm\nnotebook";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearAllele";
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown : mgiMenu;
                                      {
                                        AlleleDiseaseVocAnnot = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"AlleleDiseaseVocAnnot\")";
                                          labelString = "Disease Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1012\"\n";
                                          managed = True;
                                      }
                                      {
                                        MutantCellLineModule = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"MutantCellLine\")";
                                          labelString = "Mutant Cell Line";
                                      }
                                      {
                                        NonMutantCellLineModule = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"NonMutantCellLine\")";
                                          labelString = "Non-Mutant Cell Line";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Symbol";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 60;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Name";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 85;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  messageText = messageText : mgiDataTypes;
                                  Group: Widget
                                    background = Yellow;
                                    value = "All information associated with a \nRESERVED symbol is strictly CONFIDENTIAL";
                                    columns = 40;
                                    rows = 2;
                                    editMode = multi_line_edit;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Symbol;
                                    leftOffset = 20;
                                }
                                {
                                  Marker = ReferenceTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Marker Key,Refs Key,Status Key,Marker,J#,Citation,Status";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 15)(all 5 10)(all 6 50)(all 7 20)";
                                          xrtTblVisibleRows = 1;
                                          xrtTblNumRows = 1;
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblNumColumns = 8;
                                          xrtTblMaxLengthSeries = "(all 6 255)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"4\"\nmodifiedBy:Int(Int)=\"7\"\nmodifiedDate:Int(Int)=\"8\"\nassocKey:Int(Int)=\"1\"\nmarkerColumns:Int(Int)=\"1\"\nstatusKey:Int(Int)=\"4\"\nstatus:Int(Int)=\"10\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(allowReserved = true),\nD:VerifyReference,\nD:CommitTableCellEdit";
                                        Group: User
                                          citation = 6;
                                          jnum = 5;
                                          markerSymbol = 4;
                                          refsKey = 2;
                                          status = 7;
                                          markerKey = 1;
                                          statusKey = 3;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topOffset = 2;
                                      }
                                      {
                                        AlleleMarkerStatusFrame = AlleleMarkerStatusFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topOffset = 2;
                                          rightWidget = Table;
                                      }
                                }
                                {
                                  Reference = ReferenceTypeTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Marker;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Marker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 10;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 15)(all 6 10)(all 7 40)";
                                          xrtTblNumRows = 15;
                                        Group: User
                                          mgiTypeKey = 11;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          labelString = "Add Row";
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          leftOffset = 0;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        ReferenceTypeFrame = ReferenceTypeFrame : mgiOption;
                                        Group: Constraint
                                          leftWidget = DeleteRow;
                                          topWidget = DeleteRow;
                                          leftAttachment = attach_widget;
                                          leftOffset = 5;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            Popups:
                                            {
                                              ReferenceTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableForm = Reference;
                                                sql = "(\nselect _RefAssocType_key, assocType, allowOnlyOne, 1 as orderBy \nfrom MGI_RefType_Allele_View\nwhere _RefAssocType_key = 1013\nunion\nselect _RefAssocType_key, assocType, allowOnlyOne, 2 as orderBy \nfrom MGI_RefType_Allele_View\nwhere _RefAssocType_key != 1013\n)\norder by orderBy, assocType\n";
                                            }
                                      }
                                      {
                                        ReviewFrame = YesNoFrame : mgiOption;
                                        Group: Widget
                                          managed = False;
                                        Group: Constraint
                                          rightWidget = Table;
                                          topWidget = Table;
                                            Popups:
                                            {
                                              ReviewPulldown : YesNoPulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableForm = Reference;
                                                tableOptionKey = 3;
                                                tableOption = 6;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                                  {
                                                    Yes = Yes : mgiOption;
                                                  }
                                                  {
                                                    No = No : mgiOption;
                                                  }
                                            }
                                      }
                                }
                                {
                                  AlleleStatusFrame = AlleleStatusFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Reference;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  AlleleTypeFrame = AlleleTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleStatusFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleStatusFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  InheritanceModeFrame = InheritanceModeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleTypeFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AlleleTransmissionFrame = AlleleTransmissionFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleStatusFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = InheritanceModeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  AlleleCollectionFrame = AlleleCollectionFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleTransmissionFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleTransmissionFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  MixedFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleCollectionFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleCollectionFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        MixedMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          labelString = Mixed;
                                          subMenuId = MixedPulldown;
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        MixedPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  ExtinctFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleStatusFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MixedFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ExtinctMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = ExtinctPulldown;
                                          labelString = Extinct;
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        ExtinctPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  MutantCellLine = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 20)(all 6 15)(all 7 20)(all 8 10)";
                                          xrtTblColumnLabels = "Mode,Assoc Key,Mutation Key,Creator Key,Vector Key,Mutant Cell Line,Creator,Modified By,Date";
                                          xrtTblNumColumns = 9;
                                          xrtTblPixelWidthSeries = "(all 0-4 0)";
                                          xrtTblVisibleRows = 2;
                                          userDefinedAttributes = "assocKey:Int(Int)=\"1\"\ncellLineKey:Int(Int)=\"2\"\ncellLine:Int(Int)=\"5\"\nmodifiedBy:Int(Int)=\"7\"\nmodifiedDate:Int(Int)=\"8\"\ncreator:Int(Int)=\"6\"\ncreatorKey:Int(Int)=\"3\"\nvectorKey:Int=\"4\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMutantCellLine,\nD:CommitTableCellEdit";
                                      }
                                }
                                {
                                  mgiParentCellLine = mgiParentCellLine : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MutantCellLine;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MutantCellLine;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-15";
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        CellLine = CharText : mgiDataTypes;
                                      }
                                      {
                                        Strain = Strain : mgiDataTypes;
                                        Group: Widget
                                          managed = True;
                                            {
                                              StrainID = ID;
                                            }
                                            {
                                              Verify = CharText;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "Parent Cell Line \nStrain";
                                                  }
                                            }
                                      }
                                      {
                                        Derivation = mgiObject : mgiDataTypes;
                                            {
                                              ObjectID = ID : mgiDataTypes;
                                            }
                                            {
                                              CharText = CharText : mgiDataTypes;
                                              Group: Widget
                                                managed = False;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Derivation;
                                                      managed = False;
                                                  }
                                                  {
                                                    text = text : mgiDataTypes;
                                                    Group: Widget
                                                      columns = 40;
                                                  }
                                            }
                                      }
                                }
                                {
                                  StrainOfOrigin = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiParentCellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiParentCellLine;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain\nof Origin";
                                            }
                                      }
                                }
                                {
                                  markerDescription = mgiNoteShort : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ExtinctFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = AlleleStatusFrame;
                                  Group: Control
                                    vipComment = "The XmRowColumn widget is a general purpose manager capable of containing any widget type as a child. In general, it requires no special knowledge about how its children function and provides nothing beyond support for several different layout styles. However, it can be configured as a menu, in which case, it expects only certain children, and it configures to a particular layout. The menus supported are XmMenuBar, XmPulldownMenu, XmPopupMenu, and XmOptionMenu.";
                                      {
                                        Note = Notes : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Marker Detail Clip";
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                maxLength = 300;
                                                shadowThickness = 6;
                                            }
                                      }
                                      {
                                        NotePush = NotePushShort : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Marker Detail Clip";
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = AlleleTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = AlleleTypeFrame;
                                    leftOffset = 25;
                                }
                                {
                                  mgiNoteDriverForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiNoteForm;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiNoteForm;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-10";
                                }
                                {
                                  notebookForm = notebookForm : mgiNoteBook;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StrainOfOrigin;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        separator = XmSeparatorGadget;
                                      }
                                      {
                                        legend = XmLabelGadget;
                                        Group: Widget
                                          labelString = "1 = Synonyms, 2 = Allele Attribute, 3 = Molecular Mutations, 4 = Image, 5 = Sequence";
                                      }
                                      {
                                        notebook = notebook : mgiNoteBook;
                                            {
                                              Synonym = SynonymTypeTable : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblPixelWidthSeries = "(all 0-4 0)(all 8-9 0)";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 20)(all 5 50)(all 6 10)(all 7 40)(all 8 12)(all 9 10)";
                                                      xrtTblVisibleRows = 5;
                                                      xrtTblNumRows = 10;
                                                    Group: User
                                                      requiredColumns = "3\n5";
                                                      useDefaultSynType = True;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      labelString = "Add Row";
                                                      activateCallback = "D:AddTableRow";
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      leftWidget = Table;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      topWidget = Table;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftOffset = 0;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    SynonymTypeFrame = SynonymTypeFrame : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  Popups:
                                                  {
                                                    SynonymTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      sql = "select _SynonymType_key, synonymType from MGI_SynonymType_Allele_View where allowOnlyOne = 0 order by _SynonymType_key";
                                                  }
                                                  }
                                            }
                                            {
                                              AlleleSubType = TableLabel : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblPixelWidthSeries = "(all 0-2 0)";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                                      xrtTblColumnLabels = "Mode,Current Key,Key,Attribute";
                                                      xrtTblNumColumns = 4;
                                                      userDefinedAttributes = "annotCurrentKey:Int(Int)=\"1\"\ntermKey:Int(Int)=\"2\"\nterm:Int(Int)=\"3\"\n";
                                                      xrtTblEnterCellCallback = "D:SetOptions";
                                                      xrtTblEditableSeries = "(all 0-2 False)";
                                                  {
                                                    label = XtXrtLabel;
                                                    Group: Widget
                                                      labelString = "Allele Attribute";
                                                  }
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    AlleleSubTypeFrame = AlleleSubTypeFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      leftWidget = DeleteRow;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      topWidget = DeleteRow;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 2;
                                                  Popups:
                                                  {
                                                    AlleleSubTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      tableOption = 3;
                                                      tableOptionKey = 2;
                                                      tableForm = AlleleSubType;
                                                  }
                                                  }
                                            }
                                            {
                                              MolecularMutation = TableLabel : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblNumColumns = 4;
                                                      xrtTblColumnLabels = "Mode,Current Key,Key,Molecular Mutation";
                                                      xrtTblEditableSeries = "(all 0-2 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-2 0)";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 65)";
                                                      userDefinedAttributes = "mutationCurrentKey:Int(Int)=\"1\"\nmutationKey:Int(Int)=\"2\"\nmutation:Int(Int)=\"3\"\n";
                                                      xrtTblVisibleRows = 5;
                                                      xrtTblEnterCellCallback = "D:SetOptions";
                                                      xrtTblTraversableSeries = "(all 0-2 False)";
                                                      xrtTblNumRows = 10;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    label = XtXrtLabel;
                                                    Group: Widget
                                                      labelString = "Molecular Characterization";
                                                  }
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Constraint
                                                      leftAttachment = attach_opposite_widget;
                                                      leftWidget = Table;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      topWidget = Table;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    MolecularMutationFrame = MolecularMutationFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      topWidget = Table;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 2;
                                                      leftWidget = DeleteRow;
                                                      leftOffset = 5;
                                                  Popups:
                                                  {
                                                    MolecularMutationPulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      tableForm = MolecularMutation;
                                                      tableOptionKey = 2;
                                                      tableOption = 3;
                                                  }
                                                  }
                                            }
                                            {
                                              ImagePane = ImagePane : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblVisibleRows = 5;
                                                      xrtTblNumRows = 10;
                                                    Group: User
                                                      mgiTypeKey = 11;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    IsPrimaryFrame = YesNoFrame : mgiOption;
                                                  Popups:
                                                  {
                                                    IsPrimaryPulldown = OptionPulldown;
                                                  }
                                                  {
                                                    YesNoPulldown = OptionPulldown;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                  }
                                                  {
                                                    Yes = Yes : mgiOption;
                                                  }
                                                  {
                                                    No = No : mgiOption;
                                                  }
                                                  }
                                                  }
                                            }
                                            {
                                              SequenceAllele = mgiAccessionTable : mgiTable;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblNumColumns = 11;
                                                      xrtTblColumnLabels = "Mode,Logical Key,Assoc Key,Sequence Key,Ref Key,Sequence Name,Sequence ID,J#,Citation,Modified By,Date";
                                                      xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 20)(all 10 10)";
                                                      xrtTblEditableSeries = "(all 0 False) (all 5 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-4 0)";
                                                      xrtTblTraversableSeries = "(all 0 False) (all 5 False)";
                                                      userDefinedAttributes = "refsKey:Int(Int)=\"4\"\njnum:Int(Int)=\"7\"\ncitation:Int(Int)=\"8\"\nmodifiedBy:Int(Int)=\"9\"\nmodifiedDate:Int(Int)=\"10\"\nsequenceKey:Int(Int)=\"3\"\nrefsCurrentKey:Int(Int)=\"4\"\n";
                                                      xrtTblVisibleRows = 5;
                                                      xrtTblValidateCellCallback = "D:VerifyAccSequence,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                                      xrtTblNumRows = 10;
                                                    Group: User
                                                      accName = 5;
                                                      accID = 6;
                                                      requiredColumns = "5\n6";
                                                      accKey = 3;
                                                  }
                                                  {
                                                    Add = TablePush;
                                                  }
                                                  {
                                                    Delete = TablePush;
                                                  }
                                                  {
                                                    AccSourceFrame = AccSourceFrame : mgiOption;
                                                  {
                                                    AccSourceMenu = XmOptionMenu;
                                                    Group: User
                                                      defaultOption = NSequence;
                                                  }
                                                  Popups:
                                                  {
                                                    AccSourcePulldown = OptionPulldown;
                                                    Group: User
                                                      tableOptionKey = 1;
                                                      tableOption = 5;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      allowAdd = False;
                                                      allowDelete = False;
                                                      allowModify = False;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      allowAdd = False;
                                                      allowDelete = False;
                                                      allowModify = False;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMSequenceType = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RuleyHECellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IshidaYCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NorCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Lexicon = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      allowAdd = False;
                                                      allowDelete = False;
                                                      allowModify = False;
                                                  }
                                                  }
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearAllele";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    rightWidget = Bottom;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Bottom;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "approvedBy:Int(Int)=\"2\"\napprovedFieldName:String(String)=\"approval_date\"\n";
                                          xrtTblNumRows = 3;
                                          xrtTblRowLabels = "Created,Modified,Approved";
                                          xrtTblVisibleRows = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Delete = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = KOMPRegeneronProject;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  StemCellLineList = StemCellLineList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = CellLine;
                                          targetWidget = mgiParentCellLine;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                          {
                            label = XmLabel;
                          }
                          {
                            Note = Notes : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = scrolledText;
                                  Group: Widget
                                    columns = 100;
                                    rows = 50;
                                }
                          }
                          {
                            separator = XmSeparator;
                          }
                          {
                            Buttons = Buttons : mgiDialog;
                            Group: Constraint
                              leftAttachment = attach_form;
                              leftOffset = 50;
                              rightAttachment = attach_form;
                              rightOffset = 50;
                              topAttachment = attach_widget;
                              topWidget = separator;
                              topOffset = 5;
                              bottomAttachment = attach_form;
                              bottomOffset = 5;
                              resizable = true;
                          }
                    }
                    {
                      VerifyMutantParentStrain = VerifyMutantParentStrain : mgiDialog;
                    }
                    {
                      VerifyAlleleStatusStrain = VerifyAlleleStatusStrain : mgiDialog;
                    }
                    {
                      VerifyAlleleGermlineTransmission = VerifyAlleleGermlineTransmission : mgiDialog;
                    }
                    {
                      VerifyAlleleMixed = VerifyAlleleMixed : mgiDialog;
                    }
              }
        }
        {
          StrainModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 1130;
          Group: User
            homeWidget = Name;
            activateButtonName = Strain;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearStrain()";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Strain = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = True;
                                      }
                                }
                          }
                          {
                            Merge = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "D:StrainMergeInit";
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Name;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharSText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Strain;
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          columns = 95;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyDuplicateStrain()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  strainSpecies = strainSpecies : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  strainTypes = strainTypes : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = strainSpecies;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = strainSpecies;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        StrainType = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain Name Type";
                                            }
                                      }
                                }
                                {
                                  PrivateFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = strainSpecies;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 20;
                                    leftWidget = strainTypes;
                                      {
                                        PrivateMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = PrivatePulldown;
                                          labelString = "Private?";
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        PrivatePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  StandardFrame = StandardFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = PrivateFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = PrivateFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  GeneticBackgroundFrame = GeneticBackgroundFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = StandardFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StandardFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  StrainAttribute = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = strainTypes;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = strainTypes;
                                    leftOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Strain Attribute";
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "annotCurrentKey:Int(Int)=\"1\"\ntermKey:Int(Int)=\"2\"\nterm:Int(Int)=\"3\"\n";
                                          xrtTblVisibleRows = 2;
                                      }
                                }
                                {
                                  NeedsReview = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = StrainAttribute;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = StrainAttribute;
                                    leftOffset = 5;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Needs Review,Date";
                                          xrtTblNumColumns = 5;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 40)(all 4 10)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "annotCurrentKey:Int(Int)=\"1\"\ntermKey:Int(Int)=\"2\"\nterm:Int(Int)=\"3\"\nmodifiedDate:Int(Int)=\"4\"\n";
                                          xrtTblVisibleRows = 2;
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = StrainAttribute;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = StrainAttribute;
                                    rightOffset = 2;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "markerColumns:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"6\"\nalleleKey:StringTable(StringTable)=\"3\"\nalleleSymbol:StringTable(StringTable)=\"8\"\nprimaryKey:Int(Int)=\"1\"\nqualifierKey:Int=\"4\"\nqualifier:Int=\"5\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyAllele,\nD:CommitTableCellEdit";
                                          xrtTblNumColumns = 9;
                                          xrtTblColumnLabels = "Mode,Key,Key,Key,Key,Type,Chr,Marker,Allele";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 25)(all 6 3)(all 7 30)(all 8 50)";
                                          xrtTblEditableSeries = "(all 0-5 False)";
                                          xrtTblTraversableSeries = "(all 0-5 False)";
                                          xrtTblPixelWidthSeries = "(all 0-4 0)";
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:AddStrainAlleleTypeRow";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = StrainAlleleTypeFrame;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = StrainAlleleTypeFrame;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        StrainAlleleTypeFrame = StrainAlleleTypeFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            Popups:
                                            {
                                              StrainAlleleTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableOptionKey = 4;
                                                tableOption = 5;
                                            }
                                      }
                                }
                                {
                                  Synonym = SynonymTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Marker;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Marker;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblPixelWidthSeries = "(all 0-3 0)(all 8-9 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 20)(all 5 50)(all 6 10)(all 7 30)(all 8 12)(all 9 10)";
                                          xrtTblColumnLabels = "Mode,Key,Type key,Ref key,Type,Alternative Name,J#,Citation,Modified By,Date";
                                        Group: User
                                          requiredColumns = 5;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        SynonymTypeFrame = SynonymTypeFrame : mgiOption;
                                            Popups:
                                            {
                                              SynonymTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _SynonymType_key, synonymType from MGI_SynonymType_Strain_View order by _SynonymType_key";
                                            }
                                      }
                                }
                                {
                                  ReferenceMGI = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Synonym;
                                    topOffset = 5;
                                    leftWidget = Name;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "refsKey:Int(Int)=\"1\"\njnum:Int(Int)=\"3\"\ncitation:Int(Int)=\"2\"\n";
                                          xrtTblNumColumns = 5;
                                          xrtTblColumnLabels = "Mode,Key,Citation,J#,Data Set";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 3-4 15)";
                                          xrtTblValidateCellCallback = "D:VerifyReference\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 3;
                                        Group: User
                                          dataSet = 4;
                                          accID = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = References;
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectReferenceMGI";
                                      }
                                }
                                {
                                  DataSets = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ReferenceMGI;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ReferenceMGI;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Data Sets";
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectDataSets";
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = DataSets;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = DataSets;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = ReferenceMGI;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    rightOffset = 5;
                                    topOffset = 5;
                                }
                                {
                                  Reference = ReferenceTypeTable : mgiTable;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Assoc Key,Ref key,Type key,Review key,Type,J#,Citation,Reviewed?,Modified By,Date";
                                          xrtTblNumColumns = 11;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-6 10)(all 7 50)(all 9 15)";
                                          userDefinedAttributes = "modifiedBy:Int(Int)=\"9\"\nmodifiedDate:Int(Int)=\"10\"\n";
                                        Group: User
                                          mgiTypeKey = 10;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        ReferenceTypeFrame = ReferenceTypeFrame : mgiOption;
                                            Popups:
                                            {
                                              ReferenceTypePulldown = OptionPulldown : mgiOption;
                                              Group: Widget
                                                tearOffModel = tear_off_disabled;
                                              Group: User
                                                sql = "select _RefAssocType_key, assocType, allowOnlyOne from MGI_RefType_Strain_View where allowOnlyOne = 0 order by _RefAssocType_key";
                                                tableForm = Reference;
                                            }
                                      }
                                      {
                                        ReviewFrame = YesNoFrame : mgiOption;
                                        Group: Widget
                                          managed = False;
                                            Popups:
                                            {
                                              ReviewPulldown : YesNoPulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableForm = Reference;
                                                tableOptionKey = 3;
                                                tableOption = 6;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                                  {
                                                    Yes = Yes : mgiOption;
                                                  }
                                                  {
                                                    No = No : mgiOption;
                                                  }
                                            }
                                      }
                                }
                                {
                                  Genotype = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 9;
                                          xrtTblColumnLabels = "Mode,Key,G Key,Q Key,Qualifier,MGI ID,Genotype,Modified By,Date";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 15)(all 5 15)(all 6 50))(all 7 15)";
                                          userDefinedAttributes = "strainGenotypeKey:Int(Int)=\"1\"\ngenotypeKey:Int(Int)=\"2\"\nqualifierKey:Int(Int)=\"3\"\ngenotype:Int(Int)=\"5\"\ngenotypeName:Int(Int)=\"6\"\nqualifier:Int(Int)=\"4\"\nmodifiedBy:Int=\"7\"\nmodifiedDate:Int=\"8\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyGenotype\nD:CommitTableCellEdit";
                                          xrtTblDisplayHorizScrollBar = dispsb_never;
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                        Group: User
                                          requiredColumns = "2\n3";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = StrainGenoQualFrame;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = StrainGenoQualFrame;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        StrainGenoQualFrame = StrainGenoQualFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            Popups:
                                            {
                                              StrainGenoQualPulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableForm = Genotype;
                                                tableOption = 4;
                                                tableOptionKey = 3;
                                                  {
                                                    SearhAllNoShow = SearhAllNoShow : mgiOption;
                                                  }
                                            }
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          labelString = "Save References and Genotypes Only";
                                          activateCallback = "D:ModifyJAX";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearStrain()";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicates;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicates;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Duplicates = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicates,\nD:GoHome";
                                    labelString = "Find Duplicates";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = JRS;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ARC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 5;
                                      }
                                }
                                {
                                  SpeciesList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Term_key, term from VOC_Term_StrainSpecies_View order by term";
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = SubSpecies;
                                        Group: User
                                          defaultLabel = SubSpecies;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 4;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = Species;
                                          targetWidget = strainSpecies;
                                      }
                                }
                                {
                                  StrainTypeList = StrainTypeList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = StrainType;
                                          targetWidget = strainTypes;
                                      }
                                }
                                {
                                  StrainAttributeList = StrainAttributeList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "Strain Attribute";
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = StrainAttribute;
                                          targetKey = 2;
                                          targetText = 3;
                                      }
                                }
                                {
                                  NeedsReviewList = NeedsReviewList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          visibleItemCount = 3;
                                        Group: User
                                          targetKey = 2;
                                          targetText = 3;
                                          targetWidget = NeedsReview;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      StrainMergeDialog = StrainMergeDialog : mgiDialog;
                    }
                    {
                      VerifyValueChange = VerifyValueChange : mgiDialog;
                      Group: Widget
                        messageString = "Are you sure you want to change the Private flag?";
                    }
              }
        }
        {
          MutantCellLineModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 800;
            vip_show_name = true;
          Group: User
            homeWidget = CellLine;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = CellLine;
                                {
                                  ID = ID : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CellLine = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                  Group: Control
                                    vipComment = "";
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Mutant Cell Line";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  AlleleCreatorFrame = AlleleCreatorFrame : mgiOption;
                                  Group: Widget
                                    foreground = Red;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CellLine;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiParentCellLine = mgiParentCellLine : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleCreatorFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        CellLine = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text : mgiDataTypes;
                                              Group: Widget
                                                columns = 50;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                      {
                                        ParentStrain : Strain = Strain : mgiDataTypes;
                                            {
                                              StrainID = ID;
                                            }
                                            {
                                              Verify = CharText;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "Parent \nCell Line Strain";
                                                  }
                                                  {
                                                    text = text;
                                                    Group: User
                                                      required = True;
                                                  }
                                            }
                                      }
                                      {
                                        Derivation = mgiObject : mgiDataTypes;
                                            {
                                              ObjectID = ID : mgiDataTypes;
                                            }
                                            {
                                              CharText = CharText : mgiDataTypes;
                                              Group: Widget
                                                managed = False;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Derivation;
                                                      managed = False;
                                                  }
                                                  {
                                                    text = text : mgiDataTypes;
                                                    Group: Widget
                                                      columns = 40;
                                                  }
                                            }
                                      }
                                }
                                {
                                  AlleleDerivationTypeFrame = AlleleDerivationTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiParentCellLine;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiAlleleVector = mgiAlleleVector : mgiDataTypes;
                                  Group: Widget
                                    foreground = Red;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = CellLine;
                                    topWidget = AlleleDerivationTypeFrame;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Vector = CharText;
                                        Group: Widget
                                          foreground = Red;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                foreground = Red;
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                required = True;
                                                defaultValue = "Not Specified";
                                            }
                                      }
                                }
                                {
                                  AlleleVectorTypeFrame = AlleleVectorTypeFrame : mgiOption;
                                  Group: Widget
                                    foreground = Red;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAlleleVector;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = CellLine;
                                    topWidget = AlleleVectorTypeFrame;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Symbol";
                                          foreground = Red;
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 60;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = IGTC;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMM = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMCellLine = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EUCOMMSequenceType = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    mirKO = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PleiadesCellLine = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RuleyHECellLine = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    IshidaYCellLine = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NorCOMM = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 5;
                                      }
                                }
                                {
                                  StemCellLineList = StemCellLineList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectLookupListItem,\nD:DisplayStemCellLine2";
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = CellLine;
                                          targetWidget = mgiParentCellLine;
                                      }
                                }
                                {
                                  AlleleDerivationList = AlleleDerivationList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Derivation;
                                          targetKey = ObjectID;
                                          targetText = CharText;
                                      }
                                }
                                {
                                  AlleleVectorList = AlleleVectorList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = Vector;
                                          targetWidget = mgiAlleleVector;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
                    {
                      VerifyMCLName = VerifyMCLName : mgiDialog;
                    }
                    {
                      VerifyMCLDuplicateName = VerifyMCLDuplicateName : mgiDialog;
                    }
              }
        }
        {
          MPVocAnnotModule = Module : MGI;
          Group: Widget
            width = 1225;
            height = 900;
            closeWindowCallback = "D:MPVocAnnotExit";
          Group: Control
            vip_x = 90;
            vip_y = 745;
          Group: User
            activateButtonName = MPVocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MPVocAnnotExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearMP";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeFrame = VocAnnotTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              MPGenotype = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\nqualifierKey:Int=\"0\"\n";
                                                labelString = "Mammalian Phenotype/Genotype";
                                              Group: User
                                                annotVocab = "Mammalian Phenotype";
                                                evidenceKey = 2;
                                                mgiTypeKey = 12;
                                                vocabKey = 5;
                                                defaultValue = 1002;
                                                qualifierKey = 54;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Genotype;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 75;
                                                scrollHorizontal = True;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 10;
                                          xrtTblNumColumns = 20;
                                          xrtTblColumnLabels = "Mode,Clipboard key,AnnotEvidence key,Annot key,Term key,Not key,Refs key,Evidence key,_EvidenceProperty key,Term Acc ID,Vocabulary Term,Qual,J:,Citation,Evi,Sex,Modified By,Date,Created By,Date";
                                          xrtTblPixelWidthSeries = "(all 0-8 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-8 10)(all 9 15)(all 10 40)(all 11 4)(all 13 10)(all 14 3)(all 15 3)(all 16 15)(all 17 10)(all 18 10)(all 19 10)";
                                          xrtTblDisplayHorizScrollBar = dispsb_never;
                                          userDefinedAttributes = "annotKey:Int(Int)=\"3\"\ntermKey:Int(Int)=\"4\"\nqualifierKey:Int(Int)=\"5\"\nrefsKey:Int(Int)=\"6\"\nevidenceKey:Int(Int)=\"7\"\ntermAccID:Int(Int)=\"9\"\nterm:Int(Int)=\"10\"\nqualifier:Int(Int)=\"11\"\njnum:Int(Int)=\"12\"\ncitation:Int(Int)=\"13\"\nevidence:Int(Int)=\"14\"\neditor:Int(Int)=\"16\"\nmodifiedDate:Int(Int)=\"17\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"18\"\ncreatedDate:Int(Int)=\"19\"\nannotEvidenceKey:Int(Int)=\"2\"\nmgiTypeKey:Int(Int)=\"25\"\nclipAnnotEvidenceKey:Int(Int)=\"1\"\nvocabQualifierKey:Int(Int)=\"0\"\nevidencePropertyKey:Int(Int)=\"8\"\nsex:Int(Int)=\"15\"\n";
                                          xrtTblValidateCellCallback = "D:CopyAnnotation,\nD:VerifyVocabTermAccID,\nD:VerifyReference,\nD:VerifyMPReference,\nD:VerifyVocabEvidenceCode,\nD:VerifyMPSex,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-8 False)(all 10-11 False)(all 13 False)";
                                          xrtTblEnterCellCallback = "D:LoadMPNotes,\nD:SetOptions,\nD:SetTableRow";
                                          width = 960;
                                          xrtTblTraverseCellCallback = "D:MPTraverse";
                                        Group: User
                                          requiredColumns = "3\n6\n7\n8";
                                          saveTraversableSeries = "(all 0-8 False)(all 9-10 False)(all 12 False)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          labelString = "Save Annotations";
                                          activateCallback = "D:Modify";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Note = NoteTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Annotation;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Annotation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "defaultNoteNormal:String(String)=\"Normal\"\n";
                                        Group: User
                                          defaultNoteType = General;
                                          useDefaultNoteType = True;
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                      }
                                      {
                                        NoteTypeFrame = NoteTypeFrame : mgiOption;
                                            Popups:
                                            {
                                              NoteTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _NoteType_key, noteType from MGI_NoteType_VocEvidence_View order by _NoteType_key";
                                                tableForm = Note;
                                                tableOptionKey = 2;
                                                tableOption = 5;
                                            }
                                      }
                                      {
                                        NotePush = NotePush : mgiDataTypes;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          leftOffset = 5;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topWidget = Table;
                                          topOffset = 5;
                                        Group: User
                                          targetWidget = Note;
                                      }
                                      {
                                        frame = XmFrame;
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          labelString = "Save Notes";
                                          activateCallback = "D:ModifyMPNotes";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Header = OrderedTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Note;
                                    topOffset = 15;
                                    bottomAttachment = attach_form;
                                    bottomOffset = 5;
                                    resizable = true;
                                    leftWidget = Note;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 8;
                                          xrtTblColumnLabels = "Mode,Key,Key,Current Order,#,Header,Approved By,Approved Date";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 3-4 3)(all 6-7 15)(all 5 50)";
                                          xrtTblEditableSeries = "(all 0-3 False)(all 5-7 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-3 False)(all 5-7 False)";
                                          userDefinedAttributes = "annotHeaderKey:Int(Int)=\"1\"\nheaderTerm:Int(Int)=\"5\"\napprovedBy:Int(Int)=\"6\"\napprovedDate:Int(Int)=\"7\"\nheaderTermKey:Int=\"2\"\n";
                                        Group: User
                                          currentSeqNum = 3;
                                          seqNum = 4;
                                          saveEditableSeries = "(all 0-3 False)(all 5-7 False)";
                                          saveTraversableSeries = "(all 0-3 False)(all 5-7 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                        Group: Widget
                                          managed = False;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = AddRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = AddRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          leftOffset = 5;
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          activateCallback = "D:ModifyHeader";
                                          labelString = "Save Header Order";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          topAttachment = attach_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topWidget = Table;
                                          topOffset = 2;
                                          rightWidget = Table;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearMP";
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Clear;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  AnnotQualifierFrame = AnnotQualifierFrame : mgiOption;
                                      Popups:
                                      {
                                        AnnotQualifierPulldown = OptionPulldown;
                                        Group: Widget
                                          tearOffModel = tear_off_disabled;
                                        Group: User
                                          sql = "select _Term_key, abbreviation from VOC_Term \nwhere _Vocab_key = 54\norder by abbreviation";
                                          tableForm = Annotation;
                                          tableOptionKey = 5;
                                          tableOption = 11;
                                      }
                                }
                                {
                                  EvidencePropertyFrame = EvidencePropertyFrame : mgiOption;
                                      {
                                        EvidencePropertyMenu = XmOptionMenu;
                                        Group: Widget
                                          labelString = "Sex-Specificty";
                                      }
                                      Popups:
                                      {
                                        EvidencePropertyPulldown = OptionPulldown;
                                        Group: User
                                          tableOption = 15;
                                          sql = "(select _Term_key, 'F' as value from VOC_Term where _Term_key = 8836535\nunion\nselect _Term_key, 'M' as value from VOC_Term where _Term_key = 8836535\nunion\nselect _Term_key, 'NA' as value from VOC_Term where _Term_key = 8836535\n)\norder by value\n";
                                          tableForm = Annotation;
                                          tableOptionKey = "-1";
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                              Group: Widget
                                                sensitive = False;
                                            }
                                      }
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 7;
                                          targetText = 14;
                                      }
                                }
                                {
                                  MPAnnotClipboard = MPAnnotClipboard : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                      }
                                      {
                                        Add = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:MPClipboardAdd";
                                      }
                                      {
                                        AddAll = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:MPClipboardAddAll";
                                      }
                                      {
                                        Delete = TablePush : mgiTable;
                                      }
                                      {
                                        Clear = TablePush : mgiTable;
                                      }
                                      {
                                        Sort = TablePush : mgiTable;
                                      }
                                      {
                                        CopyAnnot = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:MPClipboardCopyAnnotation";
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                      Group: Widget
                        messageString = "This reference is not associated to all Alleles of this Genotype.\nDo you want to the system to add a 'Used-FC' reference association for these Alleles?";
                        dialogTitle = "Add Reference Associations?";
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
        {
          OMIMVocAnnotModule = Module : MGI;
          Group: Widget
            width = 1225;
            height = 900;
            closeWindowCallback = "D:OMIMVocAnnotExit";
          Group: Control
            vip_x = 90;
            vip_y = 910;
          Group: User
            activateButtonName = OMIMVocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:OMIMVocAnnotExit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeFrame = VocAnnotTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              OMIM = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\nqualifierKey:Int=\"0\"\n";
                                                labelString = "OMIM/Genotype";
                                              Group: User
                                                annotVocab = "OMIM/Genotype";
                                                evidenceKey = 43;
                                                mgiTypeKey = 12;
                                                vocabKey = 44;
                                                defaultValue = 1005;
                                                qualifierKey = 53;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Genotype;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 75;
                                                scrollHorizontal = True;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 5;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 16;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 19;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Not key,Refs key,Evidence key,Note key,Term Acc ID,Vocabulary Term,Qual,J:,Citation,Evi,Notes,Modified,Date,Created,Date";
                                          xrtTblPixelWidthSeries = "(all 0-7 0)(all 13 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-7 10)(all 8 15)(all 9 40)(all 10 4)(all 12 10)(all 13 3)(all 14 20)(all 15 10)(all 17 10)(all 16 10)(all 18 10)";
                                          xrtTblDisplayHorizScrollBar = dispsb_never;
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nqualifierKey:Int(Int)=\"4\"\nrefsKey:Int(Int)=\"5\"\nevidenceKey:Int(Int)=\"6\"\ntermAccID:Int(Int)=\"8\"\nterm:Int(Int)=\"9\"\nqualifier:Int(Int)=\"10\"\njnum:Int(Int)=\"11\"\ncitation:Int(Int)=\"12\"\nevidence:Int(Int)=\"13\"\neditor:Int(Int)=\"15\"\nmodifiedDate:Int(Int)=\"16\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"17\"\ncreatedDate:Int(Int)=\"18\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"12\"\nnoteKey:Int(Int)=\"7\"\nnotes:Int(Int)=\"14\"\nnoteTypeKey:Int(Int)=\"1008\"\nvocabQualifierKey:Int=\"0\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          width = 1000;
                                          xrtTblTraverseCellCallback = "D:OMIMTraverse";
                                        Group: User
                                          requiredColumns = "3\n5";
                                          saveTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  AnnotQualifierFrame = AnnotQualifierFrame : mgiOption;
                                      Popups:
                                      {
                                        AnnotQualifierPulldown = OptionPulldown;
                                        Group: Widget
                                          tearOffModel = tear_off_disabled;
                                        Group: User
                                          tableForm = Annotation;
                                          tableOption = 10;
                                          tableOptionKey = 4;
                                          sql = "select _Term_key, abbreviation from VOC_Term \nwhere _Vocab_key = 53\norder by abbreviation";
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: User
                                    targetColumn = 14;
                                    targetWidget = Annotation;
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 6;
                                          targetText = 13;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
        {
          ExptDetailForm = EditForm : MGI;
          Group: Widget
            width = 700;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 900;
          Group: Control
            vip_x = 90;
            vip_y = 1295;
          Group: User
            homeWidget = Jnum;
              {
                ID = ID;
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: Control
                  vipComment = "";
              }
              {
                referenceNote = mgiNote : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ChromosomeFrame;
                  leftOffset = 15;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Note = Notes : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Reference Notes";
                          }
                    }
                    {
                      NotePush = NotePush : mgiDataTypes;
                      Group: Widget
                        labelString = "Reference Notes";
                    }
              }
              {
                ExptTypeFrame = ExptTypeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  leftOffset = 10;
              }
              {
                ChromosomeFrame = ChromosomeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = ExptTypeFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = ExptTypeFrame;
                  leftOffset = 10;
                    Popups:
                    {
                      ChromosomePulldown = OptionPulldown;
                      Group: User
                        sql = "select chromosome, chromosome as label, sequenceNum \nfrom MRK_Chromosome where _Organism_key = 1\norder by sequenceNum";
                    }
              }
              {
                Marker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = ExptTypeFrame;
                  topOffset = 10;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = ExptTypeFrame;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 13;
                        xrtTblCharWidthSeries = "(all 0 1)(all 7 3)(all 8 25)(all 9 15)(all 10-11 20)(all 12 7)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,Current Marker key,Chr,Allele key,Assay key,#,Marker,Allele,Assay Type,Description,Matrix?";
                        xrtTblEditableSeries = "(all 0-7 False)";
                        xrtTblPixelWidthSeries = "(all 0-6 0)";
                        xrtTblTraversableSeries = "(all 0-7 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyExptChromosome,\nD:VerifyAllele,\nD:VerifyExptAssay,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 10;
                        xrtTblMaxLengthSeries = "(all 8 40)(all 9 20)(all 10 80)(all 11 255)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nalleleKey:StringTable(StringTable)=\"5\"\nassayKey:Int(Int)=\"6\"\nmarkerSymbol:Int(Int)=\"8\"\nmarkerChr:Int(Int)=\"4\"\nmarkerColumns:Int(Int)=\"1\"\nalleleSymbol:StringTable(StringTable)=\"9\"\nassay:Int(Int)=\"10\"\ndescription:Int(Int)=\"11\"\nyesno:Int(Int)=\"12\"\ncurrentMarkerKey:Int(Int)=\"3\"\n";
                        xrtTblNumRows = 20;
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                      Group: User
                        seqNum = 7;
                        saveTraversableSeries = "(all 0-7 False)";
                        saveEditableSeries = "(all 0-7 False)";
                    }
              }
              {
                ExptTextForm = ExptTextForm : MGD;
                Group: Widget
                  managed = True;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
                  leftWidget = Marker;
              }
              {
                ExptInSituForm = ExptInSituForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Total = CharText;
                    }
                    {
                      Grains = CharText;
                    }
                    {
                      Other = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptFISHForm = ExptFISHForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Label = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Single = CharText;
                    }
                    {
                      Double = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptCrossForm = ExptCrossForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      FStrain = Strain : mgiDataTypes;
                    }
                    {
                      Male = CharText;
                    }
                    {
                      MStrain = Strain : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText;
                    }
                    {
                      Strain1 = Strain;
                    }
                    {
                      Abbrev2 = CharText;
                    }
                    {
                      Strain2 = Strain;
                    }
                    {
                      Allele = toggle;
                    }
                    {
                      F1 = toggle;
                    }
                    {
                      Displayed = toggle;
                    }
                    {
                      CrossHaplotype = OrderedTable;
                    }
                    {
                      CrossTwoPt = OrderedTable;
                    }
                    {
                      Statistics = Statistics;
                    }
              }
              {
                ExptHybridForm = ExptHybridForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptRIForm = ExptRIForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MappingModule = Module1 : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 415;
          Group: User
            homeWidget = Jnum;
            editForms = "ControlForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm";
            clearForms = "ControlForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm";
            activateButtonName = Mapping;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearMLDP";
                                      }
                                      {
                                        Clear1 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear References (1)";
                                          activateCallback = "D:Clear(clearForms = 7, clearLists = 15)";
                                      }
                                      {
                                        Clear2 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear Experiments (2)";
                                          activateCallback = "D:Clear(clearForms = 1021, clearLists = 4)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        Experiments = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                        Group: User
                                          form1 = ExptMasterForm;
                                          form2 = ExptDetailForm;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 700;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        height = 1000;
                          {
                            ID = ID;
                          }
                          {
                            ExptDetailForm = ExptDetailForm : MGD;
                            Group: Widget
                              height = 1000;
                            Group: Constraint
                              leftAttachment = attach_none;
                              rightAttachment = attach_none;
                              topAttachment = attach_none;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiCitation = mgiCitation;
                                }
                                {
                                  referenceNote = mgiNote : mgiDataTypes;
                                }
                                {
                                  ExptTypeFrame = ExptTypeFrame;
                                }
                                {
                                  ChromosomeFrame = ChromosomeFrame : mgiOption;
                                }
                                {
                                  Marker = OrderedTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "markerID:Int(Int)=\"8\"\n";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 7 3)(all 8-9 25)(all 10 15)(all 11-12 20)(all 13 7)";
                                          xrtTblNumColumns = 14;
                                          xrtTblMaxLengthSeries = "(all 9 40)(all 10 20)(all 11 80)(all 12 255)";
                                          xrtTblColumnLabels = "Mode,Current Order,Marker key,Current Marker key,Chr,Allele key,Assay key,#,Marker ID,Marker,Allele,Assay Type,Description,Matrix?";
                                        Group: User
                                          markerSymbol = 9;
                                          alleleSymbol = 10;
                                          assay = 11;
                                          description = 12;
                                          yesno = 13;
                                      }
                                }
                                {
                                  ExptTextForm = ExptTextForm;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  ExptInSituForm = ExptInSituForm;
                                      {
                                        Strain = Strain : mgiDataTypes;
                                            {
                                              StrainID = XmXrtAligner;
                                            }
                                            {
                                              Verify = CharText;
                                            }
                                            {
                                              StrainID = XmXrtAligner;
                                            }
                                      }
                                }
                                {
                                  ExptFISHForm = ExptFISHForm;
                                      {
                                        Strain = Strain : mgiDataTypes;
                                            {
                                              StrainID = XmXrtAligner;
                                            }
                                            {
                                              Verify = CharText;
                                            }
                                            {
                                              StrainID = XmXrtAligner;
                                            }
                                      }
                                }
                                {
                                  ExptCrossForm = ExptCrossForm;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearMLDP";
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    rightWidget = Bottom;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Bottom;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Delete;
                                    rightOffset = 5;
                                    topAttachment = attach_widget;
                                    topWidget = ModifyMarker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ModifyMarker;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifyMarker;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                }
                                {
                                  ModifyMarker = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ModifyMarkerAllExpts";
                                    labelString = "Modify Marker for all Expts in this Reference";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                    rightOffset = 2;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = CREX;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    HYEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    INEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    FSEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TEXT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TXEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    E = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:Select,\nD:GoHome";
                                          visibleItemCount = 20;
                                      }
                                }
                                {
                                  MappingAssayList = MappingAssayList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = Marker;
                                          targetText = 11;
                                          targetKey = 6;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          NonMutantCellLineModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 855;
          Group: User
            homeWidget = CellLine;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  mgiParentCellLine = mgiParentCellLine : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        CellLine = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Non-Mutant Cell Line";
                                            }
                                            {
                                              text = text : mgiDataTypes;
                                              Group: Widget
                                                columns = 50;
                                            }
                                      }
                                      {
                                        Strain = Strain : mgiDataTypes;
                                            {
                                              StrainID = ID;
                                            }
                                            {
                                              Verify = CharText;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "   Cell Line Strain";
                                                  }
                                            }
                                      }
                                      {
                                        Derivation = mgiObject : mgiDataTypes;
                                            {
                                              ObjectID = ID : mgiDataTypes;
                                            }
                                            {
                                              CharText = CharText : mgiDataTypes;
                                              Group: Widget
                                                managed = False;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Derivation;
                                                      managed = False;
                                                  }
                                                  {
                                                    text = text : mgiDataTypes;
                                                    Group: Widget
                                                      columns = 40;
                                                  }
                                            }
                                      }
                                }
                                {
                                  NumberOfMutants = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiParentCellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiParentCellLine;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Number of Mutant Cell Lines";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 5;
                                          inTabGroup = False;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
              }
        }
        {
          AlleleDerivationModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 195;
          Group: User
            homeWidget = DerivationName;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AlleleDerivationTypeFrame = AlleleDerivationTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                  Group: User
                                    defaultValue = " ";
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleDerivationTypeFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        Jnum = Jnum : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                required = False;
                                            }
                                      }
                                      {
                                        Citation = Citation : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 40;
                                              Group: User
                                                required = False;
                                            }
                                      }
                                }
                                {
                                  DerivationName = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cell Line       \nLibrary Name";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 80;
                                      }
                                }
                                {
                                  AlleleCreatorFrame = AlleleCreatorFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = DerivationName;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiParentCellLine = mgiParentCellLine : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleCreatorFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                defaultValue = "-1";
                                            }
                                      }
                                      {
                                        CellLine = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text : mgiDataTypes;
                                              Group: Widget
                                                columns = 50;
                                            }
                                      }
                                      {
                                        ParentStrain : Strain = Strain : mgiDataTypes;
                                            {
                                              StrainID = ID;
                                            }
                                            {
                                              Verify = CharText;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = "Parent Cell Line\nStrain";
                                                  }
                                            }
                                      }
                                      {
                                        Derivation = mgiObject : mgiDataTypes;
                                            {
                                              ObjectID = ID : mgiDataTypes;
                                            }
                                            {
                                              CharText = CharText : mgiDataTypes;
                                              Group: Widget
                                                managed = False;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = Derivation;
                                                      managed = False;
                                                  }
                                                  {
                                                    text = text : mgiDataTypes;
                                                    Group: Widget
                                                      columns = 40;
                                                  }
                                            }
                                      }
                                }
                                {
                                  mgiAlleleVector = mgiAlleleVector : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    topWidget = mgiParentCellLine;
                                }
                                {
                                  AlleleVectorTypeFrame = AlleleVectorTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAlleleVector;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  NumberOfMutants = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleDerivationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleVectorTypeFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Number of Mutant Cell Lines";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 5;
                                          inTabGroup = False;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = NumberOfMutants;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = NumberOfMutants;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 5;
                                      }
                                }
                                {
                                  StemCellLineList = StemCellLineList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = CellLine;
                                          targetWidget = mgiParentCellLine;
                                      }
                                }
                                {
                                  AlleleVectorList = AlleleVectorList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = Vector;
                                          targetWidget = mgiAlleleVector;
                                      }
                                }
                          }
                    }
              }
        }
        {
          TDCVocAnnotModule = Module : MGI;
          Group: Widget
            width = 1225;
            height = 900;
            closeWindowCallback = "D:TDCVocAnnotExit";
          Group: Control
            vip_x = 90;
            vip_y = 580;
          Group: User
            activateButtonName = TDCVocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:TDCVocAnnotExit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeFrame = VocAnnotTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              TDC = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\nqualifierKey:Int=\"0\"\n";
                                                labelString = "TDC/Marker";
                                              Group: User
                                                annotVocab = "TDC/Marker";
                                                evidenceKey = 80;
                                                mgiTypeKey = 2;
                                                vocabKey = 79;
                                                defaultValue = 1011;
                                                qualifierKey = 53;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 10;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Marker;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 50;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MarkerTypeFrame;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 25;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 16;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 19;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Not key,Refs key,Evidence key,Note key,TDC ID,Feature Type,Qual,J:,Citation,Evi,Notes,Modified,Date,Created,Date";
                                          xrtTblPixelWidthSeries = "(all 0-7 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-7 10)(all 8 15)(all 9 40)(all 10 4)(all 12 10)(all 13 3)(all 14 15)(all 15 10)(all 17 10)(all 16 10)(all 18 10)";
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nqualifierKey:Int(Int)=\"4\"\nrefsKey:Int(Int)=\"5\"\nevidenceKey:Int(Int)=\"6\"\ntermAccID:Int(Int)=\"8\"\nterm:Int(Int)=\"9\"\nqualifier:Int(Int)=\"10\"\njnum:Int(Int)=\"11\"\ncitation:Int(Int)=\"12\"\nevidence:Int(Int)=\"13\"\neditor:Int(Int)=\"15\"\nmodifiedDate:Int(Int)=\"16\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"17\"\ncreatedDate:Int(Int)=\"18\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"25\"\nnoteKey:Int(Int)=\"7\"\nnotes:Int(Int)=\"14\"\nnoteTypeKey:Int(Int)=\"1008\"\nvocabQualifierKey:Int(Int)=\"0\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          width = 1000;
                                          xrtTblTraverseCellCallback = "D:TDCTraverse";
                                        Group: Control
                                          lockedResources = xrtTblDisplayHorizScrollBar;
                                        Group: User
                                          requiredColumns = "3\n5";
                                          saveTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  MarkerTypeFrame = MarkerTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: User
                                    targetColumn = 14;
                                    targetWidget = Annotation;
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 6;
                                          targetText = 13;
                                      }
                                }
                                {
                                  TDCList = TDCList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          visibleItemCount = 20;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 3;
                                          targetText = 9;
                                          targetAccID = 8;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
        {
          MarkerModule = Module : MGI;
          Group: Control
            vip_x = 90;
            vip_y = 470;
          Group: User
            homeWidget = Symbol;
            activateButtonName = Marker;
            clearForms = "ControlForm\nEditForm\nnotebook";
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearMarker()";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown : mgiMenu;
                                      {
                                        TDCModule = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"TDCVocAnnot\")";
                                          labelString = "TDC Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1011\"\n";
                                          managed = True;
                                      }
                                }
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Rename = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalRename";
                                      }
                                      {
                                        Merge = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalMerge";
                                      }
                                      {
                                        AlleleOf = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalAlleleOf";
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalDelete";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              width = 850;
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  MarkerTypeFrame = MarkerTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 6;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MarkerStatusFrame = MarkerStatusFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  ChromosomeFrame = ChromosomeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerStatusFrame;
                                    leftOffset = 15;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerStatusFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = MarkerStatusFrame;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 40;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()
";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 6;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 80;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic \nBand";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 10;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  cMposition = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Cyto;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Cyto;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "cM \nPosition";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 10;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  TDCVocab = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 2;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Annot key,Term key,TDC ID,Feature Type";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 12)(all 4 30)";
                                          xrtTblNumRows = 5;
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblVisibleRows = 2;
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "annotKey:Int(Int)=\"1\"\ntermKey:Int(Int)=\"2\"\ntermAccID:Int(Int)=\"3\"\nterm:Int(Int)=\"4\"\nvocabKey:Int=\"0\"\n";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  Current = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = TDCVocab;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = TDCVocab;
                                    leftOffset = 5;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 2;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 25)";
                                          xrtTblMaxLengthSeries = "(all 2 40)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Current Symbol";
                                          xrtTblNumColumns = 4;
                                      }
                                }
                                {
                                  History = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = mgiNoteForm;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 6 3)(all 7 15)(all 8 20)(all 9-10 10)(all 11 20)(all 12 10)(all 13 15)(all 14 12)";
                                          xrtTblColumnLabels = "Mode,Current Order,Marker key,Ref key,Event key,Event Reason key,#,Symbol,Name,Date,J#,Citation,Event,Reason,Modified By";
                                          xrtTblEditableSeries = "(all 0-6 False)";
                                          xrtTblMaxLengthSeries = "(all 1-6 10)(all 7 40)(all 8 255)(all 9-10 10)(all 11-13 255)";
                                          xrtTblNumColumns = 15;
                                          xrtTblPixelWidthSeries = "(all 0-5 0)";
                                          xrtTblTraversableSeries = "(all 0-6 False)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(allowWithdrawn = true),\nD:VerifyReference,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nrefsKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerName:Int(Int)=\"8\"\neventDate:Int(Int)=\"9\"\njnum:Int(Int)=\"10\"\ncitation:Int(Int)=\"11\"\nevent:Int(Int)=\"12\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\ndate:Int(Int)=\"9\"\neventKey:Int(Int)=\"4\"\neventReasonKey:Int(Int)=\"5\"\neventReason:Int(Int)=\"13\"\nmodifiedBy:Int=\"14\"\n";
                                          xrtTblVisibleRows = 5;
                                          xrtTblAllowCellResize = resize_horizontal;
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                        Group: User
                                          saveTraversableSeries = "(all 0-6 False)";
                                          saveEditableSeries = "(all 0-6 False)";
                                          seqNum = 6;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                }
                                {
                                  notebookForm = notebookForm : mgiNoteBook;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = History;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        separator = XmSeparatorGadget;
                                      }
                                      {
                                        legend = XmLabelGadget;
                                        Group: Widget
                                          labelString = "1 = Synonyms, 2 = References\n3 = Accession IDs(Nucleotide Sequence), 4 = Accession IDs(EntrezGene etc.), 5 = Accession IDs(all other)\n6 = Alias, 7 = cM Positions (all)";
                                      }
                                      {
                                        notebook = notebook : mgiNoteBook;
                                            {
                                              Synonym = SynonymTypeTable : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblNumRows = 20;
                                                      xrtTblVisibleRows = 10;
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 20)(all 5 30)(all 6 10)(all 7 30)(all 8 12)(all 9 10)";
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_widget;
                                                      topWidget = SynonymTypeFrame;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      leftWidget = SynonymTypeFrame;
                                                      leftOffset = 2;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      topWidget = SynonymTypeFrame;
                                                      topOffset = 2;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    SynonymTypeFrame = SynonymTypeFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftOffset = 5;
                                                  Popups:
                                                  {
                                                    SynonymTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      sql = " select _SynonymType_key, synonymType from MGI_SynonymType_MusMarker_View where allowOnlyOne = 0 order by _SynonymType_key";
                                                  }
                                                  }
                                            }
                                            {
                                              Reference = ReferenceTypeTable : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 25)(all 6 10)(all 7 80)";
                                                      xrtTblNumRows = 20;
                                                      xrtTblVisibleRows = 10;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_widget;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topWidget = ReferenceTypeFrame;
                                                      topOffset = 5;
                                                    Group: User
                                                      requiredColumns = 2;
                                                      mgiTypeKey = 2;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      labelString = "Add Row";
                                                    Group: Constraint
                                                      leftAttachment = attach_widget;
                                                      leftWidget = ReferenceTypeFrame;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_opposite_widget;
                                                      topWidget = ReferenceTypeFrame;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    ReferenceTypeFrame = ReferenceTypeFrame : mgiOption;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      leftOffset = 5;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  Popups:
                                                  {
                                                    ReferenceTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      sql = "select _RefAssocType_key, assocType from MGI_RefType_Marker_View order by _RefAssocType_key";
                                                  }
                                                  }
                                                  {
                                                    ReviewFrame = YesNoFrame : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                            }
                                            {
                                              AccessionReference1 = AccessionReference : mgiTable;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyMarkerAcc,\nD:VerifyAcc,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                                      xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 12)(all 10 10)";
                                                      xrtTblNumColumns = 11;
                                                      xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation,Modified By,Date";
                                                      userDefinedAttributes = "modifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                                                      xrtTblNumRows = 20;
                                                      xrtTblVisibleRows = 10;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_widget;
                                                      topWidget = AccSourceFrame;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 5;
                                                  }
                                                  {
                                                    Add = TablePush;
                                                  }
                                                  {
                                                    Delete = TablePush;
                                                  }
                                                  {
                                                    AccSourceFrame = AccSourceFrame;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      leftOffset = 5;
                                                      topOffset = 5;
                                                  {
                                                    AccSourceMenu = XmOptionMenu;
                                                    Group: User
                                                      defaultOption = NSequence;
                                                  }
                                                  Popups:
                                                  {
                                                    AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  }
                                                  }
                                            }
                                            {
                                              AccessionReference2 = AccessionReference : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyMarkerAcc,\nD:VerifyAcc,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                                      xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 12)(all 10 10)";
                                                      xrtTblNumColumns = 11;
                                                      xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation,Modified By,Date";
                                                      userDefinedAttributes = "modifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                                                      xrtTblNumRows = 20;
                                                      xrtTblVisibleRows = 10;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_widget;
                                                      topWidget = AccSourceFrame;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                      topOffset = 5;
                                                  }
                                                  {
                                                    Add = TablePush;
                                                  }
                                                  {
                                                    Delete = TablePush;
                                                  }
                                                  {
                                                    AccSourceFrame = AccSourceFrame;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      leftOffset = 5;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    AccSourceMenu = XmOptionMenu;
                                                    Group: User
                                                      defaultOption = EntrezGene;
                                                  }
                                                  Popups:
                                                  {
                                                    AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  }
                                                  }
                                            }
                                            {
                                              AccessionReference3 = AccessionReference : mgiTable;
                                              Group: Widget
                                                rubberPositioning = False;
                                                resizePolicy = resize_any;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyMarkerAcc,\nD:VerifyAcc,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                                      xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 12)(all 10 10)";
                                                      xrtTblNumColumns = 11;
                                                      xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation,Modified By,Date";
                                                      userDefinedAttributes = "modifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                                                      xrtTblNumRows = 20;
                                                      xrtTblVisibleRows = 10;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      rightAttachment = attach_form;
                                                      topAttachment = attach_widget;
                                                      topWidget = AccSourceFrame;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  }
                                                  {
                                                    Add = TablePush;
                                                  }
                                                  {
                                                    Delete = TablePush;
                                                  }
                                                  {
                                                    AccSourceFrame = AccSourceFrame;
                                                    Group: Constraint
                                                      leftAttachment = attach_form;
                                                      leftOffset = 5;
                                                      rightAttachment = attach_none;
                                                      topAttachment = attach_form;
                                                      topOffset = 5;
                                                      bottomAttachment = attach_none;
                                                      resizable = true;
                                                  {
                                                    AccSourceMenu = XmOptionMenu;
                                                    Group: User
                                                      defaultOption = AllenBrainAtlas;
                                                  }
                                                  Popups:
                                                  {
                                                    AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  }
                                                  }
                                            }
                                            {
                                              Alias = Table : mgiTable;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyMarkerChromosome (allowMismatch = false),\nD:CommitTableCellEdit";
                                                      xrtTblNumColumns = 4;
                                                      xrtTblColumnLabels = "Mode,Current key,Marker key,Alias";
                                                      xrtTblPixelWidthSeries = "(all 0-2 0)";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 20)";
                                                      xrtTblMaxLengthSeries = "(all 3 25)";
                                                      xrtTblTraversableSeries = "(all 0-2 False)";
                                                      userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                                      xrtTblVisibleRows = 3;
                                                      xrtTblEditableSeries = "(all 0-2 False)";
                                                      xrtTblNumRows = 3;
                                                  }
                                            }
                                            {
                                              Offset = Table : mgiTable;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblNumColumns = 3;
                                                      xrtTblNumRows = 4;
                                                      xrtTblVisibleRows = 4;
                                                      xrtTblCharWidthSeries = "(all 0-1 1)(all 2 10)(all label 3)";
                                                      xrtTblEditableSeries = "(all 0-1 False)";
                                                      xrtTblRowLabels = "MGD,CC,MIT,Old";
                                                      xrtTblPixelWidthSeries = "(all 0-1 0)";
                                                      userDefinedAttributes = "sourceKey:Int(Int)=\"1\"\noffset:Int(Int)=\"2\"\n";
                                                      xrtTblColumnLabels = "Mode,Source,Offset";
                                                      xrtTblTraversableSeries = "(all 0-1 False)";
                                                  }
                                                  {
                                                    AddRow = TablePush;
                                                    Group: Widget
                                                      sensitive = False;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearMarker";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    sensitive = True;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    sensitive = True;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    rightWidget = Bottom;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Bottom;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = EC;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  CVMarker = CVMarker : mgiCV;
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  TDCList = TDCList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = TDCVocab;
                                          targetAccID = 3;
                                          targetKey = 2;
                                          targetText = 4;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                          {
                            label = XmLabel;
                          }
                          {
                            Note = Notes : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = scrolledText;
                                  Group: Widget
                                    rows = 45;
                                    columns = 125;
                                }
                          }
                    }
                    {
                      WithdrawalDialog = WithdrawalDialog : mgiDialog;
                    }
              }
        }
        {
          AlleleDiseaseVocAnnotModule = Module : MGI;
          Group: Widget
            width = 1225;
            height = 900;
            closeWindowCallback = "D:AlleleDiseaseVocAnnotExit";
          Group: Control
            vip_x = 90;
            vip_y = 250;
          Group: User
            activateButtonName = "Allele/Disease";
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:AlleleDiseaseVocAnnotExit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeFrame = VocAnnotTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              AlleleDisease = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\nqualifierKey:Int=\"0\"\n";
                                                labelString = "Allele/Disease";
                                              Group: User
                                                annotVocab = "Allele/Disease";
                                                evidenceKey = 85;
                                                mgiTypeKey = 11;
                                                vocabKey = 44;
                                                defaultValue = 1012;
                                                qualifierKey = 84;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Allele;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 75;
                                                scrollHorizontal = True;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 5;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 16;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 19;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Not key,Refs key,Evidence key,Note key,Term Acc ID,Vocabulary Term,Qualifier,J:,Citation,Evi,Notes,Modified,Date,Created,Date";
                                          xrtTblPixelWidthSeries = "(all 0-7 0)(all 13 0)(all 14 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-7 10)(all 8 15)(all 9 40)(all 10 10)(all 12 10)(all 13 3)(all 14 25)(all 15 10)(all 17 10)(all 16 10)(all 18 10)";
                                          xrtTblDisplayHorizScrollBar = dispsb_never;
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nqualifierKey:Int(Int)=\"4\"\nrefsKey:Int(Int)=\"5\"\nevidenceKey:Int(Int)=\"6\"\ntermAccID:Int(Int)=\"8\"\nterm:Int(Int)=\"9\"\nqualifier:Int(Int)=\"10\"\njnum:Int(Int)=\"11\"\ncitation:Int(Int)=\"12\"\nevidence:Int(Int)=\"13\"\neditor:Int(Int)=\"15\"\nmodifiedDate:Int(Int)=\"16\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"17\"\ncreatedDate:Int(Int)=\"18\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"12\"\nnoteKey:Int(Int)=\"7\"\nnotes:Int(Int)=\"14\"\nnoteTypeKey:Int(Int)=\"1008\"\nvocabQualifierKey:Int=\"0\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          width = 1000;
                                          xrtTblTraverseCellCallback = "D:AlleleDiseaseTraverse";
                                        Group: User
                                          requiredColumns = "3\n5";
                                          saveTraversableSeries = "(all 0-7 False)(all 9-10 False)(all 12 False)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  AnnotQualifierFrame = AnnotQualifierFrame : mgiOption;
                                      Popups:
                                      {
                                        AnnotQualifierPulldown = OptionPulldown;
                                        Group: User
                                          sql = "select _Term_key, abbreviation from VOC_Term \nwhere _Vocab_key = 84\norder by abbreviation";
                                          tableForm = Annotation;
                                          tableOption = 10;
                                          tableOptionKey = 4;
                                      }
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 6;
                                          targetText = 13;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
        {
          GOVocAnnotModule = Module : MGI;
          Group: Widget
            width = 1200;
            height = 825;
            closeWindowCallback = "D:GOVocAnnotExit";
          Group: Control
            vip_x = 90;
            vip_y = 360;
          Group: User
            activateButtonName = GOVocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_none;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:GOVocAnnotExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearGO";
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                          }
                          {
                            Reports = MenuCascade;
                            Group: Widget
                              managed = True;
                          }
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeFrame = VocAnnotTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              GOMarker = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\nqualifierKey:Int=\"0\"\n";
                                                labelString = "GO/Marker";
                                              Group: User
                                                annotVocab = GO;
                                                evidenceKey = 3;
                                                mgiTypeKey = 2;
                                                vocabKey = 4;
                                                defaultValue = 1000;
                                                qualifierKey = 52;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 10;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Marker;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 50;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  GoAnnotSortFrame = GOAnnotSortFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeFrame;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = GoAnnotSortFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 10;
                                          xrtTblNumColumns = 20;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Qualifier key,Refs key,Evidence key,Term Acc ID,DAG,Vocabulary Term,Qual,J:,Citation,Evi,Inferred From,Modified By,Date,Created By,Date,P";
                                          xrtTblPixelWidthSeries = "(all 0-6 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-6 10)(all 7 12)(all 8 3)(all 9 40)(all 10 4)(all 11 6)(all 12 10)(all 13 3)(all 14 20)(all 15 11)(all 16 10)(all 18 10)(all 19 1)";
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nqualifierKey:Int(Int)=\"4\"\nrefsKey:Int(Int)=\"5\"\nevidenceKey:Int(Int)=\"6\"\ntermAccID:Int(Int)=\"7\"\ndag:Int(Int)=\"8\"\nterm:Int(Int)=\"9\"\nqualifier:Int(Int)=\"10\"\njnum:Int(Int)=\"11\"\ncitation:Int(Int)=\"12\"\nevidence:Int(Int)=\"13\"\ninferredFrom:Int(Int)=\"14\"\neditor:Int(Int)=\"15\"\nmodifiedDate:Int(Int)=\"16\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"17\"\ncreatedDate:Int(Int)=\"18\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"25\"\nvocabQualifierKey:Int(Int)=\"0\"\nhasProperty:Int(Int)=\"19\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:VerifyGOReference,\nD:VerifyVocabQualifier,\nD:VerifyVocabEvidenceCode,\nD:VerifyGOInferredFrom,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-6 False)(all 8-10 False)(all 12 False)(all 19 False)";
                                          xrtTblEnterCellCallback = "D:LoadEvidenceProperty\nD:SetOptions";
                                          xrtTblFrozenColumns = 15;
                                          xrtTblAllowCellResize = resize_all;
                                          width = 950;
                                          xrtTblTraverseCellCallback = "D:GOTraverse";
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          rightAttachment = attach_form;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                        Group: User
                                          requiredColumns = "3\n5\n6";
                                          saveTraversableSeries = "(all 0-6 False)(all 8-10 False)(all 12 False)(all 19 False)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        AnnotQualifierFrame = AnnotQualifierFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = SearchObsoleteTerm;
                                          leftOffset = 35;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topOffset = 5;
                                            Popups:
                                            {
                                              AnnotQualifierPulldown = OptionPulldown;
                                              Group: User
                                                sql = "select _Term_key, abbreviation from VOC_Term \nwhere _Vocab_key = 52 \norder by abbreviation";
                                                tableForm = Annotation;
                                                tableOption = 10;
                                                tableOptionKey = 4;
                                            }
                                      }
                                      {
                                        EvidenceCodeFrame = EvidenceCodeFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = AnnotQualifierFrame;
                                          leftOffset = 15;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = AnnotQualifierFrame;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            Popups:
                                            {
                                              EvidenceCodePulldown = OptionPulldown;
                                              Group: User
                                                sql = "select _Term_key, abbreviation from VOC_Term where _Vocab_key = 3\norder by abbreviation";
                                                tableForm = Annotation;
                                                tableOption = 13;
                                                tableOptionKey = 6;
                                            }
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          labelString = "Save Annotations";
                                          activateCallback = "D:Modify";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          rightWidget = Table;
                                          rightOffset = 250;
                                      }
                                }
                                {
                                  EvidenceProperty = EvidencePropertyTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    leftWidget = Annotation;
                                    topWidget = Annotation;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblValidateCellCallback = "D:VerifyGOIsoform";
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          leftOffset = 2;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                      }
                                      {
                                        EvidencePropertyFrame = EvidencePropertyFrame : mgiOption;
                                        Group: Widget
                                          managed = False;
                                            Popups:
                                            {
                                              EvidencePropertyPulldown = OptionPulldown;
                                              Group: Widget
                                                managed = False;
                                              Group: User
                                                sql = "select _Term_key, term from VOC_Term where _Vocab_key = 82 order by term";
                                                tableForm = EvidenceProperty;
                                            }
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          rightOffset = 250;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = GoAnnotSortFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = GoAnnotSortFrame;
                                    leftOffset = 5;
                                    topOffset = "-5";
                                }
                                {
                                  CompleteFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiAccession;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = VocAnnotTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        CompleteMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = CompletePulldown;
                                          labelString = "Annotation Complete?";
                                      }
                                      Popups:
                                      {
                                        CompletePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  CompleteDate = Date : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = CompleteFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = CompleteFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-5";
                                  Group: User
                                    fieldName = completion_date;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = " ";
                                      }
                                }
                                {
                                  ReferenceGeneFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CompleteFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = CompleteFrame;
                                    topOffset = 5;
                                      {
                                        ReferenceGeneMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = ReferenceGenePulldown;
                                          labelString = "Reference Gene?";
                                      }
                                      Popups:
                                      {
                                        ReferenceGenePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_opposite_widget;
                        bottomAttachment = attach_opposite_widget;
                        resizable = true;
                        leftWidget = MainMenu;
                        topWidget = MainMenu;
                        bottomWidget = MainMenu;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_opposite_widget;
                                    resizable = true;
                                    rightWidget = Clear;
                                    rightOffset = 10;
                                    topWidget = Clear;
                                    bottomWidget = Clear;
                                    topOffset = 0;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearGO";
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 10;
                                    bottomOffset = 2;
                                    topOffset = 2;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 10;
                                    topOffset = 2;
                                    bottomOffset = 2;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Search;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    topOffset = 1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Edit;
                        bottomAttachment = attach_form;
                        resizable = true;
                        topOffset = 10;
                          {
                            panedWindow = XmPanedWindow;
                            Group: Widget
                              orientation = horizontal;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                          width = 400;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Widget
                                    marginHeight = 10;
                                    marginWidth = 10;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 4;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                xrtLblBorderType = border_none;
                                                marginHeight = 0;
                                                labelString = "0 Results";
                                                userDefinedAttributes = "defaultLabel:String(String)=\"Results\"\n";
                                              Group: Constraint
                                                xrtTblLocation = location_top;
                                              Group: User
                                                defaultLabel = " Results";
                                            }
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  EvidencePropertyList = EvidencePropertyList : mgiLookup;
                                  Group: User
                                    cmd = "select _Term_key, term from VOC_Term where _Vocab_key = 82 order by term";
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = EvidenceProperty;
                                          targetKey = 3;
                                          targetText = 6;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
        {
          ActualLogicalModule = Module : MGI;
          Group: Widget
            title = "Actual/Logical Databases";
          Group: Control
            vip_x = 90;
            vip_y = 85;
          Group: User
            homeWidget = Name;
            activateButtonName = ActualLogical;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                            Group: Widget
                              managed = False;
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 80;
                                          columns = 80;
                                      }
                                }
                                {
                                  Description = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Description;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                      }
                                }
                                {
                                  mgiOrganism = mgiOrganism : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Description;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Description;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  URLNote = label : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Within the URL, use a place holder of '@@@@' to designate where the Accession number needs to be substituted.";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiOrganism;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiOrganism;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ActualDB = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = URLNote;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = URLNote;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 9;
                                          xrtTblColumnLabels = "Mode,Actual Key,Active Key,Multiple Key,Name,URL,Active?,Multiple?,Delimiter";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 4 20)(all 5 80)(all 6 7)(all 7 9)(all 8 9)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblMaxLengthSeries = "(all 4 80)(all 5 255)(all 8 8)";
                                          userDefinedAttributes = "actualKey:Int(Int)=\"1\"\nactualName:Int(Int)=\"4\"\nurl:Int(Int)=\"5\"\nactive:Int(Int)=\"6\"\nmultiple:Int(Int)=\"7\"\ndelimiter:Int(Int)=\"8\"\nactiveKey:Int(Int)=\"2\"\nmultipleKey:Int(Int)=\"3\"\n";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Actual Databases";
                                            }
                                      }
                                }
                                {
                                  ActiveFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = ActualDB;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        ActiveMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = ActivePulldown;
                                          labelString = "URL is Active?";
                                      }
                                      Popups:
                                      {
                                        ActivePulldown : YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = ActualDB;
                                          tableOptionKey = 2;
                                          tableOption = 6;
                                      }
                                }
                                {
                                  MultipleFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = ActiveFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        MultipleMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = MultiplePulldown;
                                          labelString = "URL Allows Multiple\nAccession Numbers?";
                                      }
                                      Popups:
                                      {
                                        MultiplePulldown : YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = ActualDB;
                                          tableOptionKey = 3;
                                          tableOption = 7;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  OrganismList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Organism_key, organism from MGI_Organism_Marker_View order by organism";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetText = Organism;
                                          targetKey = ObjectID;
                                          targetWidget = mgiOrganism;
                                      }
                                }
                          }
                    }
              }
        }
}


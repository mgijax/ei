Module: MGD
{
      autoCuil = False;
      release = "TeleUSE v3.2.3 / Solaris 8";
      lastWritten = "Mon Feb 14 09:51:27 2005";
        {
          OrganismModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 305;
          Group: User
            homeWidget = Latin;
            activateButtonName = Organism;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear (clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Latin = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Organism\n(latin)";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Common = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Latin;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Latin;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Common\nName";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  OrganismType = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Common;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 75;
                                  Group: Control
                                    vipComment = "";
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 3 30)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblColumnLabels = "Mode,Key,Key,MGI Type";
                                          userDefinedAttributes = "currentTypeKey:Int=\"1\"\ntypeKey:Int=\"2\"\ntypeName:Int=\"3\"\n";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "MGI Types for Which \nThis Organism is Valid";
                                            }
                                      }
                                }
                                {
                                  Chromosome = OrderedTableLabel : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = OrganismType;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "chr:Int(Int)=\"4\"\nchrKey:Int=\"1\"\n";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 3)(all 4 8)";
                                          xrtTblColumnLabels = "Mode,Key,Current Order,#,Chrom";
                                          xrtTblNumColumns = 5;
                                          xrtTblVisibleRows = 10;
                                          xrtTblNumRows = 11;
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                        Group: User
                                          saveEditableSeries = "(all 0-3 False)";
                                          saveTraversableSeries = "(all 0-3 False)";
                                          currentSeqNum = 2;
                                          seqNum = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Chromosome Order\n(All Organism)";
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = AddRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = AddRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Anchor = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Chromosome;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 10)(all 4 8)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Marker,Chrom";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"4\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Anchors for Web Mini-Map\n(Mouse only)";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear (clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: User
                                          defaultOption = Taxon;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  OrganismMGITypeList = OrganismMGITypeList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = 2;
                                          targetText = 3;
                                          targetWidget = OrganismType;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          RISetModule = Module : MGI;
          Group: Widget
            title = "RI Sets";
          Group: Control
            vip_x = 80;
            vip_y = 140;
          Group: User
            homeWidget = Designation;
            activateButtonName = RISet;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Designation = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Designation;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 15;
                                          columns = 15;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Strain1 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Designation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Designation;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain 1";
                                            }
                                      }
                                }
                                {
                                  Strain2 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Strain1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain1;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain 2";
                                            }
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Strain2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain2;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev1;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev2;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Labels = CharSText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Labels;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          CrossModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 635;
          Group: User
            homeWidget = Name;
            activateButtonName = Cross;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Cross;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  CrossTypeMenu = CrossTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                    rightOffset = 2;
                                }
                                {
                                  Allele = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Offspring type indicate alleles from segregating parent";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  F1 = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "F1 direction known";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Allele;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  FStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Allele;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Female Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  MStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Male Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain1 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain2 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev2;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  FAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev2;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Female Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  FAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Male Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  Progeny = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "# Progeny";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                      }
                                }
                                {
                                  Displayed = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Displayed in Lookup List";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Progeny;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Progeny;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          TissueModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 195;
          Group: User
            homeWidget = Name;
            activateButtonName = Tissue;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Tissue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  StandardMenu = StandardMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  DataSets = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 10;
                                    topWidget = StandardMenu;
                                    topOffset = 5;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicates;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicates;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                }
                                {
                                  Duplicates = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicates,\nD:GoHome";
                                    labelString = "Find Duplicates";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Tissue;
                                              Group: User
                                                keys = "Tissue.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          OrthologyModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 415;
          Group: User
            homeWidget = Jnum;
            activateButtonName = Orthology;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:OrthologyClear";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown;
                                      {
                                        MarkerNonMouse = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"MarkerNonMouse\")";
                                          labelString = "Marker Information";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiCitation;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiCitation;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          managed = True;
                                          labelString = "Class ID";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          managed = True;
                                          inTabGroup = True;
                                          traversalOn = True;
                                      }
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Class ID";
                                                managed = True;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                      {
                                        Jnum = Jnum;
                                      }
                                      {
                                        Citation = Citation;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 50;
                                            }
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 11;
                                          xrtTblColumnLabels = "Mode,Marker Key,Acc Key,Organism Key,#,Organism,Symbol,Chr,Cyto,Name,Acc ID";
                                          xrtTblMaxLengthSeries = "(all 1-3 10)(all 4 3)(all 5 50)(all 6 50)(all 7 8)(all 8 20)(all 9 255)(all 10 25)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 3)(all 5 25)(all 6 30)(all 7 3)(all 8 10)(all 9 30)(all 10 11)";
                                          xrtTblEditableSeries = "(all 0-4 False)(all 7-10 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblNumRows = 11;
                                          userDefinedAttributes = "markerKey:Int(Int)=\"1\"\nmarkerSymbol:Int(Int)=\"6\"\nmarkerChr:Int(Int)=\"7\"\nmarkerName:Int(Int)=\"9\"\nmarkerColumns:Int(Int)=\"1\"\naccKey:Int(Int)=\"2\"\naccID:Int(Int)=\"10\"\norganismKey:Int(Int)=\"3\"\norganism:Int(Int)=\"5\"\nmarkerCyto:Int(Int)=\"8\"\nseqNum:Int(Int)=\"4\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(verifyOtherOrganism = true),\nD:WarnOfIllegalEdits,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 10;
                                        Group: User
                                          addSeqNum = True;
                                      }
                                }
                                {
                                  Assay = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = Marker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    rightWidget = Marker;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 35;
                                          xrtTblColumnLabels = "Mode,Homology Key,Assay Key,Assay,Note,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30";
                                          xrtTblMaxLengthSeries = "(all 1-2 10)(all 3 60)(all 5-34 2)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 40)(all 4 20)(all 5-34 2)";
                                          xrtTblNumRows = 11;
                                          xrtTblEditableSeries = "(all 0-2 False)(all 5-34 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblTraversableSeries = "(all 0-2 False)(all 5-34 False)";
                                          xrtTblSelectionPolicy = select_single;
                                          xrtTblSelectedBackground = None;
                                          xrtTblSelectedForeground = None;
                                          xrtTblSelectCallback = "D:SetCellToX,\nD:VerifyMarkerExists";
                                          userDefinedAttributes = "homologyKey:Int(Int)=\"1\"\nassayKey:Int(Int)=\"2\"\nassay:Int(Int)=\"3\"\nbeginX:Int(Int)=\"5\"\nendX:Int(Int)=\"34\"\nnotes:Int(Int)=\"4\"\n";
                                          xrtTblDisplayHorizScrollBar = dispsb_always;
                                          xrtTblVisibleRows = 10;
                                          xrtTblAllowCellResize = resize_horizontal;
                                        Group: User
                                          required = True;
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:InsertTableRow";
                                          labelString = "Insert Row";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Assay;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Inferred = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Display Inferred Orthologies";
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:OrthologyClear";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: User
                                    targetWidget = Assay;
                                    targetColumn = 4;
                                }
                                {
                                  OrganismList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Organism_key, organism from MGI_Organism_Homology_View where _Organism_key not in (1,2,40) order by organism\n";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectOrganism";
                                        Group: User
                                          targetText = 5;
                                          targetKey = 3;
                                          targetWidget = Marker;
                                      }
                                }
                                {
                                  OrthologyAssayList = OrthologyAssayList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = Assay;
                                          targetText = 3;
                                          targetKey = 2;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Orthology\nLoad Bulk Orthology";
                                              Group: User
                                                keys = "Orthology.py\nloadBulkOrthology.csh";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MolecularSegmentModule = Module1 : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 690;
          Group: User
            homeWidget = Name;
            editForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
            clearForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
            activateButtonName = MolecularSegment;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                      }
                                      {
                                        Clear1 = MenuPush;
                                        Group: Widget
                                          sensitive = True;
                                          labelString = "Clear Molecular Segment";
                                          activateCallback = "D:Clear(clearForms = 63, clearLists = 7)";
                                      }
                                      {
                                        Clear2 = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 65, clearLists = 4)";
                                          labelString = "Clear References";
                                          sensitive = True;
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        References = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                          valueChangedCallback = "D:ViewMolSegForm";
                                        Group: User
                                          form1 = MolMasterForm;
                                          form2 = MolReferenceForm;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 600;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                          {
                            ID = ID;
                          }
                          {
                            MolMasterForm = MolMasterForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                                {
                                  MolDetailForm = MolDetailForm;
                                      {
                                        ParentClone = mgiAccession : mgiDataTypes;
                                      }
                                      {
                                        VectorTypeMenu = VectorTypeMenu : mgiOption;
                                      }
                                      {
                                        InsertSite = CharText : mgiDataTypes;
                                      }
                                      {
                                        InsertSize = CharText : mgiDataTypes;
                                      }
                                      {
                                        separator = XmSeparator;
                                      }
                                      {
                                        SourceForm = SourceForm : MGI;
                                            {
                                              SourceID = ID : mgiDataTypes;
                                            }
                                            {
                                              Library = CharText : mgiDataTypes;
                                            }
                                            {
                                              mgiCitation = mgiCitation : mgiDataTypes;
                                            }
                                            {
                                              SourceSegmentTypeMenu = SegmentTypeMenu : mgiOption;
                                            }
                                            {
                                              SourceVectorTypeMenu = VectorTypeMenu : mgiOption;
                                            }
                                            {
                                              ProbeOrganismMenu = ProbeOrganismMenu : mgiOption;
                                            }
                                            {
                                              ViewAttributeHistory = push;
                                            }
                                            {
                                              Strain = Strain : mgiDataTypes;
                                            }
                                            {
                                              Tissue = Tissue : mgiDataTypes;
                                            }
                                            {
                                              Description = CharText : mgiDataTypes;
                                            }
                                            {
                                              CellLine = mgiVerify : mgiDataTypes;
                                            }
                                            {
                                              AgeMenu = AgeMenu : mgiOption;
                                            }
                                            {
                                              Age = CharText : mgiDataTypes;
                                            }
                                            {
                                              GenderMenu = GenderMenu : mgiOption;
                                            }
                                            {
                                              mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                            }
                                            {
                                              CloneLibrarySet = Table : mgiTable;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblColumnLabels = "Mode,Current Key,Key,Strain Type";
                                                      xrtTblNumColumns = 4;
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                                      xrtTblEditableSeries = "(all 0-2 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-2 0)";
                                                      userDefinedAttributes = "strainTypeCurrentKey:Int=\"1\"\nstrainTypeKey:Int=\"2\"\nstrainType:Int=\"3\"\n";
                                                      xrtTblVisibleRows = 3;
                                                  }
                                            }
                                      }
                                }
                                {
                                  separator1 = XmSeparator;
                                }
                                {
                                  SegmentTypeMenu = SegmentTypeMenu;
                                }
                                {
                                  Name = CharText;
                                }
                                {
                                  MJnum = mgiCitation;
                                }
                                {
                                  Region = CharText;
                                }
                                {
                                  separator = XmSeparator;
                                }
                                {
                                  MolPrimerForm = MolPrimerForm;
                                }
                          }
                          {
                            MolReferenceForm = MolReferenceForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  References = ViewToggle : mgiControl;
                                  Group: Widget
                                    valueChangedCallback = "D:ViewMolSegForm";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModificationHistory;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                  Group: User
                                    form1 = MolMasterForm;
                                    form2 = MolReferenceForm;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    All = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                                  }
                                                  {
                                                    MolecularSegments = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 63, clearLists = 7)";
                                                      labelString = "Molecular Segments";
                                                  }
                                                  {
                                                    References = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 65, clearLists = 4)";
                                                      labelString = References;
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 8;
                                      }
                                }
                                {
                                  ReferenceList = LookupList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "0 References";
                                        Group: User
                                          defaultLabel = References;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectReference";
                                      }
                                }
                                {
                                  LibraryList = LibraryList : mgiLookup;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Probe;
                                              Group: User
                                                keys = "Probe.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MolMasterForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 80;
            vip_y = 1020;
              {
                ID = ID;
              }
              {
                SegmentTypeMenu = SegmentTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Name = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SegmentTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Name;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 30;
                      Group: User
                        required = True;
                    }
              }
              {
                MJnum = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Name;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Name;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-2";
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                      Group: Widget
                        managed = False;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                Region = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Name;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Region\nCovered";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Region;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolPrimerForm = MolPrimerForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                MolDetailForm = MolDetailForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      ParentClone = mgiAccession : mgiDataTypes;
                    }
                    {
                      VectorTypeMenu = VectorTypeMenu : mgiOption;
                    }
                    {
                      InsertSite = CharText : mgiDataTypes;
                    }
                    {
                      InsertSize = CharText : mgiDataTypes;
                    }
                    {
                      separator = XmSeparator;
                    }
                    {
                      SourceForm = SourceForm : MGI;
                          {
                            SourceID = ID : mgiDataTypes;
                          }
                          {
                            Library = CharText : mgiDataTypes;
                          }
                          {
                            mgiCitation = mgiCitation : mgiDataTypes;
                          }
                          {
                            SourceSegmentTypeMenu = SegmentTypeMenu : mgiOption;
                          }
                          {
                            SourceVectorTypeMenu = VectorTypeMenu : mgiOption;
                          }
                          {
                            ProbeOrganismMenu = ProbeOrganismMenu : mgiOption;
                          }
                          {
                            ViewAttributeHistory = push;
                          }
                          {
                            Strain = Strain : mgiDataTypes;
                          }
                          {
                            Tissue = Tissue : mgiDataTypes;
                          }
                          {
                            Description = CharText : mgiDataTypes;
                          }
                          {
                            CellLine = mgiVerify : mgiDataTypes;
                          }
                          {
                            AgeMenu = AgeMenu : mgiOption;
                          }
                          {
                            Age = CharText : mgiDataTypes;
                          }
                          {
                            GenderMenu = GenderMenu : mgiOption;
                          }
                          {
                            mgiNoteForm = mgiNoteForm : mgiDataTypes;
                          }
                          {
                            CloneLibrarySet = Table : mgiTable;
                                {
                                  Table = mgiTable : mgiTable;
                                  Group: Widget
                                    xrtTblColumnLabels = "Mode,Current Key,Key,Strain Type";
                                    xrtTblNumColumns = 4;
                                    xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                    xrtTblEditableSeries = "(all 0-2 False)";
                                    xrtTblPixelWidthSeries = "(all 0-2 0)";
                                    userDefinedAttributes = "strainTypeCurrentKey:Int=\"1\"\nstrainTypeKey:Int=\"2\"\nstrainType:Int=\"3\"\n";
                                    xrtTblVisibleRows = 3;
                                }
                          }
                    }
              }
              {
                separator1 = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = MolDetailForm;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolMarkerForm = MolMarkerForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator1;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MolMarkerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 80;
            vip_y = 1075;
              {
                Marker = ReferenceTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Current Key,New Key,Refs Key,Chr,Marker,R,J#,Citation,Modified By,Date";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 4)(all 5 20)(all 6 1)(all 7 10)(all 8 40)(all 9 20)(all 10 10)";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblMaxLengthSeries = "(all 4 8)(all 5 40)(all 6 1)(all 8 255)";
                        xrtTblNumColumns = 11;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyReference,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerChr:Int(Int)=\"4\"\nmarkerColumns:Int(Int)=\"1\"\nmarkerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"5\"\nrelationship:Int(Int)=\"6\"\nmodifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                        xrtTblVisibleRows = 5;
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                      Group: User
                        citation = 8;
                        jnum = 7;
                        refsCurrentKey = 3;
                        refsKey = 3;
                        requiredColumns = 3;
                    }
              }
              {
                MolNote = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = MolSegNoteMenu;
                  topOffset = 5;
                  leftOffset = 5;
                  bottomOffset = 2;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                    }
              }
              {
                MolSegNoteMenu = NoteMenu : mgiOption;
                Group: Widget
                  labelString = "Pick List of Molecular Segment Notes";
                  subMenuId = MolSegNotePulldown;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Marker;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      MolSegNotePulldown : NotePulldown = OptionPulldown : mgiOption;
                          {
                            KFMemorial = AppendNotePush : mgiDataTypes;
                            Group: User
                              noteWidget = MolNote;
                              note = "This clone is derived from a gene that produces alternate transcripts.";
                          }
                          {
                            Chimeric = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = Chimeric;
                            Group: User
                              note = "Chimeric:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence appears to be artifactually chimeric.";
                              noteWidget = MolNote;
                          }
                          {
                            Same5 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "5'-overlap same strand";
                            Group: User
                              note = "5'-overlap same strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that initiates at a site within a linked upstream gene, where the upstream gene is transcribed in the same direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Same3 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "3'-overlap same strand";
                            Group: User
                              note = "3'-overlap same strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that extends (reads-through) into a linked downstream gene, where the downstream gene is transcribed in the same direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Opposite5 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "5'-overlap opposite strand";
                            Group: User
                              note = "5'-overlap opposite strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that initiates at a site within a linked upstream gene, where the upstream gene is transcribed in the opposite direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Opposite3 = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "3'-overlap opposite strand";
                            Group: User
                              note = "3'-overlap opposite strand:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This sequence is derived from a transcript for a gene that extends (reads-through) into a linked downstream gene, where the downstream gene is transcribed in the opposite direction.";
                              noteWidget = MolNote;
                          }
                          {
                            Intron = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Intron-Containing";
                            Group: User
                              note = "Intron-Containing:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. This cDNA sequence appears to contain intronic sequence as a consequence of incomplete transcript processing.";
                              noteWidget = MolNote;
                          }
                          {
                            FrameShift = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Frame-Shift";
                            Group: User
                              note = "Frame-Shift:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. Conceptual translation of this sequence reveals frame shift errors in the presumed coding region, which may be due to unreliable sequence data.";
                              noteWidget = MolNote;
                          }
                          {
                            Undetermined = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Undetermined Problem Sequence";
                            Group: User
                              note = "Undetermined:  MGI curatorial staff have found evidence of artifact in the sequence of this molecular segment. The artifact may have been introduced during the cloning process, or may be due to unreliable sequence data.";
                              noteWidget = MolNote;
                          }
                          {
                            SequenceSource = AppendNotePush : mgiDataTypes;
                            Group: Widget
                              labelString = "Sequence Source Difference";
                            Group: User
                              note = "The source of the material used to create this cDNA probe was different than that used to create the Genbank sequence record.";
                              noteWidget = MolNote;
                          }
                    }
              }
        }
        {
          MolReferenceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
            managed = False;
          Group: Control
            vip_x = 80;
            vip_y = 1185;
          Group: User
            homeWidget = Jnum;
            queryList = ReferenceList;
              {
                ReferenceID : ID = ID;
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                AccRef = mgiAccessionTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 6;
                        xrtTblNumRows = 10;
                    }
                    {
                      Add = TablePush;
                    }
                    {
                      Delete = TablePush;
                    }
                    {
                      AccSourceMenu = AccSourceMenu;
                      Group: User
                        defaultOption = NSequence;
                          Popups:
                          {
                            AccSourcePulldown = OptionPulldown;
                                {
                                  MGI = AccToggle;
                                }
                                {
                                  J = AccToggle;
                                }
                                {
                                  PubMed = AccToggle : mgiOption;
                                }
                                {
                                  Medline = AccToggle;
                                }
                                {
                                  NSequence = AccToggle;
                                  Group: Widget
                                    set = True;
                                    managed = True;
                                }
                                {
                                  SWISSPROT = AccToggle;
                                }
                                {
                                  TrEMBL = AccToggle : mgiOption;
                                }
                                {
                                  PDB = AccToggle : mgiOption;
                                }
                                {
                                  IMAGE = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  MGC = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  WashU = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  EntrezGene = AccToggle : mgiOption;
                                }
                                {
                                  Ensembl = AccToggle : mgiOption;
                                }
                                {
                                  NCBIGeneModel = AccToggle : mgiOption;
                                }
                                {
                                  EnsemblGeneModel = AccToggle : mgiOption;
                                }
                                {
                                  UniGene = AccToggle : mgiOption;
                                }
                                {
                                  EC = AccToggle;
                                }
                                {
                                  ATCC = AccToggle;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  MRK = AccToggle : mgiOption;
                                }
                                {
                                  MGIImage = AccToggle : mgiOption;
                                }
                                {
                                  CREX = AccToggle : mgiOption;
                                }
                                {
                                  HYEX = AccToggle : mgiOption;
                                }
                                {
                                  INEX = AccToggle : mgiOption;
                                }
                                {
                                  FSEX = AccToggle : mgiOption;
                                }
                                {
                                  RIEX = AccToggle : mgiOption;
                                }
                                {
                                  TEXT = AccToggle : mgiOption;
                                }
                                {
                                  TXEX = AccToggle : mgiOption;
                                }
                                {
                                  PMEX = AccToggle : mgiOption;
                                }
                                {
                                  E = AccToggle : mgiOption;
                                }
                                {
                                  HGNC = AccToggle : mgiOption;
                                }
                                {
                                  RGD = AccToggle : mgiOption;
                                }
                                {
                                  RATMAP = AccToggle : mgiOption;
                                }
                                {
                                  JRS = AccToggle : mgiOption;
                                }
                                {
                                  RIKENCluster = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RIKENClone = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RIKENFANTOM = AccToggle : mgiOption;
                                }
                                {
                                  NIA = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  NIA7 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  NIA15K = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RPCI23 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  RPCI24 = AccToggle : mgiOption;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
              }
              {
                Notes = SingleNote : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = AccRef;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = AccRef;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText : mgiDataTypes;
                      Group: Widget
                        rows = 2;
                        columns = 90;
                    }
              }
              {
                HasSequence = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Has Sequence Presented";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AccRef;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 25;
              }
              {
                RMAP = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "RMAP Info";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = HasSequence;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = HasSequence;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                RFLV = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 10;
                        xrtTblColumnLabels = "Mode,RFLV key,Allele key,Marker key,Strain keys,Endo,Marker,Allele,Fragments,Strains";
                        xrtTblMaxLengthSeries = "(all 5 15)(all 6 25)(all 7 30)(all 8 255)(all 9 5000)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 5-7 10)(all 8 20)(all 9 100)";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblValidateCellCallback = "D:CopyEndoMarker,\nD:VerifyMarker,\nD:VerifyStrains,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "rflvKey:Int=\"1\"\nalleleKey:Int=\"2\"\nmarkerKey:Int=\"3\"\nstrainKeys:Int=\"4\"\nendo:Int=\"5\"\nmarkerSymbol:Int=\"6\"\nallele:Int=\"7\"\nfragments:Int=\"8\"\nstrains:Int=\"9\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                        xrtTblNumRows = 11;
                        xrtTblVisibleRows = 10;
                        xrtTblPixelWidthSeries = "(all 0-4 0)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                      Group: Widget
                        activateCallback = "D:InsertTableRow";
                        labelString = "Insert Row";
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = DeleteRow;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = DeleteRow;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
              }
              {
                Alias = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = HasSequence;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = HasSequence;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 3;
                        xrtTblMaxLengthSeries = "(all 2 30)";
                        xrtTblColumnLabels = "Mode,Alias key,Alias";
                        xrtTblCharWidthSeries = "(all 0 1)(all 2 30)";
                        xrtTblEditableSeries = "(all 0-1 False)";
                        xrtTblPixelWidthSeries = "(all 0-1 0)";
                        xrtTblTraversableSeries = "(all 0-1 False)";
                        userDefinedAttributes = "aliasKey:Int=\"1\"\nalias:Int=\"2\"\n";
                        xrtTblVisibleRows = 3;
                    }
              }
        }
        {
          MolPrimerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 80;
            vip_y = 1240;
              {
                Sequence1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 1";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 40;
                        maxLength = 80;
                    }
              }
              {
                Sequence2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence1;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 2";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 80;
                        columns = 40;
                    }
              }
              {
                ProductSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence2;
                  bottomAttachment = attach_form;
                  resizable = true;
                  bottomOffset = 5;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Product Size";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 20;
                    }
              }
        }
        {
          MolecularSourceModule = Module : MGI;
          Group: Widget
            closeWindowCallback = "D:MolecularSourceExit";
          Group: Control
            vip_x = 80;
            vip_y = 800;
          Group: User
            editForms = "ControlForm\nEditForm\nSourceForm";
            clearForms = "ControlForm\nEditForm\nSourceForm";
            homeWidget = Library;
            activateButtonName = MolecularSource;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MolecularSourceExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  SourceForm = SourceForm : MGI;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        SourceID = ID : mgiDataTypes;
                                      }
                                      {
                                        Library = CharText;
                                        Group: Widget
                                          managed = True;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          leftOffset = 5;
                                          topWidget = ViewAttributeHistory;
                                      }
                                      {
                                        mgiCitation = mgiCitation;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        SourceSegmentTypeMenu = SegmentTypeMenu : mgiOption;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        SourceVectorTypeMenu = VectorTypeMenu : mgiOption;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        ProbeOrganismMenu = ProbeOrganismMenu : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          leftOffset = 5;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = SourceVectorTypeMenu;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        ViewAttributeHistory = push;
                                      }
                                      {
                                        Strain = Strain : mgiDataTypes;
                                      }
                                      {
                                        Tissue = Tissue : mgiDataTypes;
                                      }
                                      {
                                        Description = CharText : mgiDataTypes;
                                      }
                                      {
                                        CellLine = mgiVerify : mgiDataTypes;
                                      }
                                      {
                                        AgeMenu = AgeMenu : mgiOption;
                                      }
                                      {
                                        Age = CharText : mgiDataTypes;
                                      }
                                      {
                                        GenderMenu = GenderMenu : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = AgeMenu;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = AgeMenu;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                      }
                                      {
                                        CloneLibrarySet = Table : mgiTable;
                                        Group: Widget
                                          managed = True;
                                            {
                                              Table = mgiTable : mgiTable;
                                              Group: Widget
                                                xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                                userDefinedAttributes = "strainTypeCurrentKey:Int=\"1\"\nstrainTypeKey:Int=\"2\"\nstrainType:Int=\"3\"\n";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: User
                                          defaultOption = IMAGELibrary;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DOTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIAGeneIndex = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMHCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  CloneLibrarySetList = CloneLibrarySetList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectLookupListItem";
                                        Group: User
                                          targetWidget = CloneLibrarySet;
                                          targetKey = 2;
                                          targetText = 3;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          ExptTextForm = ExptForm : MGD;
          Group: Widget
            rubberPositioning = False;
            height = 450;
            width = 600;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 80;
            vip_y = 1295;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topOffset = 0;
                  bottomOffset = 2;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        rows = 30;
                    }
              }
        }
        {
          ExptForm = EditForm : MGI;
          Group: Widget
            width = 600;
            height = 900;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 80;
            vip_y = 1350;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                  bottomOffset = 2;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 1;
                    }
              }
        }
        {
          ExptHybridForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1460;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Concordance = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 50;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 2 10)(all 3 3)(all 4 20)(all 5-8 5)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker/Chromosome,Cpp,Cpn,Cnp,Cnn";
                        xrtTblNumColumns = 9;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5-8 10)";
                        xrtTblValidateCellCallback = "D:SetHybrid,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"4\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\ncpp:Int=\"5\"\ncpn:Int=\"6\"\ncnp:Int=\"7\"\ncnn:Int=\"8\"\nmarkerSymbolSave:Int=\"4\"\n";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                ChrOrMarker = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
              }
        }
        {
          ExptInSituForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1405;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
                    {
                      StrainID = XmXrtAligner;
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Total = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Grains Scored";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Grains = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Total;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Total;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Grains Correct Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Other = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Grains;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Grains;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Most # Grains Other Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Widget
                  x = "-1";
                  y = "-1";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Count";
                        xrtTblNumColumns = 5;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all all 10)";
                        userDefinedAttributes = "region:Int(Int)=\"3\"\ngrains:Int(Int)=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                    }
                    {
                      EditOrder = toggle : mgiDataTypes;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
        }
        {
          ExptFISHForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1515;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
                    {
                      StrainID = XmXrtAligner;
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Label = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Label;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 50;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Label;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Label;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Single = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Single Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Double = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Single;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Single;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Double Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Single Sig,Double Sig";
                        xrtTblMaxLengthSeries = "(all all 10)";
                        xrtTblNumColumns = 6;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        userDefinedAttributes = "region:Int=\"3\"\nsingleSignal:Int=\"4\"\ndoubleSignal:Int=\"5\"\n";
                    }
              }
        }
        {
          ExptRIForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1570;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                mgiRISet = mgiRISet : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
                    {
                      RIID = ID;
                    }
                    {
                      Origin = CharText : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev1;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
                    {
                      Abbrev2 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev2;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
              }
              {
                Animal = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiRISet;
                  leftOffset = 120;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiRISet;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Animal;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 60;
                    }
              }
              {
                RIHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Animal;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 3 3)(all 4 20)(all 5 60)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker,Haplotypes";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5 255)";
                        xrtTblValidateCellCallback = "D:VerifyExptRIAllele,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"4\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\nhaplotype:Int(Int)=\"5\"\n";
                        xrtTblNumColumns = 6;
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                RITwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RIHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RIHaplotype;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 20)(all 7-8 10)(all 9 20)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2,Discordant,Strains,RI Sets";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 10;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\ndiscordant:Int=\"7\"\nstrains:Int=\"8\"\nsets:Int=\"9\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RITwoPt;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RITwoPt;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
              }
        }
        {
          ExptCrossForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1625;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                mgiCross = mgiCross : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossTypeMenu = CrossTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = mgiCross;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = mgiCross;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 10;
              }
              {
                Female = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiCross;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Female;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                FStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Female;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Female Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Male = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Female;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = FStrain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Male;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                MStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Male;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Male Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Abbrev1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MStrain;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = "-10";
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain1 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Abbrev2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain2 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Allele = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Offspring type indicate \nalleles from segregating parent";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                F1 = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "F1 direction known";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain2;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Displayed = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = F1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = F1;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev2;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 5)(all 4 20)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Mice,Haplotype";
                        xrtTblNumColumns = 5;
                        xrtTblValidateCellCallback = "D:VerifyExptHaplotypes,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        xrtTblMaxLengthSeries = "(all 4 255)";
                        userDefinedAttributes = "mice:Int=\"3\"\nhaplotype:Int=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
              {
                CrossTwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = CrossHaplotype;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_opposite_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 10)(all 7-87 8)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2, Recomb,Parental";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 9;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nrecomb:Int=\"7\"\nparental:Int=\"8\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit \nOrder";
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CrossHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topOffset = 2;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 2;
                    }
              }
        }
        {
          ExptPhysicalForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 80;
            vip_y = 1680;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                GeneOrder = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Gene Order";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                Definitive = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Definitive Order?";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = GeneOrder;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = GeneOrder;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Distance = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Definitive;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 14;
                        xrtTblColumnLabels = "Mode,Marker 1 key,Marker 2 key,Unit key,Real key,#,Marker 1,Marker 2,Distance,Unit,Endo,Frag,Real?,Arrangement";
                        xrtTblCharWidthSeries = "(all 0 1)(all 5 3)(all 6-7 12)(all 8 8)(all 9 4)(all 10 10)(all 11-12 5)(all 13 15)";
                        xrtTblMaxLengthSeries = "(all 6-7 25)(all 8 20)(all 10 20)(all 11 20)(all 13 15)";
                        xrtTblTraversableSeries = "(all 0-5 False)";
                        xrtTblPixelWidthSeries = "(all 0-4 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerKey:Int=\"1\"\nmarkerSymbol:Int=\"6\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nunitKey:Int=\"3\"\nrealKey:Int=\"4\"\nseqNum:Int=\"5\"\ndistance:Int=\"8\"\nunit:Int=\"9\"\nendo:Int=\"10\"\nfragment:Int=\"11\"\nrealDistance:Int=\"12\"\narrangement:Int=\"13\"\n";
                        xrtTblNumRows = 15;
                        xrtTblVisibleRows = 12;
                        xrtTblEditableSeries = "(all 0-5 False)";
                      Group: User
                        addSeqNum = True;
                    }
              }
              {
                PhysUnitsMenu = PhysUnitsMenu;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Distance;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Distance;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    Popups:
                    {
                      PhysUnitsPulldown = OptionPulldown;
                      Group: User
                        tableOption = 9;
                        tableOptionKey = 3;
                        tableForm = Distance;
                    }
              }
              {
                YesNoMenu = YesNoMenu;
                Group: Widget
                  labelString = "Real?";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = PhysUnitsMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = PhysUnitsMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                Group: User
                  defaultOption = Yes;
                    Popups:
                    {
                      YesNoPulldown = OptionPulldown;
                      Group: User
                        tableForm = Distance;
                        tableOption = 12;
                        tableOptionKey = 4;
                          {
                            SearchAll = SearchAll : mgiOption;
                            Group: Widget
                              managed = False;
                          }
                    }
              }
              {
                ArrangeMenu = ArrangeMenu;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = YesNoMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = YesNoMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      ArrangePulldown = OptionPulldown;
                      Group: User
                        tableForm = Distance;
                        tableOptionKey = "-1";
                        tableOption = 13;
                    }
              }
        }
        {
          ExptMasterForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 775;
          Group: Control
            vip_x = 80;
            vip_y = 1790;
          Group: User
            homeWidget = Jnum;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 10;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                Marker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 200;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Current Order,key,Marker key,#,Primary Markers";
                        xrtTblNumRows = 25;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 20;
                        xrtTblMaxLengthSeries = "(all 5 50)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"5\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\nrefMarkerKey:Int=\"2\"\n";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5 40)";
                        xrtTblNumColumns = 6;
                      Group: User
                        seqNum = 4;
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                    }
              }
              {
                DisplayMarker = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Only display the marker \nbeing queried.";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiCitation;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: Control
                  vipComment = "XmToggleButtonGadget sets nontransitory state data within an application. Usually this gadget consists of an indicator (square or diamond) with either text or a pixmap to its right. The indicator implies a selected or unselected state. Normally, mouse button 1 is used to arm and activate the XmToggleButtonGadget.";
              }
        }
        {
          ExptDetailForm = EditForm : MGI;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 800;
          Group: Control
            vip_x = 80;
            vip_y = 1735;
          Group: User
            homeWidget = Chromosome;
            queryList = ExperimentList;
            conditionalList = ExperimentList;
              {
                ID = ID;
              }
              {
                Jnum = Jnum : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = text;
                      Group: User
                        required = False;
                    }
              }
              {
                ExptTypeMenu = ExptTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Jnum;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Jnum;
                  topOffset = 5;
              }
              {
                ChromosomeMenu = ChromosomeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ExptTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = ExptTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      ChromosomePulldown = OptionPulldown;
                      Group: User
                        sql = "select chromosome, label = chromosome, sequenceNum \nfrom MRK_Chromosome where _Organism_key = 1\norder by sequenceNum";
                    }
              }
              {
                ExptMarker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Jnum;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 12;
                        xrtTblCharWidthSeries = "(all 0 1)(all 6 3)(all 7 25)(all 8 15)(all 9-10 20)(all 11 7)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,Chr,Allele key,Assay key,#,Marker,Allele,Assay Type,Description,Matrix?";
                        xrtTblEditableSeries = "(all 0-6 False)";
                        xrtTblPixelWidthSeries = "(all 0-5 0)";
                        xrtTblTraversableSeries = "(all 0-6 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyExptChromosome,\nD:VerifyAllele,\nD:VerifyExptAssay,\nD:VerifyYesNo,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 10;
                        xrtTblMaxLengthSeries = "(all 7 40)(all 8 20)(all 9 80)(all 10 255)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nalleleKey:StringTable=\"4\"\nassayKey:Int(Int)=\"5\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"3\"\nmarkerColumns:Int(Int)=\"1\"\nalleleSymbol:StringTable=\"8\"\nassay:Int(Int)=\"9\"\ndescription:Int(Int)=\"10\"\nyesno:Int(Int)=\"11\"\n";
                        xrtTblNumRows = 20;
                        xrtTblDisplayHorizScrollBar = dispsb_always;
                      Group: User
                        seqNum = 6;
                        saveTraversableSeries = "(all 0-6 False)";
                        saveEditableSeries = "(all 0-6 False)";
                    }
              }
              {
                ExptTextForm = ExptTextForm : MGD;
                Group: Widget
                  managed = True;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptInSituForm = ExptInSituForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Total = CharText;
                    }
                    {
                      Grains = CharText;
                    }
                    {
                      Other = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptFISHForm = ExptFISHForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Label = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Single = CharText;
                    }
                    {
                      Double = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptCrossForm = ExptCrossForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      FStrain = Strain : mgiDataTypes;
                    }
                    {
                      Male = CharText;
                    }
                    {
                      MStrain = Strain : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText;
                    }
                    {
                      Strain1 = Strain;
                    }
                    {
                      Abbrev2 = CharText;
                    }
                    {
                      Strain2 = Strain;
                    }
                    {
                      Allele = toggle;
                    }
                    {
                      F1 = toggle;
                    }
                    {
                      Displayed = toggle;
                    }
                    {
                      CrossHaplotype = OrderedTable;
                    }
                    {
                      CrossTwoPt = OrderedTable;
                    }
                    {
                      Statistics = Statistics;
                    }
              }
              {
                ExptHybridForm = ExptHybridForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptRIForm = ExptRIForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptPhysicalForm = ExptPhysicalForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MappingModule = Module1 : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 745;
          Group: User
            homeWidget = Jnum;
            editForms = "ControlForm\nExptMasterForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm\nExptPhysicalForm";
            clearForms = "ControlForm\nExptMasterForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm\nExptPhysicalForm";
            activateButtonName = Mapping;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 1023, clearLists = 15)";
                                      }
                                      {
                                        Clear1 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear References (1)";
                                          activateCallback = "D:Clear(clearForms = 7, clearLists = 15)";
                                      }
                                      {
                                        Clear2 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear Experiments (2)";
                                          activateCallback = "D:Clear(clearForms = 1021, clearLists = 4)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        Experiments = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                        Group: User
                                          form1 = ExptMasterForm;
                                          form2 = ExptDetailForm;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 600;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        height = 800;
                          {
                            ID = ID;
                          }
                          {
                            ExptMasterForm = ExptMasterForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                          }
                          {
                            ExptDetailForm = ExptDetailForm : MGD;
                            Group: Widget
                              managed = False;
                            Group: Constraint
                              leftAttachment = attach_none;
                              rightAttachment = attach_none;
                              topAttachment = attach_none;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  ID = ID;
                                }
                                {
                                  Jnum = Jnum;
                                }
                                {
                                  ExptTypeMenu = ExptTypeMenu;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                }
                                {
                                  ExptMarker = OrderedTable : mgiTable;
                                }
                                {
                                  ExptTextForm = ExptTextForm;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  ExptInSituForm = ExptInSituForm;
                                }
                                {
                                  ExptFISHForm = ExptFISHForm;
                                }
                                {
                                  ExptCrossForm = ExptCrossForm;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Experiments = ViewToggle : mgiControl;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifiedDate;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                  Group: User
                                    form1 = ExptMasterForm;
                                    form2 = ExptDetailForm;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    All = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 1023, clearLists = 15)";
                                                  }
                                                  {
                                                    References = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 7, clearLists = 15)";
                                                  }
                                                  {
                                                    Experiments = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 1021, clearLists = 4)";
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = CREX;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle;
                                                  }
                                                  {
                                                    CREX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    HYEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    INEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    FSEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TEXT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TXEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PMEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    E = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 4;
                                          singleSelectionCallback = "D:Select (searchExpt = true),\nD:GoHome";
                                      }
                                }
                                {
                                  ExperimentList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "0 Experiments";
                                        Group: User
                                          defaultLabel = Experiments;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 4;
                                          singleSelectionCallback = "D:SelectExpt,\nD:GoHome";
                                      }
                                }
                                {
                                  MarkerList = MarkerList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectLookupListItem(row = -2),\nD:SelectPrimaryMarker";
                                          visibleItemCount = 3;
                                        Group: User
                                          targetWidget = ExptMarker;
                                          targetText = 7;
                                          targetKey = 2;
                                      }
                                }
                                {
                                  MappingAssayList = MappingAssayList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = ExptMarker;
                                          targetText = 9;
                                          targetKey = 5;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = MLDP;
                                              Group: User
                                                keys = "Mldp.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MLCModule = Module : MGI;
          Group: Widget
            closeWindowCallback = "D:ExitMLC";
          Group: Control
            vip_x = 80;
            vip_y = 855;
          Group: User
            homeWidget = Marker;
            activateButtonName = MLC;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitMLC";
                                      }
                                }
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:VerifyEdit(mode = 1),\nD:Modify,\nD:GoHome";
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:VerifyMLCClear";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Import = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Import Description";
                                          activateCallback = "C: TuManage(find = ImportMLCTextDialog)";
                                      }
                                      {
                                        Unlock = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Unlock Record";
                                          activateCallback = "D:UnlockInit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiMarker = mgiMarker : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Marker = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Symbol;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab:  VerifyMLCMarker()";
                                                columns = 30;
                                            }
                                      }
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiMarker;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiMarker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                }
                                {
                                  MLCModeMenu = MLCModeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ChromosomeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  IsDeletedMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = IsDeletedPulldown;
                                    labelString = "Deleted?";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MLCModeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MLCModeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      Popups:
                                      {
                                        IsDeletedPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiMarker;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiMarker;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                      }
                                }
                                {
                                  Description = Text : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Description;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          rows = 25;
                                          columns = 125;
                                      }
                                }
                                {
                                  ExtrasForm = XmForm;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Description;
                                    topWidget = Description;
                                      {
                                        SearchFor = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SearchReplaceText(type=\"Search\")";
                                          labelString = Search;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                      }
                                      {
                                        GlobalReplace = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SaveLocusText,\nD:SearchReplaceText(type=\"GlobalReplace\")";
                                          labelString = "Global Replace";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = SearchStr;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        Replace = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SaveLocusText,\nD:SearchReplaceText(type=\"Replace\")";
                                          labelString = Replace;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = GlobalReplace;
                                          rightAttachment = attach_opposite_widget;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_widget;
                                          resizable = true;
                                          bottomWidget = GlobalReplace;
                                          rightWidget = GlobalReplace;
                                      }
                                      {
                                        UndoReplace = push : mgiDataTypes;
                                        Group: Widget
                                          labelString = Undo;
                                          activateCallback = "D:SearchReplaceText(type=\"UndoReplace\")";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = ReplaceStr;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        SearchStr = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 15;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = SearchFor;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        ReplaceStr = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 15;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = GlobalReplace;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        SelectL = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SelectText(type=\"L\")";
                                          labelString = L;
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = UndoReplace;
                                          leftOffset = 50;
                                      }
                                      {
                                        SelectR = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SelectText(type=\"R\")";
                                          labelString = R;
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = SelectL;
                                      }
                                      {
                                        Unselect = push : mgiDataTypes;
                                        Group: Widget
                                          labelString = Unselect;
                                          activateCallback = "D:SelectText(type=\"None\"),\nD:UnSelectRefsTable,\nD:ClearMatchCount";
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_form;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = SelectR;
                                      }
                                }
                                {
                                  Reference = OrderedTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ExtrasForm;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ExtrasForm;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Current Order,Current Key,New Key,Ref#,J#,Citation";
                                          xrtTblNumColumns = 7;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 4 4)(all 5 10)(all 6 60)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblMaxLengthSeries = "(all 6 255)";
                                          xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "refsCurrentKey:Int=\"2\"\nrefsKey:Int=\"3\"\njnum:Int=\"5\"\ncitation:Int=\"6\"\n";
                                        Group: User
                                          seqNum = 4;
                                          saveTraversableSeries = "(all 0-4 False)";
                                          saveEditableSeries = "(all 0-4 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        EditOrder = toggle;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        form = XmRowColumn;
                                        Group: Widget
                                          orientation = horizontal;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_form;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            {
                                              Sort = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:SortReferences";
                                            }
                                            {
                                              Match = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Match\")";
                                            }
                                            {
                                              Miss = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Miss\")";
                                            }
                                            {
                                              Extra = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Extra\")";
                                            }
                                            {
                                              Count = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = " ";
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      editable = False;
                                                      inTabGroup = False;
                                                      traversalOn = False;
                                                      maxLength = 10;
                                                      columns = 5;
                                                  }
                                            }
                                      }
                                }
                                {
                                  Class = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Reference;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Class Name";
                                          xrtTblMaxLengthSeries = "(all 3 60)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 40)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "classCurrentKey:Int=\"1\"\nclassKey:Int=\"2\"\nclassName:Int=\"3\"\n";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:VerifyMLCClear";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:VerifyEdit(mode = 1),\nD:Modify,\nD:GoHome";
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModifiedBy = ModifiedBy : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ModifiedDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifiedDate;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  ClassList = ClassList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = Class;
                                          targetText = 3;
                                          targetKey = 2;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Current Symbol";
                                              Group: User
                                                keys = "MLC_Current_Symbol.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      ImportMLCTextDialog = ImportMLCTextDialog : mgiDialog;
                    }
                    {
                      ExitDialog = ExitDialog : mgiDialog;
                      Group: Widget
                        okCallback = "D:UncondExit";
                    }
                    {
                      SymbolErrorDialog = SelectionDialog : mgiDialog;
                      Group: Widget
                        autoUnmanage = False;
                        cancelCallback = "C: TuUnmanage";
                        dialogTitle = "Symbol Errors";
                        listLabelString = "Symbol      Reason       NewSymbol(s)";
                        okCallback = "D:FixSymbols";
                        okLabelString = Fix;
                        textColumns = 80;
                    }
                    {
                      ClearDialog = ClearDialog : mgiDialog;
                      Group: Widget
                        okCallback = "D:ClearMLC";
                    }
                    {
                      MLCUnlockDialog = MLCUnlockDialog : mgiDialog;
                    }
              }
        }
        {
          MGD = Application : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 30;
          Group: User
            initDialog = "StrainDialog\nTissueDialog\nRIDialog\nCrossDialog";
              {
                MGDForm = XmForm;
                    {
                      MGDMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      MGDFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MGDMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MGDMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Reference = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Reference\")";
                                    labelString = References;
                                    traversalOn = False;
                                }
                                {
                                  Marker = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Marker\")";
                                    labelString = Markers;
                                    traversalOn = False;
                                }
                                {
                                  Allele = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Allele\")";
                                    labelString = Alleles;
                                    traversalOn = False;
                                }
                                {
                                  Genotypes = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Genotype\")";
                                    labelString = Genotypes;
                                    traversalOn = False;
                                }
                                {
                                  MolecularSegment = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSegment\")";
                                    labelString = "Molecular Probes & Segments";
                                    traversalOn = False;
                                }
                                {
                                  Orthology = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Orthology\")";
                                    traversalOn = False;
                                }
                                {
                                  Mapping = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLDP\")";
                                    labelString = Mapping;
                                    traversalOn = False;
                                }
                                {
                                  MLC = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLC\")";
                                    traversalOn = False;
                                }
                                {
                                  Nomen = XmPushButton;
                                  Group: Widget
                                    labelString = Nomenclature;
                                    activateCallback = "D:CreateMGIModule(name = \"Nomen\")";
                                    traversalOn = False;
                                }
                                {
                                  VocAnnot = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"VocAnnot\")";
                                    labelString = "Vocabulary Annotations";
                                    traversalOn = False;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  Sequence = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Sequence\")";
                                    labelString = Sequences;
                                    traversalOn = False;
                                }
                                {
                                  MolecularSource = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSource\")";
                                    labelString = "Clone Libraries";
                                    traversalOn = False;
                                }
                                {
                                  SimpleVocab = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"SimpleVocab\")";
                                    labelString = "Simple Vocabulary";
                                    traversalOn = False;
                                }
                                {
                                  ControlledVocab = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"ControlledVocab\")";
                                    labelString = "Controlled Vocab";
                                    traversalOn = False;
                                }
                                {
                                  Organism = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Organism\")";
                                    traversalOn = False;
                                }
                                {
                                  Strain = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Strains\")";
                                    traversalOn = False;
                                    labelString = Strains;
                                }
                                {
                                  Tissue = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Tissues\")";
                                    traversalOn = False;
                                    labelString = Tissues;
                                }
                                {
                                  Cross = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Cross\")";
                                    labelString = Crosses;
                                    traversalOn = False;
                                }
                                {
                                  RISet = XmPushButton;
                                  Group: Widget
                                    labelString = "RI Sets";
                                    activateCallback = "D:CreateMGIModule(name = \"RISet\")";
                                    traversalOn = False;
                                }
                                {
                                  Translation = XmPushButton;
                                  Group: Widget
                                    labelString = Translations;
                                    activateCallback = "D:CreateMGIModule(name = \"Translation\")";
                                    traversalOn = False;
                                }
                                {
                                  UserRole = XmPushButton;
                                  Group: Widget
                                    labelString = "User Permissions";
                                    activateCallback = "D:CreateMGIModule(name = \"UserRole\")";
                                    traversalOn = False;
                                }
                                {
                                  separator1 = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog;
              }
              {
                WorkingDialog = WorkingDialog;
              }
              {
                StrainDialog = StrainDialog : mgiDialog;
              }
              {
                TissueDialog = TissueDialog : mgiDialog;
              }
              {
                RIDialog = RIDialog : mgiDialog;
              }
              {
                CrossDialog = CrossDialog : mgiDialog;
              }
        }
        {
          MarkerNonMouseModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 525;
          Group: User
            homeWidget = Symbol;
            activateButtonName = MarkerNonMouse;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Symbol;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiOrganism = mgiOrganism : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Organism = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiOrganism;
                                    leftWidget = mgiOrganism;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Chromosome = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Chromosome;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 8;
                                          maxLength = 8;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyChromosome()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                    leftWidget = mgiOrganism;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Notes = Notes : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 5;
                                      }
                                }
                                {
                                  J58000Note = AppendNotePush : mgiDataTypes;
                                  Group: Widget
                                    labelString = "J:58000 Note";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Notes;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Notes;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    noteWidget = Notes;
                                    note = "J:58000. Sequence homology based on a comparison of mouse sequence:";
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = J58000Note;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = J58000Note;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-4 0) (all 9-10 0)";
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = NSequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                        Group: User
                                          showMGI = False;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = LocusLink;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = False;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  OrganismList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Organism_key, organism from MGI_Organism_Marker_View where _Organism_key = 2 order by organism\nselect _Organism_key, organism from MGI_Organism_Marker_View where _Organism_key > 2 order by organism\n";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = mgiOrganism;
                                          targetText = Organism;
                                          targetKey = ObjectID;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          ReferenceModule = Module : MGI;
          Group: Widget
            title = "Master Bibliography";
          Group: Control
            vip_x = 80;
            vip_y = 85;
          Group: User
            homeWidget = Authors;
            clearForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
            editForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
            activateButtonName = Reference;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 15, clearLists = 5)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                          }
                          {
                            NLM = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "C: TuManage(find = NLMDialog)";
                              labelString = NLM;
                          }
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  RefTypeMenu = RefTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  NLMStatusMenu = NLMStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = RefTypeMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RefTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = YesNLM;
                                }
                                {
                                  ReviewStatusMenu = ReviewStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RefTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RefTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  IsReviewMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = IsReviewPulldown;
                                    labelString = "Is Review Article?";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ReviewStatusMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ReviewStatusMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        IsReviewPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  Authors = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ReviewStatusMenu;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = ReviewStatusMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Authors;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  PrimaryAuthor = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Primary Author";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                          columns = 60;
                                          inTabGroup = False;
                                          traversalOn = False;
                                          editable = False;
                                      }
                                }
                                {
                                  Title = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Title;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  mgiJournal = mgiJournal : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Title;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Title;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiDate = mgiDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiJournal;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiJournal;
                                    topOffset = 2;
                                      {
                                        Date = Date;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 15;
                                              Group: User
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Volume = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiDate;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Volume;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 20;
                                          columns = 10;
                                      }
                                }
                                {
                                  Issue = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Volume;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Volume;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Issue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 25;
                                          columns = 10;
                                      }
                                }
                                {
                                  Page = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Issue;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Issue;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Page;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  DBS = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = DBS;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                      }
                                }
                                {
                                  Notes = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = DataSets;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 2;
                                      }
                                }
                                {
                                  Abstract = Text : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Notes;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abstract;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 3;
                                      }
                                }
                                {
                                  DataSets = DataSets : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Page;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Book = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_opposite_widget;
                        rightWidget = Edit;
                        topAttachment = attach_widget;
                        topWidget = Edit;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            BookForm = EditForm : MGI;
                                {
                                  ID = ID;
                                }
                                {
                                  Editors = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Editors;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 95;
                                          maxLength = 160;
                                      }
                                }
                                {
                                  Title = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Editors;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Editors;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Title;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 200;
                                          columns = 95;
                                      }
                                }
                                {
                                  Place = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Title;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Title;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Place;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 20;
                                          maxLength = 50;
                                      }
                                }
                                {
                                  Publisher = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Place;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Place;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Publisher;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 25;
                                      }
                                }
                                {
                                  Series = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Publisher;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Publisher;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Edition;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 25;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearForms = 15, clearLists = 5)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    J = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  NextJnum = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Last J#";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          traversalOn = False;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Bibliography (format 1)\nBibliography (Moyha)\nBibliography (Moyha) w/ Abstracts\nDuplicate References excluding Mouse News Letter & Guidis\nAll Duplicate References";
                                              Group: User
                                                keys = "Bibliographic.py dynamic 1\nBibliographic.py dynamic 2\nBibliographic.py dynamic 3\nBibliographic.py dup 1\nBibliographic.py dupall 1";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      NLMDialog = NLMDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MolDetailForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 80;
            vip_y = 1130;
              {
                ParentClone = mgiAccession : mgiDataTypes;
                Group: Widget
                  orientation = horizontal;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 135;
                    {
                      ObjectID = ID;
                    }
                    {
                      AccessionID = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent Clone\nAccession ID";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() DisplayParentSource()";
                          }
                    }
                    {
                      AccessionName = CharSText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent\nClone";
                          }
                    }
              }
              {
                VectorTypeMenu = VectorTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                Group: User
                  defaultValue = "Not Specified";
              }
              {
                InsertSite = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = VectorTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSite";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                InsertSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = InsertSite;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = InsertSite;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSize";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = InsertSite;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SourceForm = SourceForm : MGI;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  topOffset = 2;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      SourceID = ID : mgiDataTypes;
                    }
                    {
                      Library = CharText : mgiDataTypes;
                      Group: Widget
                        managed = True;
                    }
                    {
                      mgiCitation = mgiCitation : mgiDataTypes;
                    }
                    {
                      SourceSegmentTypeMenu = SegmentTypeMenu : mgiOption;
                      Group: User
                        required = False;
                    }
                    {
                      SourceVectorTypeMenu = VectorTypeMenu : mgiOption;
                      Group: User
                        required = False;
                    }
                    {
                      ProbeOrganismMenu = ProbeOrganismMenu : mgiOption;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = Library;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = Library;
                        topOffset = 5;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      ViewAttributeHistory = push;
                    }
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      Tissue = Tissue : mgiDataTypes;
                          {
                            TissueID = ID;
                          }
                          {
                            Verify = CharText;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 25;
                                }
                          }
                    }
                    {
                      Description = CharText : mgiDataTypes;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = AgeMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = AgeMenu;
                        topOffset = 5;
                        bottomAttachment = attach_form;
                        bottomOffset = 5;
                        resizable = true;
                    }
                    {
                      CellLine = mgiVerify : mgiDataTypes;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Tissue;
                        leftOffset = 5;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = Tissue;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            Verify = CharText : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 45;
                                }
                          }
                    }
                    {
                      AgeMenu = AgeMenu : mgiOption;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = Tissue;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = Tissue;
                        topOffset = 5;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Age = CharText : mgiDataTypes;
                    }
                    {
                      GenderMenu = GenderMenu : mgiOption;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Age;
                        leftOffset = 5;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = Age;
                        bottomAttachment = attach_none;
                        resizable = true;
                        topOffset = 5;
                    }
                    {
                      mgiNoteForm = mgiNoteForm : mgiDataTypes;
                    }
                    {
                      CloneLibrarySet = Table : mgiTable;
                          {
                            Table = mgiTable : mgiTable;
                            Group: Widget
                              xrtTblColumnLabels = "Mode,Current Key,Key,Strain Type";
                              xrtTblNumColumns = 4;
                              xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                              xrtTblEditableSeries = "(all 0-2 False)";
                              xrtTblPixelWidthSeries = "(all 0-2 0)";
                              userDefinedAttributes = "strainTypeCurrentKey:Int=\"1\"\nstrainTypeKey:Int=\"2\"\nstrainType:Int=\"3\"\n";
                              xrtTblVisibleRows = 3;
                          }
                    }
              }
        }
        {
          NomenModule = NomenModule : MGINomen;
          Group: Control
            vip_x = 80;
            vip_y = 470;
              {
                MainForm = XmForm;
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          AlleleModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 580;
          Group: User
            homeWidget = Marker;
            activateButtonName = Allele;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearAllele";
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown : mgiMenu;
                                      {
                                        AlleleMerge = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:AlleleMergeInit";
                                          labelString = "Allele Merge";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  mgiMarker = mgiMarker : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Marker = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Marker Symbol";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyNomenMarker() VerifyMarkerAlleles()";
                                            }
                                      }
                                }
                                {
                                  AlleleStatusMenu = AlleleStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    leftOffset = 30;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                  Group: User
                                    defaultChild = 4;
                                }
                                {
                                  messageText = messageText : mgiDataTypes;
                                  Group: Widget
                                    background = Yellow;
                                    value = "All information associated with a \nRESERVED symbol is strictly CONFIDENTIAL";
                                    columns = 40;
                                    rows = 2;
                                    editMode = multi_line_edit;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiMarker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = mgiMarker;
                                    leftOffset = 20;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = mgiMarker;
                                    topWidget = mgiMarker;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Symbol";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 60;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Name";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 85;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Reference = ReferenceTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "origRefsKey:Int\n";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditRow = TablePush : mgiTable;
                                      }
                                      {
                                        ReferenceTypeMenu = ReferenceTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              ReferenceTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _RefsType_key, referenceType from ALL_ReferenceType where _RefsType_key > 0 and allowOnlyOne = 0 order by referenceType";
                                            }
                                      }
                                }
                                {
                                  AlleleTypeMenu = AlleleTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MolecularMutation;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MolecularMutation;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 25;
                                    topOffset = 20;
                                    rightOffset = 5;
                                }
                                {
                                  InheritanceModeMenu = InheritanceModeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AlleleTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AlleleTypeMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MolecularMutation = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Molecular Mutation";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                          userDefinedAttributes = "mutationCurrentKey:Int=\"1\"\nmutationKey:Int=\"2\"\nmutation:Int=\"3\"\n";
                                          xrtTblVisibleRows = 3;
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Molecular Characterization";
                                            }
                                      }
                                }
                                {
                                  ESCellLine = mgiVerify : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MolecularMutation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MolecularMutation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    verifyAdd = False;
                                    verifyTable = 336;
                                    verifyKey = VerifyID;
                                      {
                                        Verify = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "ES Cell Line";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 30;
                                                translations = "#override
 Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyItem()";
                                              Group: User
                                                defaultValue = "Not Applicable";
                                            }
                                      }
                                      {
                                        VerifyID = ID : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                defaultValue = "-2";
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ESCellLine;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ESCellLine;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        StrainID = ID;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                defaultValue = "-2";
                                            }
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Strain of \nOrigin";
                                            }
                                            {
                                              text = text;
                                              Group: User
                                                defaultValue = "Not Applicable";
                                            }
                                      }
                                }
                                {
                                  Synonym = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Strain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Syn Key,Refs Key,Synonym,J#,Citation";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 30)(all 4 10)(all 5 50)";
                                          xrtTblMaxLengthSeries = "(all 3 255)(all 5 255)";
                                          xrtTblNumColumns = 6;
                                          userDefinedAttributes = "synonymKey:Int=\"1\"\nsynonym:Int=\"3\"\n";
                                        Group: User
                                          citation = 5;
                                          jnum = 4;
                                      }
                                }
                                {
                                  markerDescription = mgiNoteShort : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = InheritanceModeMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = InheritanceModeMenu;
                                  Group: Control
                                    vipComment = "The XmRowColumn widget is a general purpose manager capable of containing any widget type as a child. In general, it requires no special knowledge about how its children function and provides nothing beyond support for several different layout styles. However, it can be configured as a menu, in which case, it expects only certain children, and it configures to a particular layout. The menus supported are XmMenuBar, XmPulldownMenu, XmPopupMenu, and XmOptionMenu.";
                                      {
                                        Note = Notes : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Marker Detail Clip";
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                maxLength = 300;
                                                shadowThickness = 6;
                                            }
                                      }
                                      {
                                        NotePush = NotePushShort : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Marker Detail Clip";
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = markerDescription;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    rightWidget = markerDescription;
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearAllele";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Delete;
                                    topAttachment = attach_widget;
                                    topWidget = Delete;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "approvedBy:Int(Int)=\"2\"\napprovedFieldName:String(String)=\"approval_date\"\n";
                                          xrtTblNumRows = 3;
                                          xrtTblRowLabels = "Created,Modified,Approved";
                                          xrtTblVisibleRows = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Delete = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  CVAllele = CVAllele : mgiCV;
                                      {
                                        MolecularMutationMenu = MolecularMutationMenu : mgiOption;
                                            Popups:
                                            {
                                              MolecularMutationPulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                tableForm = MolecularMutation;
                                                tableOption = 3;
                                                tableOptionKey = 2;
                                            }
                                      }
                                }
                                {
                                  ESCellLineList = ESCellLineList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = VerifyID;
                                          targetText = Verify;
                                          targetWidget = ESCellLine;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                          {
                            label = XmLabel;
                          }
                          {
                            Note = Notes : mgiDataTypes;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = scrolledText;
                                  Group: Widget
                                    columns = 100;
                                    rows = 50;
                                }
                          }
                    }
                    {
                      AlleleMergeDialog = AlleleMergeDialog : mgiDialog;
                    }
                    {
                      VerifyESStrain = VerifyESStrain : mgiDialog;
                    }
              }
        }
        {
          StrainModule = Module : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 250;
          Group: User
            homeWidget = Name;
            activateButtonName = Strain;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Merge = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "D:StrainMergeInit";
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Name;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Strain;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 95;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  strainSpecies = strainSpecies : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  PrivateMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = PrivatePulldown;
                                    labelString = "Private?";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = strainSpecies;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 20;
                                    leftWidget = strainSpecies;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        PrivatePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  StandardMenu = StandardMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = PrivateMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = PrivateMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  SuperStandardMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = SuperStandardPulldown;
                                    labelString = "Super Standard?";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = StandardMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StandardMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      Popups:
                                      {
                                        SuperStandardPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  NeedsReviewMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = NeedsReviewPulldown;
                                    labelString = "Needs Review?";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = SuperStandardMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = SuperStandardMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                  Group: User
                                    defaultOption = NoReview;
                                      Popups:
                                      {
                                        NeedsReviewPulldown : YesNoPulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              YesReview : Yes = Yes : mgiOption;
                                            }
                                            {
                                              NoReview : No = No : mgiOption;
                                            }
                                      }
                                }
                                {
                                  StrainType = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = strainSpecies;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = strainSpecies;
                                    leftOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Current Key,Key,Strain Type";
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 50)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "strainTypeCurrentKey:Int=\"1\"\nstrainTypeKey:Int=\"2\"\nstrainType:Int=\"3\"\n";
                                          xrtTblVisibleRows = 2;
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = StrainType;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = StrainType;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "markerColumns:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"6\"\nalleleKey:StringTable(StringTable)=\"3\"\nalleleSymbol:StringTable(StringTable)=\"8\"\nprimaryKey:Int(Int)=\"1\"\nqualifierKey:Int=\"4\"\nqualifier:Int=\"5\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyAllele,\nD:CommitTableCellEdit";
                                          xrtTblNumColumns = 9;
                                          xrtTblColumnLabels = "Mode,Key,Key,Key,Key,Type,Chr,Marker,Allele";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 25)(all 6 3)(all 7 30)(all 8 30)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblPixelWidthSeries = "(all 0-4 0)";
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:AddStrainAlleleTypeRow";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = StrainAlleleTypeMenu;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = StrainAlleleTypeMenu;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditRow = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:EditStrainAlleleType";
                                          labelString = "Edit Type";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        StrainAlleleTypeMenu = StrainAlleleTypeMenu : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Synonym = SynonymTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Marker;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Marker;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblPixelWidthSeries = "(all 0-3 0)(all 6-9 0)";
                                        Group: User
                                          requiredColumns = 5;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditRow = TablePush : mgiTable;
                                      }
                                      {
                                        SynonymTypeMenu = SynonymTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              SynonymTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _SynonymType_key, synonymType from MGI_SynonymType_Strain_View order by _SynonymType_key";
                                            }
                                      }
                                }
                                {
                                  Reference = ReferenceTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Synonym;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Synonym;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditRow = TablePush : mgiTable;
                                      }
                                      {
                                        ReferenceTypeMenu = ReferenceTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              ReferenceTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _RefAssocType_key, assocType, allowOnlyOne from MGI_RefType_Strain_View where allowOnlyOne = 0 order by _RefAssocType_key";
                                            }
                                      }
                                }
                                {
                                  Genotype = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 7;
                                          xrtTblColumnLabels = "Mode,Key,G Key,Q Key,MGI ID,Genotype,Qualifier";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 15)(all 5 50)(all 6 15)";
                                          userDefinedAttributes = "strainGenotypeKey:Int(Int)=\"1\"\ngenotypeKey:Int(Int)=\"2\"\nqualifierKey:Int(Int)=\"3\"\ngenotype:Int(Int)=\"4\"\ngenotypeName:Int(Int)=\"5\"\nqualifier:Int(Int)=\"6\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyGenotype\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0 False)(all 5 False)";
                                          xrtTblEditableSeries = "(all 0 False)(all 5 False)";
                                      }
                                }
                                {
                                  ReferenceMGI = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    topWidget = Genotype;
                                    topOffset = 5;
                                    leftWidget = Name;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "refsKey:Int(Int)=\"1\"\njnum:Int(Int)=\"3\"\ncitation:Int(Int)=\"2\"\n";
                                          xrtTblNumColumns = 5;
                                          xrtTblColumnLabels = "Mode,Key,Citation,J#,Data Set";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 3-4 15)";
                                          xrtTblValidateCellCallback = "D:VerifyReference\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 3;
                                        Group: User
                                          dataSet = 4;
                                          accID = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = References;
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectReferenceMGI";
                                      }
                                }
                                {
                                  DataSets = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ReferenceMGI;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ReferenceMGI;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Data Sets";
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectDataSets";
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = DataSets;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = DataSets;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicates;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicates;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Duplicates = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicates,\nD:GoHome";
                                    labelString = "Find Duplicates";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: User
                                          defaultOption = JRS;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DOTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIAGeneIndex = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MMHCC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  SpeciesList = OrganismList : mgiLookup;
                                  Group: User
                                    cmd = "select _Term_key, term from VOC_Term_StrainSpecies_View order by term";
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = SubSpecies;
                                        Group: User
                                          defaultLabel = SubSpecies;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetKey = ObjectID;
                                          targetText = Species;
                                          targetWidget = strainSpecies;
                                      }
                                }
                                {
                                  StrainTypeList = StrainTypeList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = StrainType;
                                          targetKey = 2;
                                          targetText = 3;
                                      }
                                }
                                {
                                  StrainGenoQualMenu = StrainGenoQualMenu : mgiOption;
                                      Popups:
                                      {
                                        StrainGenoQualPulldown = OptionPulldown : mgiOption;
                                        Group: User
                                          tableForm = Genotype;
                                          tableOption = 6;
                                          tableOptionKey = 3;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Strain\nStrain List";
                                              Group: User
                                                keys = "Strain.py\nStrainList.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      StrainMergeDialog = StrainMergeDialog : mgiDialog;
                    }
                    {
                      VerifyValueChange = VerifyValueChange : mgiDialog;
                      Group: Widget
                        messageString = "Are you sure you want to change the Private flag?";
                    }
              }
        }
        {
          SequenceModule = Module1 : MGI;
          Group: Control
            vip_x = 80;
            vip_y = 910;
          Group: User
            homeWidget = Description;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                          }
                          {
                            View = View : mgiMenu;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Strain = MenuPush : mgiMenu;
                                      }
                                      {
                                        Tissue = MenuPush : mgiMenu;
                                      }
                                      {
                                        Cross = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        RI = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm : MGI;
                      Group: Widget
                        width = 875;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                      Group: User
                        homeWidget = Description;
                          {
                            ID = ID : mgiDataTypes;
                          }
                          {
                            SequenceTypeMenu = SequenceTypeMenu : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_form;
                              leftOffset = 5;
                              rightAttachment = attach_none;
                              topAttachment = attach_form;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            SequenceQualityMenu = SequenceQualityMenu : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = SequenceTypeMenu;
                              leftOffset = 10;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = SequenceTypeMenu;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            SequenceStatusMenu = SequenceStatusMenu : mgiOption;
                            Group: Widget
                              foreground = Red;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = SequenceQualityMenu;
                              leftOffset = 10;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = SequenceQualityMenu;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            SequenceProviderMenu = SequenceProviderMenu : mgiOption;
                            Group: Widget
                              foreground = Red;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = SequenceStatusMenu;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = SequenceStatusMenu;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 10;
                          }
                          {
                            VirtualMenu = YesNoMenu : mgiOption;
                            Group: Widget
                              subMenuId = VirtualPulldown;
                              labelString = "Virtual?";
                              foreground = Red;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftOffset = 5;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = SequenceProviderMenu;
                              leftWidget = SequenceProviderMenu;
                                Popups:
                                {
                                  VirtualPulldown : YesNoPulldown = OptionPulldown;
                                }
                          }
                          {
                            Description = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = SequenceTypeMenu;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = SequenceTypeMenu;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Description;
                                    foreground = Red;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    columns = 125;
                                }
                          }
                          {
                            Length = IntText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = Description;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = Description;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Length;
                                    foreground = Red;
                                }
                          }
                          {
                            genbankLabel = label : mgiDataTypes;
                            Group: Widget
                              labelString = "GenBank only:";
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Length;
                              leftOffset = 50;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Length;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 10;
                          }
                          {
                            RawType = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = genbankLabel;
                              leftOffset = 5;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Length;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = "Raw Type";
                                    foreground = Red;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    columns = 15;
                                    maxLength = 15;
                                }
                          }
                          {
                            Version = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = RawType;
                              leftOffset = 5;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = RawType;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Version;
                                    foreground = Red;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    maxLength = 15;
                                    columns = 15;
                                }
                          }
                          {
                            Division = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Version;
                              leftOffset = 5;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Version;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Division;
                                    foreground = Red;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    columns = 3;
                                    maxLength = 3;
                                }
                          }
                          {
                            separatorGadget = XmSeparatorGadget;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_widget;
                              topWidget = Length;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Accession = Accession : mgiTable;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separatorGadget;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                              leftOffset = 250;
                                {
                                  Table = mgiTable;
                                  Group: Widget
                                    userDefinedAttributes = "accStatus:Int=\"5\"\n";
                                    xrtTblNumColumns = 6;
                                    xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Acc Name,Acc ID,Primary/Secondary";
                                    xrtTblCharWidthSeries = "(all 0 1) (all 3 30) (all 4 30) (all 5 20)";
                                    xrtTblEditableSeries = "(all 0 False) (all 3 False) (all 5 False)";
                                    xrtTblTraversableSeries = "(all 0 False) (all 3 False) (all 5 False)";
                                    xrtTblVisibleRows = 5;
                                    xrtTblNumRows = 10;
                                    xrtTblPixelWidthSeries = "(all 0-3 0)";
                                  Group: User
                                    showMGI = False;
                                      {
                                        label = XtXrtLabel;
                                        Group: Widget
                                          labelString = "Accession IDs Associated with this Sequence";
                                          foreground = Red;
                                      }
                                }
                                {
                                  Add = TablePush;
                                  Group: Widget
                                    labelString = Select;
                                }
                                {
                                  Delete = TablePush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  AccSourceMenu = AccSourceMenu : mgiOption;
                                  Group: Widget
                                    managed = False;
                                  Group: User
                                    defaultOption = NSequence;
                                      Popups:
                                      {
                                        AccSourcePulldown = OptionPulldown;
                                            {
                                              MGI = AccToggle : mgiOption;
                                            }
                                            {
                                              J = AccToggle : mgiOption;
                                            }
                                            {
                                              PubMed = AccToggle : mgiOption;
                                            }
                                            {
                                              Medline = AccToggle : mgiOption;
                                            }
                                            {
                                              NSequence = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              SWISSPROT = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              TrEMBL = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              PDB = AccToggle : mgiOption;
                                            }
                                            {
                                              IMAGE = AccToggle : mgiOption;
                                            }
                                            {
                                              MGC = AccToggle : mgiOption;
                                            }
                                            {
                                              WashU = AccToggle : mgiOption;
                                            }
                                            {
                                              EntrezGene = AccToggle : mgiOption;
                                            }
                                            {
                                              Ensembl = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              NCBIGeneModel = AccToggle : mgiOption;
                                            }
                                            {
                                              EnsemblGeneModel = AccToggle : mgiOption;
                                            }
                                            {
                                              UniGene = AccToggle : mgiOption;
                                            }
                                            {
                                              EC = AccToggle : mgiOption;
                                            }
                                            {
                                              ATCC = AccToggle : mgiOption;
                                            }
                                            {
                                              MRK = AccToggle : mgiOption;
                                            }
                                            {
                                              MGIImage = AccToggle : mgiOption;
                                            }
                                            {
                                              CREX = AccToggle : mgiOption;
                                            }
                                            {
                                              HYEX = AccToggle : mgiOption;
                                            }
                                            {
                                              INEX = AccToggle : mgiOption;
                                            }
                                            {
                                              FSEX = AccToggle : mgiOption;
                                            }
                                            {
                                              RIEX = AccToggle : mgiOption;
                                            }
                                            {
                                              TEXT = AccToggle : mgiOption;
                                            }
                                            {
                                              TXEX = AccToggle : mgiOption;
                                            }
                                            {
                                              PMEX = AccToggle : mgiOption;
                                            }
                                            {
                                              E = AccToggle : mgiOption;
                                            }
                                            {
                                              HGNC = AccToggle : mgiOption;
                                            }
                                            {
                                              RGD = AccToggle : mgiOption;
                                            }
                                            {
                                              RATMAP = AccToggle : mgiOption;
                                            }
                                            {
                                              JRS = AccToggle : mgiOption;
                                            }
                                            {
                                              RIKENCluster = AccToggle : mgiOption;
                                            }
                                            {
                                              RIKENClone = AccToggle : mgiOption;
                                            }
                                            {
                                              RIKENFANTOM = AccToggle : mgiOption;
                                            }
                                            {
                                              NIA = AccToggle : mgiOption;
                                            }
                                            {
                                              NIA7 = AccToggle : mgiOption;
                                            }
                                            {
                                              NIA15K = AccToggle : mgiOption;
                                            }
                                            {
                                              RPCI23 = AccToggle : mgiOption;
                                            }
                                            {
                                              RPCI24 = AccToggle : mgiOption;
                                            }
                                            {
                                              RefSeq = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              InterPro = AccToggle : mgiOption;
                                            }
                                            {
                                              Taxon = AccToggle : mgiOption;
                                            }
                                            {
                                              TIGR = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              DOTS = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              NIAGeneIndex = AccToggle : mgiOption;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                }
                          }
                          {
                            SequenceNote = Notes : mgiDataTypes;
                            Group: Widget
                              managed = False;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = Accession;
                              leftOffset = 10;
                              leftWidget = Accession;
                                {
                                  label = XmLabel;
                                }
                                {
                                  text = scrolledText;
                                  Group: Widget
                                    columns = 75;
                                    rows = 7;
                                }
                          }
                          {
                            SeqNoteMenu = NoteMenu : mgiOption;
                            Group: Widget
                              labelString = "Pick List of Sequence Notes";
                              subMenuId = SeqNotePulldown;
                              managed = False;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = SequenceNote;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = SequenceNote;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                                Popups:
                                {
                                  SeqNotePulldown : NotePulldown = OptionPulldown : mgiOption;
                                      {
                                        Chimeric = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = Chimeric;
                                        Group: User
                                          note = "Chimeric:  This sequence appears to be chimeric.";
                                          noteWidget = SequenceNote;
                                      }
                                      {
                                        Intronic = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = Intronic;
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "Intronic: This cDNA sequence appears to be intronic region of a gene.";
                                      }
                                      {
                                        IntronContaining = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Intron-Containing";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "Intron-Containing:  This cDNA sequence appears to contain intronic sequence.";
                                      }
                                      {
                                        FrameShift = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Frame-Shift";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "Frame-Shift:  Conceptual translation of this sequence reveals framerrors in the presumed coding region.e shift ";
                                      }
                                      {
                                        ReverseC = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Reverse complement";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "Reverse complement:  This cDNA sequence appears to be reverse complement of another transcript.";
                                      }
                                      {
                                        Same5 = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "5'-overlap same strand";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "5'-overlap same strand:  This sequence is derived from a transcript for a gene that initiates at a site within a upstream gene, where the upstream gene is transcribed in the same direction.";
                                      }
                                      {
                                        Same3 = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "3'-overlap same strand";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "3'-overlap same strand:  This sequence is derived from a transcript for a gene that extends (reads-through) into a downstream gene, where the downstream gene is transcribed in the same direction.";
                                      }
                                      {
                                        Opposite5 = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "5'-overlap opposite strand";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "5'-overlap opposite strand:  This sequence is derived from a transcript for a gene that initiates at a site within a upstream gene, where the upstream gene is transcribed in the opposite direction.";
                                      }
                                      {
                                        Opposite3 = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "3'-overlap opposite strand";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "3'-overlap opposite strand:  This sequence is derived from a transcript for a gene that extends (reads-through) into a downstream gene, where thedownstream gene is transcribed in the opposite direction. ";
                                      }
                                      {
                                        Low = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Low-quality";
                                        Group: User
                                          noteWidget = SequenceNote;
                                          note = "Low-quality:  The sequence quality is low.";
                                      }
                                }
                          }
                          {
                            separatorGadget1 = XmSeparatorGadget;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_widget;
                              topWidget = Accession;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                          }
                          {
                            NumberOrganisms = IntText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separatorGadget1;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = "Number of non-mouse, non-human, non-rat organisms";
                                    foreground = Red;
                                }
                          }
                          {
                            SourceInfo = TableLabel : mgiTable;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_widget;
                              topWidget = NumberOrganisms;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                              rightOffset = 5;
                                {
                                  Table = mgiTable : mgiTable;
                                  Group: Widget
                                    xrtTblNumColumns = 19;
                                    xrtTblDisplayHorizScrollBar = dispsb_always;
                                    xrtTblColumnLabels = "Mode,Assoc key,Source key,Org key,Strain key,Tissue key,CellLine key,Age key,Age Min,Age Max,Gender key,Library,Organism,Strain,Tissue,Cell Line,Age Prefix,Age Range,Gender";
                                    xrtTblRowLabels = "Raw,Source 1,Source 2,Source 3,Source 4";
                                    xrtTblCharWidthSeries = "(all 0 1)(all 1-10 10)(all 11-15 30)(all 16-18 20)";
                                    userDefinedAttributes = "assocKey:Int(Int)=\"1\"\nsourceKey:Int(Int)=\"2\"\norganismKey:Int(Int)=\"3\"\nstrainKeys:Int(Int)=\"4\"\ntissueKey:Int(Int)=\"5\"\ncellLineKey:Int(Int)=\"6\"\nageKey:Int(Int)=\"7\"\nageMin:Int(Int)=\"8\"\nageMax:Int(Int)=\"9\"\nlibrary:Int(Int)=\"11\"\norganism:Int(Int)=\"12\"\nstrains:Int(Int)=\"13\"\ntissue:Int(Int)=\"14\"\ncellLine:Int(Int)=\"15\"\nagePrefix:Int(Int)=\"16\"\nageRange:Int(Int)=\"17\"\ngenderKey:Int(Int)=\"10\"\ngender:Int(Int)=\"18\"\n";
                                    xrtTblNumRows = 4;
                                    xrtTblVisibleRows = 4;
                                    xrtTblBackgroundSeries = "(all all Wheat) (label all Thistle)(all label Thistle)(0 label Red)";
                                    xrtTblEnterCellCallback = "D:SetOptions";
                                    xrtTblValidateCellCallback = "D:VerifyOrganism (ignoreRow = 0),\nD:VerifyStrains (ignoreRow = 0),\nD:VerifyTissue (ignoreRow = 0),\nD:VerifyCellLine (ignoreRow = 0),\nD:CommitTableCellEdit";
                                    xrtTblPixelWidthSeries = "(all 0-10 0)";
                                    xrtTblAllowCellResize = resize_all;
                                    xrtTblFrozenColumns = 12;
                                  Group: User
                                    saveBackgroundSeries = "(all all Wheat) (label all Thistle)(all label Thistle)(0 label Red)";
                                      {
                                        label = XtXrtLabel;
                                        Group: Widget
                                          labelString = "Source Information";
                                      }
                                }
                                {
                                  AddRow = TablePush : mgiTable;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  DeleteRow = TablePush : mgiTable;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                          {
                            separatorGadget2 = XmSeparatorGadget;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_widget;
                              topWidget = SourceInfo;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                          }
                          {
                            Reference = ReferenceTypeTable : mgiTable;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separatorGadget2;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                              leftOffset = 5;
                                {
                                  Table = mgiTable;
                                  Group: Widget
                                    xrtTblNumRows = 15;
                                    xrtTblVisibleRows = 15;
                                    xrtTblCharWidthSeries = "(all 0 1)(all 1-6 10)(all 7 15)(all 8 35)";
                                    xrtTblDisplayVertScrollBar = dispsb_always;
                                      {
                                        label = XtXrtLabel;
                                        Group: Widget
                                          xrtLblBorderType = border_none;
                                          marginHeight = 0;
                                          labelString = "References Associated with this Sequence";
                                        Group: Constraint
                                          xrtTblLocation = location_top;
                                      }
                                }
                                {
                                  AddRow = TablePush : mgiTable;
                                }
                                {
                                  DeleteRow = TablePush : mgiTable;
                                }
                                {
                                  EditRow = TablePush : mgiTable;
                                }
                                {
                                  ReferenceTypeMenu = ReferenceTypeMenu : mgiOption;
                                      Popups:
                                      {
                                        ReferenceTypePulldown = OptionPulldown : mgiOption;
                                        Group: User
                                          sql = "select _RefAssocType_key, assocType, allowOnlyOne from MGI_RefType_Sequence_View where allowOnlyOne = 0 order by assocType";
                                      }
                                }
                          }
                          {
                            ObjectAssociation = ObjectAssociationTable : mgiTable;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Reference;
                              leftOffset = 10;
                              rightAttachment = attach_form;
                              rightOffset = 5;
                              topAttachment = attach_opposite_widget;
                              topWidget = Reference;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  Table = mgiTable : mgiTable;
                                  Group: Widget
                                    xrtTblNumRows = 15;
                                    xrtTblVisibleRows = 15;
                                    xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 10)(all 4 15)(all 5 25)(all 6 10)";
                                    xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                                    xrtTblColumnLabels = "Mode,Object key,Refs key,Type,MGI ID,Symbol or Name,J#";
                                      {
                                        label = XtXrtLabel;
                                        Group: Widget
                                          labelString = "Markers and Molecular Segments Associated with this Sequence";
                                          foreground = Red;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblRowLabels = "Created,Modified,Provider Record,Sequence Itself";
                                          xrtTblNumRows = 4;
                                          xrtTblVisibleRows = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 15)(all 2 10)(all label 15)";
                                          userDefinedAttributes = "seqRecordDate:Int(Int)=\"2\"\nsequenceDate:Int(Int)=\"3\"\nseqRecordFieldName:String=\"seqrecord_date\"\nsequenceFieldName:String=\"sequence_date\"\n";
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                }
                                {
                                  rowColumn = XmRowColumn;
                                  Group: Widget
                                    spacing = 10;
                                      {
                                        ViewAttributeHistory = push : mgiDataTypes;
                                        Group: Widget
                                          labelString = "View Source Attribute History";
                                          activateCallback = "D:ViewMolecularSourceAttributeHistory (sourceForm = \"SourceInfo\")";
                                        Group: Control
                                          vipComment = "XmPushButtonGadget issues commands within an application. It consists of a text label or pixmap surrounded by a border shadow. The behavior of XmPushButtonGadget differs, depending on the active mouse button. The active mouse button is determined by the parent widget. Normally, mouse button 1 is used to arm and activate the XmPushButtonGadget.";
                                      }
                                }
                                {
                                  CVSequence = CVSequence : mgiCV;
                                      {
                                        AgeMenu = AgeMenu : mgiOption;
                                            Popups:
                                            {
                                              AgePulldown = OptionPulldown;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                  }
                                                  {
                                                    embryonic = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    embryonicDay = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    perinatal = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatal = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalDay = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalWeek = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalMonth = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalYear = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalAdult = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalImmature = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    postnatalNewborn = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    NotSpecified = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    NotApplicable = AgeToggle : mgiOption;
                                                  }
                                                  {
                                                    NotResolved = AgeToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  LibraryList = LibraryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectLookupListItem";
                                        Group: User
                                          targetWidget = SourceInfo;
                                          targetKey = 2;
                                          targetText = 11;
                                      }
                                }
                                {
                                  OrganismSequenceList = OrganismSequenceList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetKey = 3;
                                          targetWidget = SourceInfo;
                                          targetText = 12;
                                      }
                                }
                                {
                                  CellLineList = CellLineList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = SourceInfo;
                                          targetKey = 6;
                                          targetText = 15;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      MolecularSourceAttributeHistoryDialog = MolecularSourceAttributeHistoryDialog : mgiDialog;
                          {
                            AttributeHistoryTable = Table : mgiTable;
                                {
                                  Table = mgiTable : mgiTable;
                                  Group: Widget
                                    xrtTblDisplayVertScrollBar = dispsb_never;
                                    xrtTblNumRows = 7;
                                    xrtTblVisibleRows = 7;
                                }
                          }
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          MPAnnotModule = Module : MGI;
          Group: Widget
            width = 1225;
            height = 825;
            closeWindowCallback = "D:VocAnnotExit";
          Group: Control
            vip_x = 80;
            vip_y = 965;
          Group: User
            activateButtonName = VocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:VocAnnotExit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeMenu = VocAnnotTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              MPGenotype = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\n";
                                                labelString = "Mammalian Phenotype/Genotype";
                                              Group: User
                                                annotVocab = "Mammalian Phenotype";
                                                evidenceKey = 2;
                                                mgiTypeKey = 12;
                                                vocabKey = 5;
                                                defaultValue = 1002;
                                            }
                                            {
                                              PSGenotype = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\n";
                                                labelString = "PhenoSlim/Genotype";
                                              Group: User
                                                annotVocab = PhenoSlim;
                                                evidenceKey = 2;
                                                mgiTypeKey = 12;
                                                vocabKey = 1;
                                                defaultValue = 1001;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeMenu;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Object;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 75;
                                                scrollHorizontal = True;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 25;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Term SeqNum,Not key,Refs key,Current Refs key,Evidence key,Current Evidence key,Evidence SeqNum,Note key,DAG,Term Acc ID,Vocabulary Term,NOT,J:,Citation,Evi,Modified By,Date,General Notes,B-S Notes,Created By,Date";
                                          xrtTblPixelWidthSeries = "(all 0-12 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-12 10)(all 13 15)(all 14 25)(all 15 3)(all 17 10)(all 18 3)(all 21-22 15)(all 19 11)(all 20 10)(all 24 10)";
                                          xrtTblDisplayHorizScrollBar = dispsb_always;
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nnotKey:Int(Int)=\"5\"\nrefsKey:Int(Int)=\"6\"\nevidenceKey:Int(Int)=\"8\"\ntermAccID:Int(Int)=\"13\"\ndag:Int(Int)=\"12\"\nterm:Int(Int)=\"14\"\nnotCode:Int(Int)=\"15\"\njnum:Int(Int)=\"16\"\ncitation:Int(Int)=\"17\"\nevidence:Int(Int)=\"18\"\neditor:Int(Int)=\"19\"\nmodifiedDate:Int(Int)=\"20\"\nnotes:Int(Int)=\"21\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\ncurrentRefsKey:Int(Int)=\"7\"\ncurrentEvidenceKey:Int(Int)=\"9\"\ntermSeqNum:Int(Int)=\"4\"\nevidenceSeqNum:Int(Int)=\"10\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"23\"\ncreatedDate:Int(Int)=\"24\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"25\"\nnoteTypeKey:Int(Int)=\"1008\"\nnoteKey:Int(Int)=\"11\"\nbsNotes:Int=\"22\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:VerifyGOReference,\nD:VerifyVocabEvidenceCode,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-12 False)(all 14-15 False)(all 17 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          xrtTblFrozenColumns = 12;
                                          xrtTblAllowCellResize = resize_all;
                                          width = 950;
                                          xrtTblCellValues = "(X,1,1,1,1,1,1,1,1,1,1,1,1,MP:0005217,abnormal pancreatic beta cells morphology,No,90420,Ishihra H,EE,smb,7/9/2004,2,1,smb,7/9/2004)(X,1,1,1,1,1,1,1,1,1,1,1,1,MP:0005217,abnormal pancreatic beta cells morphology,No,81234,Jones A,EE,smb,7/9/2004,0,0,smb,7/9/2004)(X,1,1,1,1,1,1,1,1,1,1,1,1,MP:0005559,increased circulating glucose level,No,90420,Ishihra H,EE,smb,7/9/2004,0,0,smb,7/9/2004)(X,1,1,1,1,1,1,1,1,1,1,1,1,MP:0002710,increased glucagon secretion,No,90420,Ishihra H,EE,smb,7/9/2004,0,0,smb,7/9/2004)";
                                        Group: User
                                          requiredColumns = "3\n6\n8";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  NoteTable = NoteTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Annotation;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Annotation;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    bottomOffset = 5;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                      }
                                      {
                                        NoteTypeMenu = NoteTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              NoteTypePulldown = OptionPulldown : mgiOption;
                                                  {
                                                    OptionPush = OptionPush : mgiOption;
                                                    Group: Widget
                                                      labelString = General;
                                                  }
                                                  {
                                                    OptionPush1 = OptionPush : mgiOption;
                                                    Group: Widget
                                                      labelString = "Background-Sensitivity";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  NotMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = NotPulldown;
                                    labelString = NOT;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        NotPulldown : YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = Annotation;
                                          tableOption = 15;
                                          tableOptionKey = 5;
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: Widget
                                    activateCallback = "D:NotePreInit,D:NoteInit";
                                  Group: User
                                    targetColumn = 22;
                                    targetWidget = Annotation;
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 8;
                                          targetText = 18;
                                      }
                                }
                                {
                                  PhenoSlimList = PhenoSlimList : mgiLookup;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          visibleItemCount = 15;
                                        Group: User
                                          targetKey = 3;
                                          targetWidget = Annotation;
                                          targetText = 14;
                                          targetAccID = 12;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                          {
                            label = XmLabel;
                          }
                          {
                            Note = Notes : mgiDataTypes;
                          }
                          {
                            separator = XmSeparator;
                          }
                          {
                            Buttons = Buttons : mgiDialog;
                                {
                                  OK = DialogPush;
                                }
                                {
                                  Cancel = DialogPush;
                                  Group: Widget
                                    activateCallback = "D:NotePreCancel,D:NoteCancel";
                                }
                          }
                    }
              }
        }
        {
          MarkerSave = Module : MGI;
          Group: Control
            vip_x = 164;
            vip_y = 410;
          Group: User
            homeWidget = Symbol;
            activateButtonName = Marker;
            clearForms = "ControlForm\nEditForm\nnotebook";
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearMarker";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Rename = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalRename";
                                      }
                                      {
                                        Merge = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalMerge";
                                      }
                                      {
                                        AlleleOf = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalAlleleOf";
                                      }
                                      {
                                        Split = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalSplit";
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalDelete";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                              width = 850;
                                {
                                  ID = ID;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MarkerStatusMenu = MarkerStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 15;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerStatusMenu;
                                    leftOffset = 15;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerStatusMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Offset;
                                    topWidget = ChromosomeMenu;
                                    topOffset = 15;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 40;
                                          maxLength = 40;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = ChromosomeMenu;
                                    topOffset = "-5";
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 10;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Current = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 25)";
                                          xrtTblMaxLengthSeries = "(all 2 40)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Current Symbol";
                                      }
                                }
                                {
                                  Offset = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Current;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Current;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblNumRows = 3;
                                          xrtTblVisibleRows = 3;
                                          xrtTblCharWidthSeries = "(all 0-1 1)(all 2 10)(all label 3)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblRowLabels = "MGD,CC,MIT";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          userDefinedAttributes = "sourceKey:Int(Int)=\"1\"\noffset:Int(Int)=\"2\"\n";
                                          xrtTblColumnLabels = "Mode,Source,Offset";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 60;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  NotebookForm = notebookForm : mgiNoteBook;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Current;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        separator = XmSeparatorGadget;
                                      }
                                      {
                                        legend = XmLabelGadget;
                                        Group: Widget
                                          labelString = "1 = Accession, 2 = History, 3 = Synonym, 4 = Reference Indexing, 5 = Alias, 6 = Allele";
                                      }
                                      {
                                        notebook = notebook : mgiNoteBook;
                                            {
                                              AccessionReference = AccessionReference : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyAcc,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                                      xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 12)(all 10 10)";
                                                      xrtTblNumColumns = 11;
                                                      xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation,Modified By,Date";
                                                      userDefinedAttributes = "modifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                                                      xrtTblNumRows = 25;
                                                      xrtTblVisibleRows = 20;
                                                  }
                                                  {
                                                    Add = TablePush;
                                                  }
                                                  {
                                                    Delete = TablePush;
                                                  }
                                                  {
                                                    AccSourceMenu = AccSourceMenu;
                                                    Group: User
                                                      defaultOption = NSequence;
                                                  Popups:
                                                  {
                                                    AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGR = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    DOTS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NIAGeneIndex = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  }
                                                  }
                                            }
                                            {
                                              History = OrderedTable : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 6 3)(all 7 15)(all 8 20)(all 9-10 10)(all 11 20)(all 12 10)(all 13 15)(all 14 12)";
                                                      xrtTblColumnLabels = "Mode,Current Order,Marker key,Ref key,Event key,Event Reason key,#,Symbol,Name,Date,J#,Citation,Event,Reason,Modified By";
                                                      xrtTblEditableSeries = "(all 0-6 False)";
                                                      xrtTblMaxLengthSeries = "(all 1-6 10)(all 7 40)(all 8 255)(all 9-10 10)(all 11-13 255)";
                                                      xrtTblNumColumns = 20;
                                                      xrtTblPixelWidthSeries = "(all 0-5 0)";
                                                      xrtTblTraversableSeries = "(all 0-6 False)";
                                                      xrtTblValidateCellCallback = "D:VerifyMarker(allowWithdrawn = true),\nD:VerifyReference,\nD:VerifyDate,\nD:CommitTableCellEdit";
                                                      userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nrefsKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerName:Int(Int)=\"8\"\neventDate:Int(Int)=\"9\"\njnum:Int(Int)=\"10\"\ncitation:Int(Int)=\"11\"\nevent:Int(Int)=\"12\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\ndate:Int(Int)=\"9\"\neventKey:Int(Int)=\"4\"\neventReasonKey:Int(Int)=\"5\"\neventReason:Int(Int)=\"13\"\nmodifiedBy:Int=\"14\"\n";
                                                      xrtTblVisibleRows = 15;
                                                      xrtTblAllowCellResize = resize_horizontal;
                                                      xrtTblEnterCellCallback = "D:SetOptions";
                                                      xrtTblNumRows = 25;
                                                    Group: User
                                                      saveTraversableSeries = "(all 0-6 False)";
                                                      saveEditableSeries = "(all 0-6 False)";
                                                      seqNum = 6;
                                                  }
                                            }
                                            {
                                              Synonym = SynonymTypeTable : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable : mgiTable;
                                                    Group: Widget
                                                      xrtTblNumRows = 25;
                                                      xrtTblVisibleRows = 20;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    EditRow = TablePush : mgiTable;
                                                  }
                                                  {
                                                    SynonymTypeMenu = SynonymTypeMenu : mgiOption;
                                                  Popups:
                                                  {
                                                    SynonymTypePulldown = OptionPulldown : mgiOption;
                                                    Group: User
                                                      sql = " select _SynonymType_key, synonymType from MGI_SynonymType_MusMarker_View where allowOnlyOne = 0 order by _SynonymType_key";
                                                  }
                                                  }
                                            }
                                            {
                                              Reference = ReferenceTable : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblVisibleRows = 20;
                                                      userDefinedAttributes = "reviewKey:Int(Int)=\"3\"\nreview:Int(Int)=\"6\"\n";
                                                      xrtTblEnterCellCallback = "D:SetOptions";
                                                      xrtTblNumColumns = 7;
                                                      xrtTblColumnLabels = "Mode,Current Key,New Key,Review Key,J#,Citation,Review?";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 60)(all 6 7)";
                                                      xrtTblEditableSeries = "(all 0-3 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-3 0)";
                                                      xrtTblTraversableSeries = "(all 0-3 False)";
                                                      xrtTblNumRows = 25;
                                                    Group: User
                                                      jnum = 4;
                                                      citation = 5;
                                                  }
                                            }
                                            {
                                              Alias = Table : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyMarkerChromosome (allowMismatch = false),\nD:CommitTableCellEdit";
                                                      xrtTblNumColumns = 4;
                                                      xrtTblColumnLabels = "Mode,Current key,Marker key,Alias";
                                                      xrtTblPixelWidthSeries = "(all 0-2 0)";
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 20)";
                                                      xrtTblMaxLengthSeries = "(all 3 25)";
                                                      xrtTblTraversableSeries = "(all 0-2 False)";
                                                      userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                                      xrtTblVisibleRows = 20;
                                                      xrtTblEditableSeries = "(all 0-2 False)";
                                                      xrtTblNumRows = 25;
                                                  }
                                            }
                                            {
                                              Allele = Table : mgiTable;
                                              Group: Constraint
                                                resizable = true;
                                                  {
                                                    Table = mgiTable;
                                                    Group: Widget
                                                      xrtTblNumColumns = 4;
                                                      xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 25)(all 3 60)";
                                                      xrtTblMaxLengthSeries = "(all 2 50)(all 3 255)";
                                                      xrtTblEditableSeries = "(all 0-1 False)";
                                                      xrtTblPixelWidthSeries = "(all 0-1 0)";
                                                      xrtTblColumnLabels = "Mode,Key,Allele Symbol,Allele Name";
                                                      userDefinedAttributes = "alleleKey:Int=\"1\"\nalleleSymbol:Int=\"2\"\nalleleName:Int=\"3\"\n";
                                                      xrtTblVisibleRows = 20;
                                                      xrtTblTraversableSeries = "(all 0-1 False)";
                                                      xrtTblNumRows = 25;
                                                  }
                                                  {
                                                    AddRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                                  {
                                                    DeleteRow = TablePush : mgiTable;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearMarker";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Delete;
                                    topAttachment = attach_widget;
                                    topWidget = Delete;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  CVMarker = CVMarker : mgiCV;
                                      {
                                        MarkerEventMenu = MarkerEventMenu : mgiOption;
                                      }
                                      {
                                        MarkerEventReasonMenu = MarkerEventReasonMenu : mgiOption;
                                      }
                                      {
                                        ReviewMenu : YesNoMenu = YesNoMenu : mgiOption;
                                        Group: Widget
                                          subMenuId = ReviewPulldown;
                                            Popups:
                                            {
                                              ReviewPulldown : YesNoPulldown = OptionPulldown;
                                              Group: User
                                                tableForm = OtherReference;
                                                tableOptionKey = 4;
                                                tableOption = 8;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 20;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Marker;
                                              Group: User
                                                keys = "Marker.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      WithdrawalDialog = WithdrawalDialog : mgiDialog;
                    }
              }
        }
        {
          MarkerModule = Module : MGI;
          Group: Control
            vip_x = 85;
            vip_y = 361;
          Group: User
            homeWidget = Symbol;
            activateButtonName = Marker;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ClearMarker";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Rename = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalRename";
                                      }
                                      {
                                        Merge = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalMerge";
                                      }
                                      {
                                        AlleleOf = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalAlleleOf";
                                      }
                                      {
                                        Split = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalSplit";
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerWithdrawalDelete";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                              width = 850;
                                {
                                  ID = ID;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MarkerStatusMenu = MarkerStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 15;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerStatusMenu;
                                    leftOffset = 15;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerStatusMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Alias;
                                    topWidget = ChromosomeMenu;
                                    topOffset = 15;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 40;
                                          maxLength = 40;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = ChromosomeMenu;
                                    topOffset = "-5";
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 10;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Current = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 25)";
                                          xrtTblMaxLengthSeries = "(all 2 40)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Current Symbol";
                                      }
                                }
                                {
                                  Offset = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Current;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Current;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblNumRows = 3;
                                          xrtTblVisibleRows = 3;
                                          xrtTblCharWidthSeries = "(all 0-1 1)(all 2 10)(all label 3)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblRowLabels = "MGD,CC,MIT";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          userDefinedAttributes = "sourceKey:Int(Int)=\"1\"\noffset:Int(Int)=\"2\"\n";
                                          xrtTblColumnLabels = "Mode,Source,Offset";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  History = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Current;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 6 3)(all 7 15)(all 8 20)(all 9-10 10)(all 11 20)(all 12 10)(all 13 15)(all 14 12)";
                                          xrtTblColumnLabels = "Mode,Current Order,Marker key,Ref key,Event key,Event Reason key,#,Symbol,Name,Date,J#,Citation,Event,Reason,Modified By";
                                          xrtTblEditableSeries = "(all 0-6 False)";
                                          xrtTblMaxLengthSeries = "(all 1-6 10)(all 7 40)(all 8 255)(all 9-10 10)(all 11-13 255)";
                                          xrtTblNumColumns = 15;
                                          xrtTblPixelWidthSeries = "(all 0-5 0)";
                                          xrtTblTraversableSeries = "(all 0-6 False)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(allowWithdrawn = true),\nD:VerifyReference,\nD:VerifyDate,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nrefsKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerName:Int(Int)=\"8\"\neventDate:Int(Int)=\"9\"\njnum:Int(Int)=\"10\"\ncitation:Int(Int)=\"11\"\nevent:Int(Int)=\"12\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\ndate:Int(Int)=\"9\"\neventKey:Int(Int)=\"4\"\neventReasonKey:Int(Int)=\"5\"\neventReason:Int(Int)=\"13\"\nmodifiedBy:Int=\"14\"\n";
                                          xrtTblVisibleRows = 5;
                                          xrtTblAllowCellResize = resize_horizontal;
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                        Group: User
                                          saveTraversableSeries = "(all 0-6 False)";
                                          saveEditableSeries = "(all 0-6 False)";
                                          seqNum = 6;
                                      }
                                }
                                {
                                  Alias = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Offset;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Offset;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyMarkerChromosome (allowMismatch = false),\nD:CommitTableCellEdit";
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Alias";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 20)";
                                          xrtTblMaxLengthSeries = "(all 3 25)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblVisibleRows = 3;
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblNumRows = 3;
                                      }
                                }
                                {
                                  Synonym = SynonymTypeTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = History;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 5;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditRow = TablePush : mgiTable;
                                      }
                                      {
                                        SynonymTypeMenu = SynonymTypeMenu : mgiOption;
                                            Popups:
                                            {
                                              SynonymTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = " select _SynonymType_key, synonymType from MGI_SynonymType_MusMarker_View where allowOnlyOne = 0 order by _SynonymType_key";
                                            }
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Synonym;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                    leftOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                          userDefinedAttributes = "reviewKey:Int(Int)=\"3\"\nreview:Int(Int)=\"6\"\n";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          xrtTblNumColumns = 7;
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Review Key,J#,Citation,Review?";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-4 10)(all 5 60)(all 6 7)";
                                          xrtTblEditableSeries = "(all 0-3 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-3 False)";
                                        Group: User
                                          jnum = 4;
                                          citation = 5;
                                      }
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Reference;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Reference;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblValidateCellCallback = "D:VerifyAcc,\nD:VerifyReference,\nD:CommitTableCellEdit";
                                          xrtTblCharWidthSeries = "(all 0 1) (all 5 20) (all 6 20)(all 7 10)(all 8 40)(all 9 12)(all 10 10)";
                                          xrtTblNumColumns = 11;
                                          xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation,Modified By,Date";
                                          userDefinedAttributes = "modifiedBy:Int=\"9\"\nmodifiedDate:Int=\"10\"\n";
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = NSequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PMEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGR = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    DOTS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    NIAGeneIndex = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearMarker";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Delete;
                                    topAttachment = attach_widget;
                                    topWidget = Delete;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Ensembl = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  CVMarker = CVMarker : mgiCV;
                                      {
                                        MarkerEventMenu = MarkerEventMenu : mgiOption;
                                      }
                                      {
                                        MarkerEventReasonMenu = MarkerEventReasonMenu : mgiOption;
                                      }
                                      {
                                        ReviewMenu : YesNoMenu = YesNoMenu : mgiOption;
                                        Group: Widget
                                          subMenuId = ReviewPulldown;
                                            Popups:
                                            {
                                              ReviewPulldown : YesNoPulldown = OptionPulldown;
                                              Group: User
                                                tableForm = OtherReference;
                                                tableOptionKey = 4;
                                                tableOption = 8;
                                                  {
                                                    SearchAll = SearchAll : mgiOption;
                                                    Group: Widget
                                                      managed = False;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 20;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Marker;
                                              Group: User
                                                keys = "Marker.py";
                                            }
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      WithdrawalDialog = WithdrawalDialog : mgiDialog;
                    }
              }
        }
}


Module: MGD
{
      autoCuil = False;
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Thu Sep  2 08:21:57 1999";
        {
          Reference = Module : MGI;
          Group: Widget
            title = "Master Bibliography";
          Group: Control
            vip_x = 180;
            vip_y = 30;
          Group: User
            homeWidget = Authors;
            clearForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
            editForms = "ControlForm\nEditForm\nDataSetsForm\nBookForm";
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 15, clearLists = 5)\nD:InitAcc";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                          }
                          {
                            NLM = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "C: TuManage(find = NLMDialog)";
                          }
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  RefTypeMenu = RefTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  NLMStatusMenu = NLMStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = RefTypeMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RefTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ReviewStatusMenu = ReviewStatusMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = NLMStatusMenu;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = RefTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Authors = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RefTypeMenu;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = RefTypeMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Authors;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  PrimaryAuthor = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Primary Author";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                          columns = 60;
                                          inTabGroup = False;
                                          traversalOn = False;
                                          editable = False;
                                      }
                                }
                                {
                                  Title = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Authors;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Authors;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Title;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 510;
                                          columns = 95;
                                      }
                                }
                                {
                                  mgiJournal = mgiJournal : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Title;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Title;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  mgiDate = mgiDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiJournal;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiJournal;
                                    topOffset = 2;
                                      {
                                        Date = Date;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 15;
                                            }
                                      }
                                }
                                {
                                  Volume = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiDate;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Volume;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 20;
                                          columns = 10;
                                      }
                                }
                                {
                                  Issue = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Volume;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Volume;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Issue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 25;
                                          columns = 10;
                                      }
                                }
                                {
                                  Page = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Issue;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Issue;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Page;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  DBS = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = DBS;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 60;
                                      }
                                }
                                {
                                  Notes = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = DataSets;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 2;
                                      }
                                }
                                {
                                  Abstract = Text : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Notes;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abstract;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 5;
                                      }
                                }
                                {
                                  DataSets = DataSets : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Page;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Book = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_opposite_widget;
                        rightWidget = Edit;
                        topAttachment = attach_widget;
                        topWidget = Edit;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            BookForm = EditForm : MGI;
                                {
                                  ID = ID;
                                }
                                {
                                  Editors = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Editors;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 95;
                                          maxLength = 160;
                                      }
                                }
                                {
                                  Title = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Editors;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Editors;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Title;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 200;
                                          columns = 95;
                                      }
                                }
                                {
                                  Place = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Title;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Title;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Place;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 20;
                                          maxLength = 50;
                                      }
                                }
                                {
                                  Publisher = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Place;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Place;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Publisher;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 25;
                                      }
                                }
                                {
                                  Series = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Publisher;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Publisher;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Edition;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 25;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearForms = 15, clearLists = 5)\nD:InitAcc";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    J = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  NextJnum = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Last J#";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          traversalOn = False;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Bibliography (format 1)\nBibliography (Moyha)\nBibliography (Moyha) w/ Abstracts\nReferences Needing NLM Update (<= 1993)\nDuplicate References excluding Mouse News Letter & Guidis\nAll Duplicate References\nDuplicate References for Mouse News Letter";
                                              Group: User
                                                keys = "Bibliographic.py 1\nBibliographic.py 2\nBibliographic.py 3\nBIB_NeedNLM.sql\nDupref.py\nDuprefAll.py\nDuprefMouseNews.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      NLMDialog = NLMDialog : mgiDialog;
                    }
              }
        }
        {
          Species = Module : MGI;
          Group: Control
            vip_x = 180;
            vip_y = 140;
          Group: User
            homeWidget = Latin;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Latin = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Species\n(latin)";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                          maxLength = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Common = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Latin;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Latin;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Common\nName";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 50;
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Chromosome = OrderedTableLabel : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Common;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          userDefinedAttributes = "chr:Int=\"3\"\n";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 8)";
                                          xrtTblColumnLabels = "Mode,Current Order,#,Chrom";
                                          xrtTblNumColumns = 4;
                                          xrtTblVisibleRows = 10;
                                          xrtTblNumRows = 11;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Chromosome Order\n(All Species)";
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = AddRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = AddRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Anchor = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Common;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 10)(all 4 8)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Marker,Chrom";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"4\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Anchors for Web Mini-Map\n(Mouse only)";
                                            }
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Species;
                                              Group: User
                                                keys = "MRK_Species.sql";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          RISet = Module : MGI;
          Group: Widget
            title = "RI Sets";
          Group: Control
            vip_x = 60;
            vip_y = 85;
          Group: User
            homeWidget = Designation;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Designation = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Designation;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 15;
                                          columns = 15;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Origin = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Designation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Designation;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Origin;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 35;
                                          maxLength = 35;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Origin;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Origin;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev1;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Abbrev2;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 4;
                                          columns = 4;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Labels = CharSText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Labels;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                          }
                    }
              }
        }
        {
          Cross = Module : MGI;
          Group: Control
            vip_x = 180;
            vip_y = 250;
          Group: User
            homeWidget = Name;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Cross;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 30;
                                      }
                                }
                                {
                                  CrossTypeMenu = CrossTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                    rightOffset = 2;
                                }
                                {
                                  Allele = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Offspring type indicate alleles from segregating parent";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  F1 = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "F1 direction known";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Allele;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  FStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Allele;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Allele;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              Strain : label = XmLabel;
                                              Group: Widget
                                                labelString = "Female Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  MStrain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              Strain : label = XmLabel;
                                              Group: Widget
                                                labelString = "Male Strain";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  Abbrev1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MStrain;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MStrain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain1 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev1;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              Strain : label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  Abbrev2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                          maxLength = 4;
                                      }
                                }
                                {
                                  Strain2 = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Abbrev2;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Abbrev2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Verify = CharText;
                                            {
                                              Strain : label = XmLabel;
                                              Group: Widget
                                                labelString = designates;
                                            }
                                      }
                                }
                                {
                                  FAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Abbrev2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Abbrev2;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Female Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  FAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele1 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = FAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Male Alleles";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 1;
                                          maxLength = 1;
                                      }
                                }
                                {
                                  MAllele2 = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "/";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 1;
                                          columns = 1;
                                      }
                                }
                                {
                                  Progeny = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MAllele1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = MAllele1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "# Progeny";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 4;
                                      }
                                }
                                {
                                  Displayed = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Displayed in Lookup List";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Progeny;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Progeny;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Crosses in Display List";
                                              Group: User
                                                keys = "MLD_Crosses.sql";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Strains = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 140;
          Group: User
            homeWidget = Name;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Merge = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "D:StrainMergeInit";
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Strain;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  StandardMenu = StandardMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  References = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 10;
                                    topWidget = StandardMenu;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = References;
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectReferences";
                                      }
                                }
                                {
                                  DataSets = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = References;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = References;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Data Sets";
                                            }
                                      }
                                      {
                                        Retrieve = TablePush;
                                        Group: Widget
                                          activateCallback = "D:SelectDataSets";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicates;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicates;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                }
                                {
                                  Duplicates = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicates,\nD:GoHome";
                                    labelString = "Find Duplicates";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Strain\nStrain List";
                                              Group: User
                                                keys = "Strain.py\nStrainList.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      StrainMergeDialog = StrainMergeDialog : mgiDialog;
                          {
                            New = Strain;
                                {
                                  Verify = CharText;
                                      {
                                        Strain : label = XmLabel;
                                      }
                                      {
                                        text = text;
                                      }
                                }
                          }
                          {
                            Old = Strain;
                                {
                                  Verify = CharText;
                                      {
                                        Strain : label = XmLabel;
                                      }
                                      {
                                        text = text;
                                      }
                                }
                          }
                          {
                            separator = XmSeparator;
                          }
                          {
                            Buttons = XmWorkArea;
                          }
                    }
              }
        }
        {
          Tissues = Module : MGI;
          Group: Control
            vip_x = 180;
            vip_y = 85;
          Group: User
            homeWidget = Name;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Merge = MenuCascade : mgiMenu;
                            Group: Widget
                              activateCallback = "D:TissueMergeInit";
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Tissue;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  StandardMenu = StandardMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                }
                                {
                                  DataSets = DataSetForm : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 10;
                                    topWidget = StandardMenu;
                                    topOffset = 5;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Duplicates;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Duplicates;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                }
                                {
                                  Duplicates = ControlPush : mgiControl;
                                  Group: Widget
                                    activateCallback = "D:SearchDuplicates,\nD:GoHome";
                                    labelString = "Find Duplicates";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Tissue;
                                              Group: User
                                                keys = "Tissue.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      TissueMergeDialog = TissueMergeDialog : mgiDialog;
                          {
                            New = Tissue;
                                {
                                  Verify = CharText;
                                      {
                                        Tissue = XmLabel;
                                      }
                                      {
                                        text = text;
                                      }
                                      {
                                        label = XmLabel;
                                      }
                                }
                          }
                          {
                            Old = Tissue;
                                {
                                  Verify = CharText;
                                      {
                                        Tissue = XmLabel;
                                      }
                                      {
                                        text = text;
                                      }
                                      {
                                        label = XmLabel;
                                      }
                                }
                          }
                          {
                            separator = XmSeparator;
                          }
                          {
                            Buttons = XmWorkArea;
                          }
                    }
              }
        }
        {
          Marker = Module : MGI;
          Group: Control
            vip_x = 180;
            vip_y = 195;
          Group: User
            homeWidget = Symbol;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        AlleleMerge = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerAlleleMergeInit";
                                          labelString = "Allele Merge";
                                      }
                                      {
                                        Transfer = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerTransferInit()";
                                          labelString = "Marker Transfer";
                                      }
                                      {
                                        BreakpointSplit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerBreakpointSplitInit()";
                                          labelString = "Breakpoint Split";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  MarkerTypeMenu = MarkerTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MarkerTypeMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MarkerTypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 20;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Current = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 3;
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 20)";
                                          xrtTblMaxLengthSeries = "(all 2 25)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Current Symbol";
                                      }
                                }
                                {
                                  Offset = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Current;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblNumRows = 3;
                                          xrtTblVisibleRows = 3;
                                          xrtTblCharWidthSeries = "(all 0-1 1)(all 2 10)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblRowLabels = "MGD,CC,MIT";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          userDefinedAttributes = "sourceKey:Int(Int)=\"1\"\noffset:Int(Int)=\"2\"\n";
                                          xrtTblColumnLabels = "Mode,Source,Offset";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          sensitive = False;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Offset;
                                    leftOffset = 10;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Notes = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 70;
                                          rows = 2;
                                      }
                                }
                                {
                                  History = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Current;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5 15)(all 6 30)(all 7-8 10)(all 9 30)(all 10 20)";
                                          xrtTblColumnLabels = "Mode,Current Order,Marker key,Ref key,#,Symbol,Name,Date,J#,Citation,Event";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblMaxLengthSeries = "(all 1-4 10)(all 5 25)(all 6 255)(all 7-8 10)(all 9-11 255)";
                                          xrtTblNumColumns = 11;
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(allowWithdrawn = true),\nD:VerifyReference,\nD:VerifyDate,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nrefsKey:Int(Int)=\"3\"\nmarkerSymbol:Int(Int)=\"5\"\nmarkerName:Int(Int)=\"6\"\neventDate:Int(Int)=\"7\"\njnum:Int(Int)=\"8\"\ncitation:Int(Int)=\"9\"\nevent:Int(Int)=\"10\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\ndate:Int=\"7\"\n";
                                        Group: User
                                          saveTraversableSeries = "(all 0-4 False)";
                                          saveEditableSeries = "(all 0-4 False)";
                                          seqNum = 4;
                                      }
                                }
                                {
                                  Alias = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = History;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyMarkerChromosome,\nD:CommitTableCellEdit";
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Current key,Marker key,Alias";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 20)";
                                          xrtTblMaxLengthSeries = "(all 3 25)";
                                          xrtTblTraversableSeries = "(all 0-2 False)";
                                          userDefinedAttributes = "markerCurrentKey:Int(Int)=\"1\"\nmarkerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"3\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                                          xrtTblVisibleRows = 2;
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                      }
                                }
                                {
                                  Allele = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Alias;
                                    leftOffset = 10;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = History;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 25)(all 3 80)";
                                          xrtTblMaxLengthSeries = "(all 2 50)(all 3 255)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          xrtTblColumnLabels = "Mode,Key,Allele Symbol,Allele Name";
                                          userDefinedAttributes = "alleleKey:Int=\"1\"\nalleleSymbol:Int=\"2\"\nalleleName:Int=\"3\"\n";
                                          xrtTblVisibleRows = 2;
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                      }
                                }
                                {
                                  Other = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Alias;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblVisibleRows = 2;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 50)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                          xrtTblMaxLengthSeries = "(all 2 255)";
                                          xrtTblColumnLabels = "Mode,Key,Other Name";
                                          userDefinedAttributes = "otherKey:Int=\"1\"\notherName:Int=\"2\"\n";
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Other;
                                    leftOffset = 10;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Other;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 2;
                                      }
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Other;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Other;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = Sequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = EC;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                  }
                                                  {
                                                    SequencePID = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Marker\nBroadcast";
                                              Group: User
                                                keys = "Marker.py\nbroadcast.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      WithdrawalDialog = WithdrawalDialog : mgiDialog;
                    }
                    {
                      AlleleMergeDialog = AlleleMergeDialog : mgiDialog;
                    }
                    {
                      MRKBreakpointSplitDialog = MRKBreakpointSplitDialog : mgiDialog;
                    }
                    {
                      MRKTransferDialog = MRKTransferDialog : mgiDialog;
                    }
              }
        }
        {
          Homology = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 195;
          Group: User
            homeWidget = Jnum;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:HomologyClear";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown;
                                      {
                                        MarkerNonMouse = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"MarkerNonMouse\")";
                                          labelString = "Marker Information";
                                          sensitive = False;
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiCitation;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiCitation;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          managed = True;
                                          labelString = "Class ID";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          managed = True;
                                          inTabGroup = True;
                                          traversalOn = True;
                                      }
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "Class ID";
                                                managed = True;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                      {
                                        Jnum = Jnum;
                                      }
                                      {
                                        Citation = Citation;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 50;
                                            }
                                      }
                                }
                                {
                                  Marker = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 11;
                                          xrtTblColumnLabels = "Mode,Marker Key,Acc Key,Species Key,#,Species,Symbol,Chr,Cyto,Name,Acc ID";
                                          xrtTblMaxLengthSeries = "(all 1-3 10)(all 4 3)(all 5 50)(all 6 25)(all 7 8)(all 8 20)(all 9 255)(all 10 25)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 3)(all 5 25)(all 6 10)(all 7 3)(all 8 10)(all 9 30)(all 10 11)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblNumRows = 11;
                                          userDefinedAttributes = "markerKey:Int(Int)=\"1\"\nmarkerSymbol:Int(Int)=\"6\"\nmarkerChr:Int(Int)=\"7\"\nmarkerName:Int(Int)=\"9\"\nmarkerColumns:Int(Int)=\"1\"\naccKey:Int(Int)=\"2\"\naccID:Int(Int)=\"10\"\nspeciesKey:Int(Int)=\"3\"\nspecies:Int(Int)=\"5\"\nmarkerCyto:Int(Int)=\"8\"\nseqNum:Int(Int)=\"4\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyMarker(verifyOtherSpecies = true),\nD:VerifyChromosome,\nD:CommitTableCellEdit";
                                          xrtTblVisibleRows = 10;
                                        Group: User
                                          addSeqNum = True;
                                      }
                                }
                                {
                                  Assay = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = Marker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    rightWidget = Marker;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 35;
                                          xrtTblColumnLabels = "Mode,Homology Key,Assay Key,Assay,Note,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30";
                                          xrtTblMaxLengthSeries = "(all 1-2 10)(all 3 60)(all 5-34 2)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 40)(all 4 20)(all 5-34 2)";
                                          xrtTblNumRows = 11;
                                          xrtTblEditableSeries = "(all 0-2 False)(all 5-34 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblTraversableSeries = "(all 0-2 False)(all 5-34 False)";
                                          xrtTblSelectionPolicy = select_single;
                                          xrtTblSelectedBackground = None;
                                          xrtTblSelectedForeground = None;
                                          xrtTblSelectCallback = "D:SetCellToX,\nD:VerifyMarkerExists";
                                          userDefinedAttributes = "homologyKey:Int(Int)=\"1\"\nassayKey:Int(Int)=\"2\"\nassay:Int(Int)=\"3\"\nbeginX:Int(Int)=\"5\"\nendX:Int(Int)=\"34\"\nnotes:Int(Int)=\"4\"\n";
                                          xrtTblDisplayHorizScrollBar = dispsb_always;
                                          xrtTblVisibleRows = 10;
                                        Group: User
                                          required = True;
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:InsertTableRow";
                                          labelString = "Insert Row";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Assay;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Inferred = toggle : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Display Inferred Homologies";
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = separator;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:HomologyClear";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: User
                                    targetWidget = Assay;
                                    targetColumn = 4;
                                }
                                {
                                  SpeciesList = SpeciesList : mgiLookup;
                                  Group: User
                                    cmd = "select _Species_key, name + ' (' + species + ')' from MRK_Species where _Species_key not in (1,2,40) order by name\n";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectSpecies";
                                        Group: User
                                          targetText = 5;
                                          targetKey = 3;
                                          targetWidget = Marker;
                                      }
                                }
                                {
                                  HomologyAssayList = HomologyAssayList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = Assay;
                                          targetText = 3;
                                          targetKey = 2;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = Homology;
                                              Group: User
                                                keys = "Homology.py";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MolecularSegment = Module1 : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 305;
          Group: User
            homeWidget = Name;
            editForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
            clearForms = "ControlForm\nMolMasterForm\nMolDetailForm\nMolMarkerForm\nMolPrimerForm\nSourceForm\nMolReferenceForm";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                      }
                                      {
                                        Clear1 = MenuPush;
                                        Group: Widget
                                          sensitive = True;
                                          labelString = "Clear Molecular Segment";
                                          activateCallback = "D:Clear(clearForms = 63, clearLists = 7)";
                                      }
                                      {
                                        Clear2 = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 65, clearLists = 4)";
                                          labelString = "Clear References";
                                          sensitive = True;
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown;
                                      {
                                        MolecularSource = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"MolecularSource\")";
                                          labelString = "Molecular Probe Libraries";
                                      }
                                }
                          }
                          {
                            View = View;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        References = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                          valueChangedCallback = "D:ViewMolSegForm";
                                        Group: User
                                          form1 = MolMasterForm;
                                          form2 = MolReferenceForm;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 600;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                          {
                            ID = ID;
                          }
                          {
                            MolMasterForm = MolMasterForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                                {
                                  MolDetailForm = MolDetailForm;
                                }
                                {
                                  separator1 = XmSeparator;
                                }
                                {
                                  MolMarkerForm = MolMarkerForm;
                                }
                                {
                                  SeqTypeMenu = SeqTypeMenu;
                                }
                                {
                                  Name = CharText;
                                }
                                {
                                  MJnum = mgiCitation;
                                }
                                {
                                  Region = CharText;
                                }
                                {
                                  separator = XmSeparator;
                                }
                                {
                                  MolPrimerForm = MolPrimerForm;
                                }
                          }
                          {
                            MolReferenceForm = MolReferenceForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  References = ViewToggle : mgiControl;
                                  Group: Widget
                                    valueChangedCallback = "D:ViewMolSegForm";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifiedDate;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                  Group: User
                                    form1 = MolMasterForm;
                                    form2 = MolReferenceForm;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    All = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 127, clearLists = 7)";
                                                  }
                                                  {
                                                    MolecularSegments = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 63, clearLists = 7)";
                                                      labelString = "Molecular Segments";
                                                  }
                                                  {
                                                    References = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 65, clearLists = 4)";
                                                      labelString = References;
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = dbEST;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    SequencePID = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 8;
                                      }
                                }
                                {
                                  ReferenceList = LookupList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "0 References";
                                        Group: User
                                          defaultLabel = References;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectReference";
                                      }
                                }
                                {
                                  LibraryList = LibraryList : mgiLookup;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Probe\nDuplicate/Missing Markers";
                                              Group: User
                                                keys = "Probe.py\nPRB_Marker.sql";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MolMasterForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 60;
            vip_y = 415;
              {
                ID = ID;
              }
              {
                SeqTypeMenu = SeqTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Name = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SeqTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Name;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 30;
                      Group: User
                        required = True;
                    }
              }
              {
                MJnum = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Name;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Name;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-2";
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                      Group: Widget
                        managed = False;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                Region = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Name;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Region\nCovered";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Region;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolPrimerForm = MolPrimerForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                MolDetailForm = MolDetailForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      SourceForm = SourceForm;
                    }
              }
              {
                separator1 = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = MolDetailForm;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                MolMarkerForm = MolMarkerForm : MGD;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator1;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topOffset = 5;
              }
        }
        {
          MolMarkerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 180;
            vip_y = 415;
              {
                Notes = Notes : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Marker;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                KFMemorial = push : mgiDataTypes;
                Group: Widget
                  activateCallback = "D:KFMemorialMolSeg";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Marker = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 150;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 6;
                        xrtTblColumnLabels = "Mode,Current Key,New Key,Chr,Marker,R";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 4)(all 4 20)(all 5 1)";
                        xrtTblMaxLengthSeries = "(all 3 8)(all 4 25)(all 5 1)";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerCurrentKey:Int=\"1\"\nmarkerKey:Int=\"2\"\nmarkerChr:Int=\"3\"\nmarkerSymbol:Int=\"4\"\nmarkerColumns:Int=\"1\"\nrelationship:Int=\"5\"\n";
                    }
              }
        }
        {
          MolDetailForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 180;
            vip_y = 470;
              {
                ParentClone = mgiAccession : mgiDataTypes;
                Group: Widget
                  orientation = horizontal;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 135;
                    {
                      ObjectID = ID;
                    }
                    {
                      AccessionID = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent Clone\nAccession ID";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() DisplayParentSource()";
                          }
                    }
                    {
                      AccessionName = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Parent\nClone";
                          }
                    }
              }
              {
                VectorTypeMenu = VectorTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
              }
              {
                InsertSite = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = VectorTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ParentClone;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSite";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                InsertSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = InsertSite;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = InsertSite;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Insert\nSize";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 15;
                        maxLength = 30;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = InsertSite;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SourceForm = SourceForm : MGI;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  topOffset = 2;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      SourceID = ID : mgiDataTypes;
                    }
                    {
                      Library = CharText;
                      Group: Widget
                        managed = True;
                    }
                    {
                      mgiCitation = mgiCitation : mgiDataTypes;
                    }
                    {
                      SpeciesMenu = SpeciesMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        leftOffset = 5;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = Library;
                        topOffset = 2;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Strain = Strain;
                    }
                    {
                      Tissue = Tissue;
                          {
                            Verify = CharText;
                                {
                                  Tissue = XmLabel;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 25;
                                }
                          }
                    }
                    {
                      CellLine = CharText;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Tissue;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = Tissue;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftOffset = 5;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 25;
                          }
                    }
                    {
                      AgeMenu = AgeMenu;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = Tissue;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = Tissue;
                        topOffset = 2;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Age = CharText;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = AgeMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = AgeMenu;
                        topOffset = "-5";
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      AgeMin = ID;
                    }
                    {
                      AgeMax = ID;
                    }
                    {
                      SexMenu = SexMenu;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Age;
                        leftOffset = 2;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = Age;
                        bottomAttachment = attach_none;
                        resizable = true;
                        topOffset = 5;
                    }
                    {
                      Description = CharText;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = Age;
                        bottomAttachment = attach_form;
                        bottomOffset = 5;
                        resizable = true;
                    }
              }
        }
        {
          MolReferenceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
            managed = False;
          Group: Control
            vip_x = 60;
            vip_y = 470;
          Group: User
            homeWidget = Jnum;
            queryList = ReferenceList;
              {
                ReferenceID : ID = ID;
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                SequenceAcc = mgiAccessionTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 3;
                    }
                    {
                      Add = TablePush;
                    }
                    {
                      Delete = TablePush;
                    }
                    {
                      AccSourceMenu = AccSourceMenu;
                      Group: User
                        defaultOption = Sequence;
                          Popups:
                          {
                            AccSourcePulldown = OptionPulldown;
                                {
                                  MGI = AccToggle;
                                }
                                {
                                  J = AccToggle;
                                }
                                {
                                  Medline = AccToggle;
                                }
                                {
                                  EC = AccToggle;
                                }
                                {
                                  SWISSPROT = AccToggle;
                                }
                                {
                                  dbEST = AccToggle;
                                }
                                {
                                  WashU = AccToggle;
                                }
                                {
                                  IMAGE = AccToggle;
                                }
                                {
                                  Sequence = AccToggle;
                                  Group: Widget
                                    set = True;
                                    managed = True;
                                }
                          }
                    }
              }
              {
                Holder = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SequenceAcc;
                  leftOffset = 25;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = mgiCitation;
                  topOffset = 20;
                  rightOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Holder;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 40;
                        maxLength = 40;
                    }
              }
              {
                Notes = SingleNote : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = SequenceAcc;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = SequenceAcc;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        editMode = multi_line_edit;
                        rows = 2;
                        columns = 90;
                    }
              }
              {
                HasSequence = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Has Sequence Presented";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Holder;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Holder;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                RMAP = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "RMAP Info";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = HasSequence;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = HasSequence;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                RFLV = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 10;
                        xrtTblColumnLabels = "Mode,RFLV key,Allele key,Marker key,Strain keys,Endo,Marker,Allele,Fragments,Strains";
                        xrtTblMaxLengthSeries = "(all 5 15)(all 6 25)(all 7 30)(all 8 255)(all 9 5000)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 5-7 10)(all 8 20)(all 9 100)";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblValidateCellCallback = "D:CopyEndoMarker,\nD:VerifyMarker,\nD:VerifyStrains,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "rflvKey:Int=\"1\"\nalleleKey:Int=\"2\"\nmarkerKey:Int=\"3\"\nstrainKeys:Int=\"4\"\nendo:Int=\"5\"\nmarkerSymbol:Int=\"6\"\nallele:Int=\"7\"\nfragments:Int=\"8\"\nstrains:Int=\"9\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                        xrtTblNumRows = 11;
                        xrtTblVisibleRows = 10;
                        xrtTblPixelWidthSeries = "(all 0-4 0)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                      Group: Widget
                        activateCallback = "D:InsertTableRow";
                        labelString = "Insert Row";
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = DeleteRow;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = DeleteRow;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
              }
              {
                Alias = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RFLV;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = RFLV;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 3;
                        xrtTblMaxLengthSeries = "(all 2 30)";
                        xrtTblColumnLabels = "Mode,Alias key,Alias";
                        xrtTblCharWidthSeries = "(all 0 1)(all 2 30)";
                        xrtTblEditableSeries = "(all 0-1 False)";
                        xrtTblPixelWidthSeries = "(all 0-1 0)";
                        xrtTblTraversableSeries = "(all 0-1 False)";
                        userDefinedAttributes = "aliasKey:Int=\"1\"\nalias:Int=\"2\"\n";
                        xrtTblVisibleRows = 3;
                    }
              }
        }
        {
          MolPrimerForm = SubEditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            width = 600;
          Group: Control
            vip_x = 60;
            vip_y = 525;
              {
                Sequence1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 1";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 40;
                        maxLength = 80;
                    }
              }
              {
                Sequence2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence1;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Sequence 2";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 80;
                        columns = 40;
                    }
              }
              {
                Repeat = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Sequence2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Sequence2;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Repeat Unit";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 120;
                        columns = 75;
                    }
              }
              {
                More = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "More Than 1 Product?";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Repeat;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Repeat;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                ProductSize = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = More;
                  leftOffset = 10;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = More;
                  topOffset = "-5";
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Product Size";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 40;
                        columns = 20;
                    }
              }
        }
        {
          MolecularSource = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 360;
          Group: User
            editForms = "ControlForm\nEditForm\nSourceForm";
            clearForms = "ControlForm\nEditForm\nSourceForm";
            homeWidget = Library;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  SourceForm = SourceForm : MGI;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        SourceID = ID : mgiDataTypes;
                                      }
                                      {
                                        Library = CharText;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        mgiCitation = mgiCitation;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        SpeciesMenu = SpeciesMenu;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          leftOffset = 5;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = mgiCitation;
                                          topOffset = 5;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
              }
        }
        {
          ExptTextForm = ExptForm : MGD;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 180;
            vip_y = 525;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        rows = 40;
                    }
              }
        }
        {
          ExptForm = EditForm : MGI;
          Group: Widget
            width = 600;
            height = 700;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 60;
            vip_y = 580;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 1;
                    }
              }
        }
        {
          ExptHybridForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 60;
            vip_y = 635;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Concordance = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 50;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 2 10)(all 3 3)(all 4 20)(all 5-8 5)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker/Chromosome,Cpp,Cpn,Cnp,Cnn";
                        xrtTblNumColumns = 9;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5-8 10)";
                        xrtTblValidateCellCallback = "D:SetHybrid,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"4\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\ncpp:Int=\"5\"\ncpn:Int=\"6\"\ncnp:Int=\"7\"\ncnn:Int=\"8\"\nmarkerSymbolSave:Int=\"4\"\n";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                ChrOrMarker = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
              }
        }
        {
          ExptInSituForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 180;
            vip_y = 580;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Total = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Grains Scored";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Grains = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Total;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Total;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Grains Correct Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Other = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Grains;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Grains;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Most # Grains Other Chrom";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Widget
                  x = "-1";
                  y = "-1";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Count";
                        xrtTblNumColumns = 5;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        xrtTblMaxLengthSeries = "(all all 10)";
                        userDefinedAttributes = "region:Int(Int)=\"3\"\ngrains:Int(Int)=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush : mgiTable;
                    }
                    {
                      EditOrder = toggle : mgiDataTypes;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
        }
        {
          ExptFISHForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 180;
            vip_y = 635;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Notes;
                  topWidget = Notes;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Band;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 35;
                          }
                    }
              }
              {
                CellOrigin = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Band;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell\nType";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                KaryoType = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellOrigin;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellOrigin;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = KaryoType;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 30;
                    }
              }
              {
                Robert = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = KaryoType;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = KaryoType;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Robertsonian/\nTranslocation";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                    }
              }
              {
                Label = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Robert;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Robert;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Label;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 30;
                        maxLength = 50;
                    }
              }
              {
                Meta = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Label;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Label;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "# Metaphases Analyzed";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Single = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Meta;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Meta;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Single Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Double = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Single;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Single;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Total # Double Signals";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 5;
                        maxLength = 5;
                    }
              }
              {
                Region = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Robert;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3-4 10)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Region,Single Sig,Double Sig";
                        xrtTblMaxLengthSeries = "(all all 10)";
                        xrtTblNumColumns = 6;
                        xrtTblNumRows = 13;
                        xrtTblVisibleRows = 12;
                        userDefinedAttributes = "region:Int=\"3\"\nsingleSignal:Int=\"4\"\ndoubleSignal:Int=\"5\"\n";
                    }
              }
        }
        {
          ExptRIForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 60;
            vip_y = 690;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                mgiRISet = mgiRISet : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
                    {
                      RIID = ID;
                    }
                    {
                      Origin = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Origin;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 25;
                              maxLength = 35;
                          }
                    }
                    {
                      Abbrev1 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev1;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
                    {
                      Abbrev2 = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = Abbrev2;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 2;
                              maxLength = 4;
                          }
                    }
              }
              {
                Animal = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiRISet;
                  leftOffset = 120;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiRISet;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Animal;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 60;
                    }
              }
              {
                RIHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Animal;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 3 3)(all 4 20)(all 5 60)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Marker,Haplotypes";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblMaxLengthSeries = "(all 4 25)(all 5 255)";
                        xrtTblValidateCellCallback = "D:VerifyExptRIAllele,\nD:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nmarkerSymbol:Int(Int)=\"4\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\nhaplotype:Int(Int)=\"5\"\n";
                        xrtTblNumColumns = 6;
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                      Group: User
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                        seqNum = 3;
                    }
              }
              {
                RITwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RIHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RIHaplotype;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 20)(all 7-8 10)(all 9 20)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2,Discordant,Strains,RI Sets";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 10;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 4;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\ndiscordant:Int=\"7\"\nstrains:Int=\"8\"\nsets:Int=\"9\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = RITwoPt;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = RITwoPt;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
              }
        }
        {
          ExptCrossForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 180;
            vip_y = 690;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                mgiCross = mgiCross : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossTypeMenu = CrossTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = mgiCross;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = mgiCross;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 10;
              }
              {
                Female = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = mgiCross;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Female;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                FStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Female;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                            Group: Widget
                              labelString = "Female Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Male = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Female;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = FStrain;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Male;
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 510;
                        columns = 80;
                    }
              }
              {
                MStrain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Male;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                            Group: Widget
                              labelString = "Male Strain";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 75;
                          }
                    }
              }
              {
                Abbrev1 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MStrain;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = "-10";
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain1 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Abbrev2 = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Abbrev1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 2;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = " ";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 4;
                        maxLength = 4;
                    }
              }
              {
                Strain2 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Abbrev2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Abbrev2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      StrainID : VerifyID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            Strain : label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 40;
                          }
                    }
              }
              {
                Allele = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Offspring type indicate \nalleles from segregating parent";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain1;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                F1 = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "F1 direction known";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Strain2;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = Strain2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Displayed = toggle : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = F1;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = F1;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                CrossHaplotype = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Abbrev2;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 5)(all 4 20)";
                        xrtTblColumnLabels = "Mode,Current Order,#,Mice,Haplotype";
                        xrtTblNumColumns = 5;
                        xrtTblValidateCellCallback = "D:VerifyExptHaplotypes,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        xrtTblMaxLengthSeries = "(all 4 255)";
                        userDefinedAttributes = "mice:Int=\"3\"\nhaplotype:Int=\"4\"\n";
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit\nOrder";
                    }
              }
              {
                CrossTwoPt = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = CrossHaplotype;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_opposite_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 10)(all 7-87 8)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker 1 key,Marker 2 key,#,Marker 1,Marker 2, Recomb,Parental";
                        xrtTblEditableSeries = "(all 0-4 False)";
                        xrtTblTraversableSeries = "(all 0-4 False)";
                        xrtTblNumColumns = 9;
                        xrtTblPixelWidthSeries = "(all 0-3 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 3;
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nrecomb:Int=\"7\"\nparental:Int=\"8\"\n";
                      Group: User
                        saveTraversableSeries = "(all 0-4 False)";
                        saveEditableSeries = "(all 0-4 False)";
                        seqNum = 4;
                    }
                    {
                      AddRow = TablePush;
                    }
                    {
                      DeleteRow = TablePush;
                    }
                    {
                      InsertRow = TablePush;
                    }
                    {
                      EditOrder = toggle;
                      Group: Widget
                        labelString = "Edit \nOrder";
                    }
              }
              {
                Statistics = Statistics : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CrossHaplotype;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = CrossHaplotype;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topOffset = 2;
              }
        }
        {
          ExptPhysicalForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 700;
          Group: Control
            vip_x = 60;
            vip_y = 745;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
              }
              {
                GeneOrder = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Notes;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Notes;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Gene Order";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                Definitive = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Definitive Order?";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = GeneOrder;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = GeneOrder;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Distance = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Definitive;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 14;
                        xrtTblColumnLabels = "Mode,Marker 1 key,Marker 2 key,Unit key,Real key,#,Marker 1,Marker 2,Distance,Unit,Endo,Frag,Real?,Arrangement";
                        xrtTblCharWidthSeries = "(all 0 1)(all 5 3)(all 6-7 12)(all 8 8)(all 9 4)(all 10 10)(all 11-12 5)(all 13 15)";
                        xrtTblMaxLengthSeries = "(all 6-7 25)(all 8 20)(all 10 20)(all 11 20)(all 13 15)";
                        xrtTblTraversableSeries = "(all 0-5 False)";
                        xrtTblPixelWidthSeries = "(all 0-4 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        userDefinedAttributes = "markerKey:Int=\"1\"\nmarkerSymbol:Int=\"6\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nunitKey:Int=\"3\"\nrealKey:Int=\"4\"\nseqNum:Int=\"5\"\ndistance:Int=\"8\"\nunit:Int=\"9\"\nendo:Int=\"10\"\nfragment:Int=\"11\"\nrealDistance:Int=\"12\"\narrangement:Int=\"13\"\n";
                        xrtTblNumRows = 15;
                        xrtTblVisibleRows = 12;
                        xrtTblEditableSeries = "(all 0-5 False)";
                      Group: User
                        addSeqNum = True;
                    }
              }
              {
                PhysUnitsMenu = PhysUnitsMenu;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Distance;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Distance;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    Popups:
                    {
                      PhysUnitsPulldown = OptionPulldown;
                      Group: User
                        tableOption = 9;
                        tableOptionKey = 3;
                        tableForm = Distance;
                    }
              }
              {
                YesNoMenu = YesNoMenu;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = PhysUnitsMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = PhysUnitsMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    Popups:
                    {
                      YesNoPulldown = OptionPulldown;
                      Group: User
                        tableForm = Distance;
                        tableOption = 12;
                        tableOptionKey = 4;
                    }
              }
              {
                ArrangeMenu = ArrangeMenu;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = YesNoMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = YesNoMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      ArrangePulldown = OptionPulldown;
                      Group: User
                        tableForm = Distance;
                        tableOptionKey = "-1";
                        tableOption = 13;
                    }
              }
        }
        {
          ExptMasterForm = ExptForm;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 750;
          Group: Control
            vip_x = 60;
            vip_y = 800;
          Group: User
            homeWidget = Jnum;
              {
                ID = ID;
              }
              {
                Notes = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Marker;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 90;
                        rows = 5;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 65;
                          }
                    }
              }
              {
                Marker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 200;
                  topOffset = 5;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,#,Primary Markers";
                        xrtTblNumRows = 17;
                        xrtTblPixelWidthSeries = "(all 0-2 0)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 16;
                        xrtTblMaxLengthSeries = "(all 4 25)";
                        userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"4\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"1\"\n";
                        xrtTblEditableSeries = "(all 0-3 False)";
                        xrtTblTraversableSeries = "(all 0-3 False)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 3 3)(all 4 25)";
                        xrtTblNumColumns = 5;
                      Group: User
                        seqNum = 3;
                        saveTraversableSeries = "(all 0-3 False)";
                        saveEditableSeries = "(all 0-3 False)";
                    }
              }
        }
        {
          ExptDetailForm = EditForm : MGI;
          Group: Widget
            width = 600;
            rubberPositioning = False;
            resizePolicy = resize_any;
            height = 750;
          Group: Control
            vip_x = 180;
            vip_y = 745;
          Group: User
            homeWidget = Chromosome;
            queryList = ExperimentList;
            conditionalList = ExperimentList;
              {
                ID = ID;
              }
              {
                Jnum = Jnum : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                    }
                    {
                      text = text;
                      Group: User
                        required = False;
                    }
              }
              {
                ExptTypeMenu = ExptTypeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Jnum;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Jnum;
                  topOffset = 5;
              }
              {
                ChromosomeMenu = ChromosomeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ExptTypeMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = ExptTypeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                    Popups:
                    {
                      ChromosomePulldown = OptionPulldown;
                      Group: User
                        sql = "select chromosome, label = chromosome, sequenceNum \nfrom MRK_Chromosome where _Species_key = 1\norder by sequenceNum";
                    }
              }
              {
                ExptMarker = OrderedTable : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  rightOffset = 2;
                  topAttachment = attach_widget;
                  topWidget = Jnum;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 12;
                        xrtTblCharWidthSeries = "(all 0 1)(all 6 3)(all 7-8 10)(all 9-10 25)(all 11 7)";
                        xrtTblColumnLabels = "Mode,Current Order,Marker key,Chr,Allele key,Assay key,#,Marker,Allele,Assay Type,Description,Matrix?";
                        xrtTblEditableSeries = "(all 0-6 False)";
                        xrtTblPixelWidthSeries = "(all 0-5 0)";
                        xrtTblTraversableSeries = "(all 0-6 False)";
                        xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyExptChromosome,\nD:VerifyAllele,\nD:VerifyExptAssay,\nD:VerifyYesNo,\nD:CommitTableCellEdit";
                        xrtTblVisibleRows = 2;
                        xrtTblMaxLengthSeries = "(all 7 25)(all 8 20)(all 9 80)(all 10 255)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"2\"\nalleleKey:StringTable=\"4\"\nassayKey:Int(Int)=\"5\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"3\"\nmarkerColumns:Int(Int)=\"1\"\nalleleSymbol:StringTable=\"8\"\nassay:Int(Int)=\"9\"\ndescription:Int(Int)=\"10\"\nyesno:Int(Int)=\"11\"\n";
                      Group: User
                        seqNum = 6;
                        saveTraversableSeries = "(all 0-6 False)";
                        saveEditableSeries = "(all 0-6 False)";
                    }
              }
              {
                ExptTextForm = ExptTextForm : MGD;
                Group: Widget
                  managed = True;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptInSituForm = ExptInSituForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Total = CharText;
                    }
                    {
                      Grains = CharText;
                    }
                    {
                      Other = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptFISHForm = ExptFISHForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      Strain = Strain : mgiDataTypes;
                    }
                    {
                      CellOrigin = CharText;
                    }
                    {
                      KaryoType = CharText;
                    }
                    {
                      Robert = CharText;
                    }
                    {
                      Label = CharText;
                    }
                    {
                      Meta = CharText;
                    }
                    {
                      Single = CharText;
                    }
                    {
                      Double = CharText;
                    }
                    {
                      Region = OrderedTable;
                    }
              }
              {
                ExptCrossForm = ExptCrossForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      FStrain = Strain : mgiDataTypes;
                    }
                    {
                      Male = CharText;
                    }
                    {
                      MStrain = Strain : mgiDataTypes;
                    }
                    {
                      Abbrev1 = CharText;
                    }
                    {
                      Strain1 = Strain;
                          {
                            Verify = CharText;
                                {
                                  Strain : label = XmLabel;
                                }
                                {
                                  text = text;
                                }
                          }
                    }
                    {
                      Abbrev2 = CharText;
                    }
                    {
                      Strain2 = Strain;
                          {
                            Verify = CharText;
                                {
                                  Strain : label = XmLabel;
                                }
                                {
                                  text = text;
                                }
                          }
                    }
                    {
                      Allele = toggle;
                    }
                    {
                      F1 = toggle;
                    }
                    {
                      Displayed = toggle;
                    }
                    {
                      CrossHaplotype = OrderedTable;
                    }
                    {
                      CrossTwoPt = OrderedTable;
                    }
                    {
                      Statistics = Statistics;
                    }
              }
              {
                ExptHybridForm = ExptHybridForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptRIForm = ExptRIForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                ExptPhysicalForm = ExptPhysicalForm : MGD;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ExptMarker;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
        }
        {
          MLDP = Module1 : MGI;
          Group: Control
            vip_x = 180;
            vip_y = 305;
          Group: User
            homeWidget = Jnum;
            editForms = "ControlForm\nExptMasterForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm\nExptPhysicalForm";
            clearForms = "ControlForm\nExptMasterForm\nExptDetailForm\nExptCrossForm\nExptHybridForm\nExptInSituForm\nExptFISHForm\nExptRIForm\nExptTextForm\nExptPhysicalForm";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearForms = 1023, clearLists = 15)";
                                      }
                                      {
                                        Clear1 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear References (1)";
                                          activateCallback = "D:Clear(clearForms = 7, clearLists = 15)";
                                      }
                                      {
                                        Clear2 = MenuPush;
                                        Group: Widget
                                          labelString = "Clear Experiments (2)";
                                          activateCallback = "D:Clear(clearForms = 1021, clearLists = 4)";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        Experiments = ViewToggle : mgiControl;
                                        Group: Widget
                                          background = Thistle;
                                        Group: User
                                          form1 = ExptMasterForm;
                                          form2 = ExptDetailForm;
                                      }
                                }
                          }
                    }
                    {
                      EditForm = EditForm;
                      Group: Widget
                        width = 600;
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        height = 750;
                          {
                            ID = ID;
                          }
                          {
                            ExptMasterForm = ExptMasterForm : MGD;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              topAttachment = attach_form;
                              bottomAttachment = attach_form;
                              resizable = true;
                          }
                          {
                            ExptDetailForm = ExptDetailForm : MGD;
                            Group: Widget
                              managed = False;
                            Group: Constraint
                              leftAttachment = attach_none;
                              rightAttachment = attach_none;
                              topAttachment = attach_none;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  ID = ID;
                                }
                                {
                                  Jnum = Jnum;
                                }
                                {
                                  ExptTypeMenu = ExptTypeMenu;
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                }
                                {
                                  ExptMarker = OrderedTable : mgiTable;
                                }
                                {
                                  ExptTextForm = ExptTextForm;
                                  Group: Widget
                                    managed = True;
                                }
                                {
                                  ExptInSituForm = ExptInSituForm;
                                }
                                {
                                  ExptFISHForm = ExptFISHForm;
                                }
                                {
                                  ExptCrossForm = ExptCrossForm;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Search;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Experiments = ViewToggle : mgiControl;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifiedDate;
                                    topOffset = 2;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                  Group: User
                                    form1 = ExptMasterForm;
                                    form2 = ExptDetailForm;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    All = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 1023, clearLists = 15)";
                                                  }
                                                  {
                                                    References = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 7, clearLists = 15)";
                                                  }
                                                  {
                                                    Experiments = ControlPush : mgiControl;
                                                    Group: Widget
                                                      activateCallback = "D:Clear(clearForms = 1021, clearLists = 4)";
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate;
                                }
                                {
                                  ModifiedDate = ModifiedDate;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = CREX;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                  }
                                                  {
                                                    SequencePID = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle;
                                                  }
                                                  {
                                                    CREX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    HYEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    INEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    FSEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RIEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TEXT = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    TXEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    PMEX = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    E = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 4;
                                          singleSelectionCallback = "D:Select (searchExpt = true),\nD:GoHome";
                                      }
                                }
                                {
                                  ExperimentList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                        Group: Widget
                                          labelString = "0 Experiments";
                                        Group: User
                                          defaultLabel = Experiments;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 4;
                                          singleSelectionCallback = "D:SelectExpt,\nD:GoHome";
                                      }
                                }
                                {
                                  MarkerList = MarkerList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          singleSelectionCallback = "D:SelectLookupListItem(row = -2),\nD:SelectPrimaryMarker";
                                          visibleItemCount = 3;
                                        Group: User
                                          targetWidget = ExptMarker;
                                          targetText = 7;
                                          targetKey = 2;
                                      }
                                }
                                {
                                  MappingAssayList = MappingAssayList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = ExptMarker;
                                          targetText = 9;
                                          targetKey = 5;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "MLDP\nCrosses in Lookup List\nInvalid Markers\nInvalid Chromosomes\nInvalid 2 Point\nInvalid Cross\nMissing Statistics";
                                              Group: User
                                                keys = "Mldp.py\nMLD_Crosses.sql\nMLD_Marker.sql\nMLD_Chromosome.sql\nMLD_2Point.sql\nMLD_Cross.sql\nMLD_Statistics.sql";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          MLC = Module : MGI;
          Group: Widget
            destroyCallback = "D:ExitMLCED";
          Group: Control
            vip_x = 180;
            vip_y = 360;
          Group: User
            homeWidget = Marker;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitMLCED";
                                      }
                                }
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:VerifyEdit(mode = 1),\nD:Modify,\nD:GoHome";
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:VerifyMLCEDClear";
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                          }
                          {
                            Reports = MenuCascade;
                          }
                          {
                            Utilities = Utilities : mgiMenu;
                                Popups:
                                {
                                  UtilitiesPulldown = MenuPulldown;
                                      {
                                        Import = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Import Description";
                                          activateCallback = "C: TuManage(find = ImportMLCTextDialog)";
                                      }
                                      {
                                        Submit = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Submit Data to Production";
                                          activateCallback = "C: TuManage(find = SubmitDialog)";
                                      }
                                      {
                                        Unlock = MenuPush : mgiMenu;
                                        Group: Widget
                                          labelString = "Unlock Record";
                                          activateCallback = "D:UnlockInit";
                                      }
                                      {
                                        Transfer = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:MarkerTransferInit()";
                                          labelString = "Marker Transfer";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiMarker = mgiMarker : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Marker = CharText;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Symbol;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab:  VerifyMLCMarker()";
                                            }
                                      }
                                }
                                {
                                  ChromosomeMenu = ChromosomeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiMarker;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = mgiMarker;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                }
                                {
                                  MLCModeMenu = MLCModeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ChromosomeMenu;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ChromosomeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiMarker;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiMarker;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                      }
                                }
                                {
                                  Description = Text : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Description;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          rows = 25;
                                          columns = 125;
                                      }
                                }
                                {
                                  ExtrasForm = XmForm;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Description;
                                    topWidget = Description;
                                      {
                                        SearchFor = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SearchReplaceText(type=\"Search\")";
                                          labelString = Search;
                                        Group: Constraint
                                          leftAttachment = attach_form;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                      }
                                      {
                                        GlobalReplace = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SaveLocusText,\nD:SearchReplaceText(type=\"GlobalReplace\")";
                                          labelString = "Global Replace";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = SearchStr;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        Replace = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SaveLocusText,\nD:SearchReplaceText(type=\"Replace\")";
                                          labelString = Replace;
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = GlobalReplace;
                                          rightAttachment = attach_opposite_widget;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_widget;
                                          resizable = true;
                                          bottomWidget = GlobalReplace;
                                          rightWidget = GlobalReplace;
                                      }
                                      {
                                        UndoReplace = push : mgiDataTypes;
                                        Group: Widget
                                          labelString = Undo;
                                          activateCallback = "D:SearchReplaceText(type=\"UndoReplace\")";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = ReplaceStr;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        SearchStr = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 15;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = SearchFor;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        ReplaceStr = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 15;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = GlobalReplace;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_none;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftOffset = 2;
                                      }
                                      {
                                        SelectL = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SelectText(type=\"L\")";
                                          labelString = L;
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = UndoReplace;
                                          leftOffset = 50;
                                      }
                                      {
                                        SelectR = push : mgiDataTypes;
                                        Group: Widget
                                          activateCallback = "D:SelectText(type=\"R\")";
                                          labelString = R;
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = SelectL;
                                      }
                                      {
                                        Unselect = push : mgiDataTypes;
                                        Group: Widget
                                          labelString = Unselect;
                                          activateCallback = "D:SelectText(type=\"None\"),\nD:UnSelectRefsTable,\nD:ClearMatchCount";
                                          width = 75;
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          rightAttachment = attach_form;
                                          topAttachment = attach_form;
                                          bottomAttachment = attach_form;
                                          resizable = true;
                                          leftWidget = SelectR;
                                      }
                                }
                                {
                                  Reference = OrderedTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ExtrasForm;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ExtrasForm;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblColumnLabels = "Mode,Current Order,Current Key,New Key,Ref#,J#,Citation";
                                          xrtTblNumColumns = 7;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 4 4)(all 5 10)(all 6 60)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblPixelWidthSeries = "(all 0-3 0)";
                                          xrtTblMaxLengthSeries = "(all 6 255)";
                                          xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "refsCurrentKey:Int=\"2\"\nrefsKey:Int=\"3\"\njnum:Int=\"5\"\ncitation:Int=\"6\"\n";
                                        Group: User
                                          seqNum = 4;
                                          saveTraversableSeries = "(all 0-4 False)";
                                          saveEditableSeries = "(all 0-4 False)";
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        EditOrder = toggle;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        form = XmRowColumn;
                                        Group: Widget
                                          orientation = horizontal;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_form;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            {
                                              Sort = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:SortReferences";
                                            }
                                            {
                                              Match = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Match\")";
                                            }
                                            {
                                              Miss = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Miss\")";
                                            }
                                            {
                                              Extra = TablePush : mgiTable;
                                              Group: Widget
                                                activateCallback = "D:HighlightRefs(type=\"Extra\")";
                                            }
                                            {
                                              Count = CharText : mgiDataTypes;
                                                  {
                                                    label = XmLabel;
                                                    Group: Widget
                                                      labelString = " ";
                                                  }
                                                  {
                                                    text = text;
                                                    Group: Widget
                                                      editable = False;
                                                      inTabGroup = False;
                                                      traversalOn = False;
                                                      maxLength = 10;
                                                      columns = 5;
                                                  }
                                            }
                                      }
                                }
                                {
                                  Class = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Reference;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,Class Name";
                                          xrtTblMaxLengthSeries = "(all 3 60)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 40)";
                                          xrtTblEditableSeries = "(all 0-2 False)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "classCurrentKey:Int=\"1\"\nclassKey:Int=\"2\"\nclassName:Int=\"3\"\n";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:VerifyMLCEDClear";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:VerifyEdit(mode = 1),\nD:Modify,\nD:GoHome";
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModifiedBy = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ModifiedDate;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ModifiedDate;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Modified By";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          maxLength = 30;
                                          columns = 10;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  ClassList = ClassList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = Class;
                                          targetText = 3;
                                          targetKey = 2;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Current Symbol\nTransfer Report";
                                              Group: User
                                                keys = "MLC_Current_Symbol.py\nMLC_TransferStats.py\n";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      SubmitDialog = VerifyDialog : mgiDialog;
                      Group: Widget
                        okCallback = "D:Submit";
                        dialogTitle = "MLC - Submit Data";
                        messageString = "You are about to transfer the \ncurrent record to the \nMLC Production Database.\nIf you have deleted the current\nrecord, then this same delete\nwill occur on Production.\nSelect \"Yes\" to confirm, \"No\"\nto cancel.";
                    }
                    {
                      ImportMLCTextDialog = ImportMLCTextDialog : mgiDialog;
                    }
                    {
                      ExitDialog = ExitDialog : mgiDialog;
                    }
                    {
                      SymbolErrorDialog = SelectionDialog : mgiDialog;
                      Group: Widget
                        autoUnmanage = False;
                        cancelCallback = "C: TuUnmanage";
                        dialogTitle = "Symbol Errors";
                        listLabelString = "Symbol      Reason       NewSymbol(s)";
                        okCallback = "D:FixSymbols";
                        okLabelString = Fix;
                        textColumns = 80;
                    }
                    {
                      ClearDialog = ClearDialog : mgiDialog;
                      Group: Widget
                        okCallback = "D:ClearMLCED";
                    }
                    {
                      MLCUnlockDialog = MLCUnlockDialog : mgiDialog;
                    }
                    {
                      MRKTransferDialog = MRKTransferDialog : mgiDialog;
                          {
                            frame = XmFrame;
                          }
                          {
                            Marker = Table;
                          }
                          {
                            manualFrame = XmFrame;
                          }
                          {
                            autoFrame = XmFrame;
                          }
                          {
                            Lookup = XmFrame;
                          }
                          {
                            Buttons = Buttons;
                                {
                                  OK = DialogPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                          }
                    }
              }
        }
        {
          MGD = Application : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 30;
          Group: User
            initDialog = "StrainDialog\nTissueDialog\nRIDialog\nCrossDialog";
              {
                MGDForm = XmForm;
                    {
                      MGDMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      MGDFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MGDMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MGDMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Reference = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Reference\")";
                                    labelString = References;
                                    traversalOn = False;
                                }
                                {
                                  Marker = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Marker\")";
                                    labelString = Markers;
                                    traversalOn = False;
                                }
                                {
                                  MolecularSegment = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSegment\")";
                                    labelString = "Molecular Probes & Segments";
                                    traversalOn = False;
                                }
                                {
                                  Homology = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Homology\")";
                                    traversalOn = False;
                                }
                                {
                                  MLDP = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLDP\")";
                                    labelString = Mapping;
                                    traversalOn = False;
                                }
                                {
                                  MLC = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLCED\")";
                                    traversalOn = False;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  Lookups = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Lookups\")";
                                    labelString = Lookups;
                                    traversalOn = False;
                                }
                                {
                                  Species = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Species\")";
                                    traversalOn = False;
                                }
                                {
                                  Strains = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Strains\")";
                                    traversalOn = False;
                                }
                                {
                                  Tissues = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Tissues\")";
                                    traversalOn = False;
                                }
                                {
                                  Cross = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Cross\")";
                                    labelString = Crosses;
                                    traversalOn = False;
                                }
                                {
                                  RISet = XmPushButton;
                                  Group: Widget
                                    labelString = "RI Sets";
                                    activateCallback = "D:CreateMGIModule(name = \"RISet\")";
                                    traversalOn = False;
                                }
                                {
                                  separator1 = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  Nomen = XmPushButton;
                                  Group: Widget
                                    labelString = Nomen;
                                    activateCallback = "D:CreateMGIModule(name = \"Nomen\")";
                                    traversalOn = False;
                                    managed = False;
                                }
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog;
              }
              {
                WorkingDialog = WorkingDialog;
              }
              {
                StrainDialog = StrainDialog : mgiDialog;
              }
              {
                TissueDialog = TissueDialog : mgiDialog;
              }
              {
                RIDialog = RIDialog : mgiDialog;
              }
              {
                CrossDialog = CrossDialog : mgiDialog;
              }
        }
        {
          MarkerNonMouse = Module : MGI;
          Group: Control
            vip_x = 60;
            vip_y = 250;
          Group: User
            homeWidget = Symbol;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Symbol;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiSpecies = mgiSpecies : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID;
                                      }
                                      {
                                        Species = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault()";
                                              Group: User
                                                required = True;
                                            }
                                      }
                                }
                                {
                                  Symbol = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiSpecies;
                                    leftWidget = mgiSpecies;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Symbol;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Chromosome = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Symbol;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                    leftOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Chromosome;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 8;
                                          maxLength = 8;
                                          translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyChromosome()";
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Cyto = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Chromosome;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Symbol;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Cytogenetic Band";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 25;
                                          maxLength = 25;
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Symbol;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                    leftWidget = mgiSpecies;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 100;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  Notes = Notes : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_form;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 5;
                                      }
                                }
                                {
                                  AccessionReference = AccessionReference : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Notes;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Notes;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = Sequence;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 3;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu;
                                        Group: User
                                          defaultOption = GDB;
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    Medline = AccToggle;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    dbEST = AccToggle;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    Sequence = AccToggle;
                                                    Group: Widget
                                                      managed = True;
                                                    Group: User
                                                      private = True;
                                                  }
                                                  {
                                                    SequencePID = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle;
                                                  }
                                                  {
                                                    CREX = AccToggle;
                                                  }
                                                  {
                                                    HYEX = AccToggle;
                                                  }
                                                  {
                                                    INEX = AccToggle;
                                                  }
                                                  {
                                                    FSEX = AccToggle;
                                                  }
                                                  {
                                                    RIEX = AccToggle;
                                                  }
                                                  {
                                                    TEXT = AccToggle;
                                                  }
                                                  {
                                                    TXEX = AccToggle;
                                                  }
                                                  {
                                                    PMEX = AccToggle;
                                                  }
                                                  {
                                                    E = AccToggle;
                                                  }
                                                  {
                                                    GDB = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    RATMAP = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  SpeciesList = SpeciesList : mgiLookup;
                                  Group: User
                                    cmd = "select _Species_key, name + ' (' + species + ')' from MRK_Species where _Species_key = 2 order by _Species_key\nselect _Species_key, name + ' (' + species + ')' from MRK_Species where _Species_key > 2 order by name\n";
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: User
                                          targetWidget = mgiSpecies;
                                          targetText = Species;
                                          targetKey = ObjectID;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Marker\nBroadcast";
                                              Group: User
                                                keys = "Marker.py\nbroadcast.py";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
}


Module: gxdDictionary
{
      autoCuil = False;
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Thu Sep  6 10:53:54 2001";
        {
          DictionaryModule = Module : MGI;
          Group: Widget
            title = "Anatomical Dictionary";
            destroyCallback = "D:DictionaryExit";
          Group: Control
            vip_x = 60;
            vip_y = 30;
          Group: User
            homeWidget = structureText;
            activateButtonName = Dictionary;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:DictionaryExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown;
                                      {
                                        Search = MenuPush;
                                      }
                                      {
                                        Modify = MenuPush;
                                      }
                                      {
                                        Add = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:AddDialog,\nD:GoHome";
                                      }
                                      {
                                        Delete = MenuPush;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush;
                                        Group: Widget
                                          labelString = "Clear Form Only";
                                          activateCallback = "D:DictionaryClear";
                                      }
                                      {
                                        ClearFormStages : Clear1 = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:DictionaryClear(clearStages = true)";
                                          labelString = "Clear Form and Stages";
                                          sensitive = True;
                                      }
                                }
                          }
                          {
                            Edit = Edit;
                          }
                          {
                            View = View;
                                Popups:
                                {
                                  ViewPulldown = MenuPulldown;
                                      {
                                        Strains = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Tissues = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                              horizontalSpacing = 5;
                            Group: User
                              homeWidget = structureText;
                                {
                                  ID = ID;
                                }
                                {
                                  structureText = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Structure:";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                          userDefinedAttributes = "structureNameKey:String\n";
                                      }
                                }
                                {
                                  structureNotes = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = structureText;
                                    leftWidget = structureText;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 50;
                                          rows = 2;
                                        Group: Constraint
                                          xrtGearAlignerAlignment = aligner_center;
                                      }
                                }
                                {
                                  mgiAliasTable = aliasTable : gxdDictionary;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = structureText;
                                    topWidget = structureNotes;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable;
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "MGI Aliases";
                                            }
                                      }
                                }
                                {
                                  edinburghAliasTable = aliasTable : gxdDictionary;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = mgiAliasTable;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topWidget = mgiAliasTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblEditableSeries = "(all all False)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Edinburgh Aliases";
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  stagesText = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = mgiAliasTable;
                                    leftWidget = structureText;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Stage(s)";
                                      }
                                }
                                {
                                  MGIAddedMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = MGIAddedPulldown;
                                    labelString = "MGI Added?";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = structureText;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = structureText;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        MGIAddedPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  printStopMenu = printStopMenu : gxdDictionary;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = structureNotes;
                                    topWidget = structureNotes;
                                    leftOffset = 5;
                                    topOffset = 10;
                                }
                                {
                                  MGIAddedAliasMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = MGIAddedAliasPulldown;
                                    labelString = "MGI Added Name?";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = edinburghAliasTable;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = edinburghAliasTable;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 5;
                                    topOffset = 30;
                                      Popups:
                                      {
                                        MGIAddedAliasPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  treeDisplay = treeDisplay : gxdDictionary;
                                  Group: Widget
                                    highlightColor = Firebrick;
                                    xrtGearSelectionCallback = "C:nodeSelectionCB";
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_widget;
                                    resizable = true;
                                    bottomWidget = progressMeter;
                                    topWidget = stagesText;
                                    topOffset = 5;
                                }
                                {
                                  progressMeter = XmXrtProgress;
                                  Group: Widget
                                    xrtGearProgressType = progress_discrete_bar;
                                    maximum = 28;
                                    xrtGearLabelFormat = "Loading/Updating %V of %M stages";
                                    xrtGearBarColor = Goldenrod;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_none;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Clear1;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Clear1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-1";
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:AddDialog,\nD:GoHome";
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Next;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Next;
                                    rightOffset = 5;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Delete;
                                    topOffset = 2;
                                    rightWidget = Delete;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                  Group: Widget
                                    managed = True;
                                      {
                                        Clear = XmCascadeButton;
                                            Popups:
                                            {
                                              ClearPulldown = XmPulldownMenu;
                                                  {
                                                    FormOnly = XmPushButton;
                                                    Group: Widget
                                                      activateCallback = "D:DictionaryClear";
                                                      labelString = "Clear Form Only";
                                                  }
                                                  {
                                                    FormAndStages = XmPushButton;
                                                    Group: Widget
                                                      labelString = "Clear Form and Stages";
                                                      activateCallback = "D:DictionaryClear(clearStages = true)";
                                                  }
                                            }
                                      }
                                }
                                {
                                  RecordCount = RecordCount;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Previous;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList;
                                }
                                {
                                  ADEditClipboard = ADEditClipboard : gxdDictionary;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog;
                    }
                    {
                      ReportDialog = ReportDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog;
                    }
                    {
                      WhichItem = WhichItem;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd;
                    }
                    {
                      WorkingDialog = WorkingDialog;
                    }
                    {
                      NoteDialog = NoteDialog;
                    }
                    {
                      AddDialog = AddDialog : gxdDictionary;
                      Group: Widget
                        managed = False;
                        dialogTitle = "Structure Add Dialog";
                          {
                            theForm = XmForm;
                                {
                                  structureText = CharText : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Structure:";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  structureNotes = Notes : mgiDataTypes;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 50;
                                          rows = 2;
                                        Group: Constraint
                                          xrtGearAlignerAlignment = aligner_center;
                                      }
                                }
                          }
                    }
              }
        }
        {
          ADEditClipboard = ClipboardEditList : mgiLookup;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            horizontalSpacing = 5;
            width = 290;
          Group: Control
            vip_x = 60;
            vip_y = 85;
            vipComment = "XmForm is a container widget with no input semantics. Constraints are placed on its children to define attachments for each of the child's four sides. These attachments can be to the XmForm, to another child, to a relative position or to the initial position of the child. The attachments determine the layout behavior of XmForm when resizing occurs.";
              {
                Label = LookupLabel : mgiLookup;
                Group: Widget
                  labelString = "Anatomical Clipboard";
                Group: User
                  defaultLabel = "Anatomical Clipboard";
              }
              {
                List = list : mgiDataTypes;
              }
              {
                Add = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:ADClipboardAdd";
              }
        }
        {
          treeDisplay = XmXrtOutliner;
          Group: Control
            vip_x = 175;
            vip_y = 85;
        }
        {
          aliasTable = TableLabel : mgiTable;
          Group: Widget
            width = 160;
            horizontalSpacing = 2;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Constraint
            leftAttachment = attach_form;
            rightAttachment = attach_form;
            topAttachment = attach_form;
            bottomAttachment = attach_none;
            resizable = true;
          Group: Control
            vip_x = 60;
            vip_y = 140;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblVisibleRows = 3;
                  xrtTblVisibleColumns = 1;
                  xrtTblDisplayVertScrollBar = dispsb_as_needed;
                  xrtTblNumColumns = 3;
                  xrtTblCharWidthSeries = "(all 0 1) (all 1 20) (all 2 20)";
                  xrtTblPixelWidthSeries = "(all 0 0) (all 1 0)";
                  xrtTblTraversableSeries = "(all 0 False) (all 1 False)";
                  userDefinedAttributes = "structureNameKeyIndex:Int(Int)=\"1\"\nstructureIndex:Int(Int)=\"2\"\n";
              }
        }
        {
          AddDialog = XmFormDialog;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 175;
            vip_y = 30;
              {
                theForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                  horizontalSpacing = 10;
                  verticalSpacing = 10;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      structureText = CharText : mgiDataTypes;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Structure:";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 50;
                          }
                    }
                    {
                      structureNotes = Notes : mgiDataTypes;
                      Group: Widget
                        xrtGearOrientation = horizontal;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        bottomAttachment = attach_none;
                        resizable = true;
                        topWidget = structureText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = scrolledText;
                            Group: Widget
                              columns = 50;
                              rows = 2;
                            Group: Constraint
                              xrtGearAlignerAlignment = aligner_center;
                          }
                    }
                    {
                      mgiAliasTable = aliasTable : gxdDictionary;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        bottomAttachment = attach_form;
                        resizable = true;
                        topWidget = structureNotes;
                        leftWidget = structureText;
                          {
                            Table = mgiTable;
                                {
                                  label = XtXrtLabel;
                                  Group: Widget
                                    labelString = "MGI Aliases";
                                }
                          }
                    }
                    {
                      printStopMenu = printStopMenu : gxdDictionary;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = mgiAliasTable;
                        rightAttachment = attach_none;
                        topAttachment = attach_opposite_widget;
                        topWidget = mgiAliasTable;
                        bottomAttachment = attach_none;
                        resizable = true;
                      Group: User
                        defaultOption = Yes;
                    }
              }
              {
                rowColumn = XmRowColumn;
                Group: Widget
                  orientation = horizontal;
                  packing = pack_tight;
                  spacing = 10;
                  numColumns = 1;
                Group: Constraint
                  leftAttachment = attach_position;
                  rightAttachment = attach_form;
                  topAttachment = attach_none;
                  bottomAttachment = attach_form;
                  resizable = true;
                  leftPosition = 40;
                  bottomOffset = 5;
                    {
                      Add = XmPushButton;
                      Group: Widget
                        labelString = Add;
                        activateCallback = "D:Add";
                        traversalOn = False;
                    }
                    {
                      Cancel = XmPushButton;
                      Group: Widget
                        labelString = Cancel;
                        traversalOn = False;
                        activateCallback = "C: TuUnmanage";
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_widget;
                  bottomWidget = rowColumn;
                  resizable = true;
                  topWidget = theForm;
              }
        }
        {
          printStopMenu = YesNoMenu : mgiOption;
          Group: Widget
            labelString = "PrintStop Set?";
            subMenuId = printStopPulldown;
          Group: Control
            vip_x = 175;
            vip_y = 140;
          Group: User
            defaultOption = SearchAll;
              Popups:
              {
                printStopPulldown : YesNoPulldown = OptionPulldown;
              }
        }
}


Module: mgiDialog
{
      autoCuil = False;
      dDialogFile = "mgiDialog_dlg.d";
      release = "TeleUSE v3.2.3 / Solaris 8";
      lastWritten = "Thu Sep 25 13:57:21 2003";
        {
          StatusDialog = XmWarningDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            showCancelButton = False;
            showHelpButton = False;
            dialogTitle = "Status Report";
            managed = False;
            okCallback = "D:StatusReportOK";
          Group: Control
            vip_x = 100;
            vip_y = 470;
        }
        {
          DeleteDialog = XmQuestionDialog;
          Group: Widget
            showHelpButton = False;
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Are You Sure?";
            managed = False;
            messageString = "Are you sure you want to delete this record?";
            okCallback = "D:Delete";
            okLabelString = Yes;
            cancelLabelString = No;
          Group: Control
            vip_x = 100;
            vip_y = 30;
        }
        {
          FileSelection = XmFileSelectionBox;
          Group: Widget
            resizePolicy = resize_none;
            cancelCallback = "C: TuUnmanage";
            showHelpButton = False;
          Group: Control
            vip_x = 100;
            vip_y = 745;
              {
                filler = XmSeparator;
                Group: Widget
                  managed = False;
              }
        }
        {
          SearchDialog = XmWorkingDialog;
          Group: Widget
            showOkButton = False;
            showHelpButton = False;
            showDefaultButton = False;
            messageString = "Search In Progress";
            dialogTitle = "Search Dialog";
            managed = False;
            dialogStyle = dialog_primary_application_modal;
            autoUnmanage = False;
          Group: Control
            vip_x = 100;
            vip_y = 525;
        }
        {
          ReportDialog = FileDialog : mgiDialog;
          Group: Widget
            userDefinedAttributes = "select:String(String)\nuseReportDir:Boolean(Boolean)=\"True\"\nprintSelect:String\n";
            dialogTitle = Reports;
            mapCallback = "D:ReportInit";
            width = 600;
          Group: Control
            vip_x = 100;
            vip_y = 360;
              {
                FileSelection = FileSelection;
                Group: Widget
                  okCallback = "D:ReportGenerate";
                  okLabelString = Generate;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
              }
              {
                Lookup = XmFrame;
                    {
                      panedWindow = XmPanedWindow;
                          {
                            ReportList = LookupList : mgiLookup;
                                {
                                  Label = LookupLabel;
                                  Group: Widget
                                    labelString = Reports;
                                }
                                {
                                  List = list;
                                  Group: Widget
                                    singleSelectionCallback = "D:ReportSelect";
                                }
                          }
                          {
                            PrinterList = LookupList;
                          }
                          {
                            PrintOrient = Choice : mgiDataTypes;
                                {
                                  PrintOrientBox : ChoiceBox = XmRowColumn;
                                      {
                                        Portrait = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = Portrait;
                                      }
                                      {
                                        Landscape = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = Landscape;
                                      }
                                }
                          }
                          {
                            PrintColumn = Choice : mgiDataTypes;
                                {
                                  PrintColumnBox : ChoiceBox = XmRowColumn;
                                      {
                                        OneColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = "1 column";
                                      }
                                      {
                                        TwoColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "2 column";
                                      }
                                }
                          }
                          {
                            Output = XmScrolledText;
                            Group: Widget
                              rows = 5;
                          }
                    }
              }
        }
        {
          FileDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1020;
              {
                FileSelection = FileSelection : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      filler = XmSeparator;
                    }
                    {
                      Print = XmPushButton;
                      Group: Widget
                        activateCallback = "D: PrintFile";
                    }
                    {
                      Delete = XmPushButton;
                      Group: Widget
                        activateCallback = "D: DeleteFile";
                    }
              }
              {
                Lookup = XmFrame;
                Group: Widget
                  traversalOn = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = FileSelection;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      panedWindow = XmPanedWindow;
                          {
                            PrinterList = LookupList : mgiLookup;
                                {
                                  Label = LookupLabel;
                                  Group: Widget
                                    labelString = Printers;
                                  Group: User
                                    defaultLabel = Printers;
                                }
                                {
                                  List = list;
                                  Group: Widget
                                    items = "jaguar\nzinger\nmgmgrand\nmeadow\ninforback\ndiva\nwizard\nmario\nbentley\ntucker\npackard\nlotus\ndelorean\nlancia";
                                }
                          }
                          {
                            PrintOrient = Choice : mgiDataTypes;
                                {
                                  PrintOrientBox : ChoiceBox = XmRowColumn;
                                      {
                                        Portrait = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = Portrait;
                                      }
                                      {
                                        Landscape = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = Landscape;
                                      }
                                }
                          }
                          {
                            PrintColumn = Choice : mgiDataTypes;
                                {
                                  PrintColumnBox : ChoiceBox = XmRowColumn;
                                      {
                                        OneColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = "1 column";
                                      }
                                      {
                                        TwoColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "2 column";
                                      }
                                }
                          }
                          {
                            Output = XmScrolledText;
                            Group: Widget
                              editable = False;
                              editMode = multi_line_edit;
                              background = Wheat;
                              rows = 5;
                          }
                    }
              }
        }
        {
          VerifyDialog = XmQuestionDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            showHelpButton = False;
            managed = False;
            cancelLabelString = No;
            okLabelString = Yes;
          Group: Control
            vip_x = 100;
            vip_y = 635;
        }
        {
          WhichItem = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
            dialogTitle = "Which Item?";
          Group: Control
            vip_x = 100;
            vip_y = 855;
              {
                ItemList = LookupList : mgiLookup;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 2;
                  rightOffset = 2;
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = Items;
                        managed = False;
                    }
                    {
                      List = list;
                      Group: Widget
                        width = 250;
                        singleSelectionCallback = "D:WhichItem,\nC:TuUnmanage";
                        visibleItemCount = 10;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = ItemList;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Buttons = XmRowColumn;
                Group: Widget
                  orientation = horizontal;
                  entryAlignment = alignment_center;
                  inTabGroup = True;
                  packing = pack_column;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topOffset = 5;
                  leftOffset = 100;
                  bottomOffset = 5;
                    {
                      Cancel = DialogPush : mgiDialog;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                    }
              }
        }
        {
          DialogPush = XmPushButton;
          Group: Widget
            marginHeight = 5;
            marginWidth = 10;
            traversalOn = False;
          Group: Control
            vip_x = 100;
            vip_y = 1130;
        }
        {
          WorkingDialog = XmWorkingDialog;
          Group: Widget
            autoUnmanage = False;
            managed = False;
            showCancelButton = False;
            showDefaultButton = False;
            showHelpButton = False;
            showOkButton = False;
            showSeparator = False;
            dialogTitle = "Working Dialog";
          Group: Control
            vip_x = 100;
            vip_y = 415;
        }
        {
          NLMDialog = ReportDialog : mgiDialog;
          Group: Widget
            dialogTitle = "NLM Update";
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 965;
          Group: User
            useReportDir = False;
              {
                FileSelection = FileSelection;
                Group: Widget
                  okCallback = "D:ReportGenerate(nlmMode = 1)";
                  okLabelString = "Update\nNLM";
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      filler = XmSeparator;
                    }
                    {
                      AddNLM = XmPushButton;
                      Group: Widget
                        activateCallback = "D:ReportGenerate(nlmMode = 2)";
                        labelString = "Add\nNLM";
                    }
              }
              {
                Lookup = XmFrame;
                    {
                      panedWindow = XmPanedWindow;
                          {
                            ReportList = LookupList;
                                {
                                  Label = LookupLabel;
                                }
                                {
                                  List = list;
                                  Group: Widget
                                    items = "NLM Updates/Adds";
                                  Group: User
                                    keys = "nlm.py";
                                }
                          }
                          {
                            PrinterList = LookupList;
                          }
                          {
                            PrintOrient = Choice : mgiDataTypes;
                                {
                                  PrintOrientBox : ChoiceBox = XmRowColumn;
                                      {
                                        Portrait = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = Portrait;
                                      }
                                      {
                                        Landscape = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = Landscape;
                                      }
                                }
                          }
                          {
                            PrintColumn = Choice : mgiDataTypes;
                                {
                                  PrintColumnBox : ChoiceBox = XmRowColumn;
                                      {
                                        OneColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          set = True;
                                          labelString = "1 column";
                                      }
                                      {
                                        TwoColumn = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "2 column";
                                      }
                                }
                          }
                    }
              }
              {
                Jnum = Jnum : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = FileSelection;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = FileSelection;
                  topOffset = 2;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Starting J: (for Add only)";
                    }
              }
        }
        {
          VerifyItemAdd = VerifyDialog : mgiDialog;
          Group: Widget
            dialogTitle = "Add Item?";
            messageString = "This item does not exist in the database.\nDo you want to ADD this item?";
            okCallback = "D:VerifyItemAdd";
            userDefinedAttributes = "doAdd:Boolean=\"False\"\n";
            okLabelString = Yes;
            cancelLabelString = No;
          Group: Control
            vip_x = 100;
            vip_y = 1075;
        }
        {
          SelectDialog = XmFormDialog;
          Group: Widget
            managed = False;
            dialogTitle = "Selection List";
            userDefinedAttributes = "editForm:Widget\n";
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1185;
              {
                ItemList = LookupList : mgiLookup;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 Items";
                      Group: User
                        defaultLabel = Items;
                    }
                    {
                      List = list;
                      Group: Widget
                        width = 250;
                        visibleItemCount = 25;
                        singleSelectionCallback = "D:SelectListItem,\nD:CopySelectionItem";
                    }
              }
              {
                Selection = CharText : mgiDataTypes;
                Group: Widget
                  xrtGearOrientation = vertical;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = ItemList;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ItemList;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Selection;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 40;
                        maxLength = 255;
                    }
              }
              {
                SelectionKey = ID : mgiDataTypes;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Selection;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_position;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  resizable = true;
                  leftPosition = 15;
                  bottomOffset = 2;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "D:FindSelectionItem";
                        labelString = Find;
                    }
              }
        }
        {
          StrainDialog = SelectDialog : mgiDialog;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1295;
              {
                ItemList = LookupList : mgiLookup;
                Group: User
                  cmd = "select _Strain_key, strain from PRB_Strain where private = 0 order by strain";
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 Strains";
                      Group: User
                        defaultLabel = Strains;
                    }
              }
              {
                Selection = CharText : mgiDataTypes;
              }
              {
                SelectionKey = ID : mgiDataTypes;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Selection;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          TissueDialog = SelectDialog : mgiDialog;
          Group: Widget
            dialogTitle = Tissues;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1240;
              {
                ItemList = LookupList : mgiLookup;
                Group: User
                  cmd = "select _Tissue_key, tissue from PRB_Tissue order by tissue";
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 Tissues";
                      Group: User
                        defaultLabel = Tissues;
                    }
              }
              {
                Selection = CharText : mgiDataTypes;
              }
              {
                SelectionKey = ID : mgiDataTypes;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Selection;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          NoteDialog = XmFormDialog;
          Group: Widget
            managed = False;
            userDefinedAttributes = "targetWidget:Widget(Widget)\ntargetColumn:Int(Int)\n";
            rubberPositioning = False;
            resizePolicy = resize_any;
            dialogTitle = "Notes Dialog";
          Group: Control
            vip_x = 100;
            vip_y = 1350;
              {
                label = XmLabel;
                Group: Widget
                  labelString = Notes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topOffset = 5;
              }
              {
                Note = Notes : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = label;
                  topOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        managed = False;
                    }
                    {
                      text = scrolledText;
                      Group: Widget
                        columns = 75;
                        userDefinedAttributes = "saveMaxNoteLength:Int(Int)=\"0\"\nshortMaxNoteLength:Int(Int)=\"255\"\nsaveRows:Int=\"0\"\n";
                        rows = 15;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Note;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = separator;
                  leftOffset = 100;
                  bottomOffset = 5;
                  topOffset = 5;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "D:NoteCommit";
                        labelString = "Save Changes";
                    }
                    {
                      Cancel = DialogPush;
                      Group: Widget
                        activateCallback = "D:NoteCancel";
                        labelString = "Cancel Changes";
                    }
              }
        }
        {
          Buttons = XmRowColumn;
          Group: Widget
            orientation = horizontal;
            entryAlignment = alignment_center;
            inTabGroup = True;
            packing = pack_column;
            spacing = 50;
            traversalOn = False;
          Group: Control
            vip_x = 100;
            vip_y = 1405;
              {
                OK = DialogPush : mgiDialog;
              }
              {
                Cancel = DialogPush : mgiDialog;
                Group: Widget
                  activateCallback = "C: TuUnmanage";
                  labelString = Close;
              }
        }
        {
          EditDialog = XmFormDialog;
          Group: Widget
            managed = False;
            userDefinedAttributes = "targetWidget:Widget(Widget)\ntargetColumn:Int(Int)\ntargetKeyColumn:Int(Int)\nclearForms:StringTable(StringTable)=\"EditForm\"\nhomeWidget:StringTable(StringTable)\nallowEdit:Boolean(Boolean)=\"True\"\n";
            dialogStyle = dialog_primary_application_modal;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1515;
              {
                EditForm = EditForm : MGI;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = EditForm;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_position;
                  leftPosition = 30;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  topOffset = 5;
                  bottomAttachment = attach_form;
                  resizable = true;
                  bottomOffset = 5;
                    {
                      OK = DialogPush;
                      Group: Widget
                        labelString = "Save Edits\nand Quit";
                    }
              }
        }
        {
          InSituResultDialog = EditDialog;
          Group: Widget
            dialogTitle = "InSitu Results";
            dialogStyle = dialog_modeless;
            rubberPositioning = False;
            resizePolicy = resize_any;
            closeWindowCallback = "D:InSituResultCancel";
          Group: Control
            vip_x = 100;
            vip_y = 1460;
              {
                EditForm = EditForm : MGI;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ID = ID;
                    }
                    {
                      Results = OrderedTableLabel : mgiTable;
                      Group: Constraint
                        leftAttachment = attach_form;
                        leftOffset = 5;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_form;
                        resizable = true;
                        rightOffset = 5;
                          {
                            Table = mgiTable;
                            Group: Widget
                              userDefinedAttributes = "resultKey:Int(Int)=\"3\"\nstrengthKey:Int(Int)=\"5\"\npatternKey:Int(Int)=\"6\"\nimagePaneKeys:Int(Int)=\"7\"\nstructures:Int(Int)=\"8\"\nstrength:Int(Int)=\"9\"\npattern:Int(Int)=\"10\"\nimagePanes:Int(Int)=\"11\"\nnotes:Int(Int)=\"12\"\nstructureKeys:Int(Int)=\"4\"\nclipboard:String=\"Lookup\"\n";
                              xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 8 10)(all 9-11 15)";
                              xrtTblColumnLabels = "Mode,Current Order,#,Result key,Struct keys,Strength key,Pattern key,Image Pane keys,Structures,Strength,Pattern,Image Panes,Notes";
                              xrtTblNumColumns = 13;
                              xrtTblEditableSeries = "(all 0-2 False)(all 8-12 false)";
                              xrtTblEnterCellCallback = "D:ADClipboardSetItems,\nD:SetImageResultOptions,\nD:SetImagePane";
                              xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-7 0)";
                              xrtTblTraversableSeries = "(all 0-7 False)";
                              xrtTblValidateCellCallback = "D:VerifyStrengthPattern,\nD:CopyInSituRow,\nD:CommitTableCellEdit";
                              xrtTblNumRows = 18;
                              xrtTblVisibleRows = 17;
                            Group: User
                              requiredColumns = "5\n9";
                              saveTraversableSeries = "(all 0-7 False)";
                              saveEditableSeries = "(all 0-2 False)(all 8-12 False)";
                                {
                                  label = XtXrtLabel;
                                  Group: Widget
                                    labelString = "InSitu Results";
                                }
                          }
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_widget;
                  rightWidget = Lookup;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = EditForm;
                  topOffset = 5;
              }
              {
                Buttons = Buttons;
                Group: Constraint
                  leftAttachment = attach_position;
                  rightAttachment = attach_none;
                  topAttachment = attach_none;
                  bottomAttachment = attach_form;
                  resizable = true;
                  leftPosition = 10;
                  bottomOffset = 5;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "D:InSituResultCommit(quit = true)";
                        labelString = "Save Edits\nand Close";
                    }
                    {
                      Save = DialogPush : mgiDialog;
                      Group: Widget
                        labelString = "Save Edits";
                        activateCallback = "D:InSituResultCommit";
                    }
                    {
                      Cancel = DialogPush;
                      Group: Widget
                        activateCallback = "D:InSituResultCancel";
                        labelString = Close;
                    }
              }
              {
                Lookup = Lookup : mgiLookup;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = EditForm;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      panedWindow = XmPanedWindow;
                          {
                            QueryList = QueryList;
                            Group: Widget
                              managed = False;
                          }
                          {
                            CVInSituResult = CVInSituResult : mgiCV;
                          }
                          {
                            ImagePaneList = LookupList : mgiLookup;
                            Group: User
                              cmd = "select _ImagePane_key, paneLabel from IMG_ImagePaneRef_View where _Refs_key =";
                                {
                                  Label = LookupLabel;
                                  Group: Widget
                                    labelString = "Image Panes";
                                    activateCallback = "D:LoadImagePaneList";
                                  Group: User
                                    defaultLabel = "Image Panes";
                                }
                                {
                                  List = list;
                                  Group: Widget
                                    selectionPolicy = multiple_select;
                                    multipleSelectionCallback = "D:SelectImagePane";
                                    visibleItemCount = 10;
                                }
                          }
                          {
                            ADClipboard = ADClipboard : mgiLookup;
                            Group: User
                              cmd = "select distinct _Structure_key, dbName from GXD_ISResultStructure_View where _Specimen_key = ";
                              orderBy = sequenceNum;
                                {
                                  Label = LookupLabel;
                                }
                                {
                                  List = list;
                                  Group: Widget
                                    visibleItemCount = 15;
                                  Group: User
                                    targetWidget = Results;
                                    targetKey = 4;
                                    targetText = 8;
                                }
                          }
                    }
              }
              Popups:
              {
                ExitDialog = ExitDialog : mgiDialog;
                Group: Widget
                  okCallback = "D:InSituResultExit";
              }
        }
        {
          RIDialog = SelectDialog;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1570;
              {
                ItemList = LookupList : mgiLookup;
                Group: User
                  cmd = "select _RISet_key, designation from RI_RISet_View order by designation";
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 RI Sets";
                      Group: User
                        defaultLabel = "RI Sets";
                    }
                    {
                      List = list;
                      Group: Widget
                        singleSelectionCallback = "D:SelectListItem,\nD:CopySelectionItem,\nD:SelectRILookup";
                    }
              }
              {
                Selection = CharText : mgiDataTypes;
              }
              {
                SelectionKey = ID : mgiDataTypes;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Selection;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          CrossDialog = SelectDialog;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1625;
              {
                ItemList = LookupList : mgiLookup;
                Group: User
                  cmd = "select _Cross_key = -1, display = \"Anonymous\", whoseCross = \"Anonymous\"\nunion\nselect _Cross_key, display, whoseCross from CRS_Cross_View where displayed = 1\norder by whoseCross";
                    {
                      Label = LookupLabel;
                      Group: Widget
                        labelString = "0 Crosses";
                      Group: User
                        defaultLabel = Crosses;
                    }
                    {
                      List = list;
                      Group: Widget
                        singleSelectionCallback = "D:SelectListItem,\nD:CopySelectionItem,\nD:SelectCrossLookup";
                    }
              }
              {
                Selection = CharText : mgiDataTypes;
              }
              {
                SelectionKey = ID : mgiDataTypes;
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Selection;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          StrainMergeDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Strain Merge";
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1735;
              {
                Strain1 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  verifyAdd = False;
                  verifyPrivate = False;
                    {
                      StrainID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Old Strain";
                          }
                    }
              }
              {
                Strain2 = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Strain1;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Strain1;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  verifyAdd = False;
                  verifyPrivate = False;
                    {
                      StrainID = ID;
                    }
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "New Strain";
                          }
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Strain2;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 2;
                  rightOffset = 2;
              }
              {
                Buttons = XmWorkArea;
                Group: Widget
                  orientation = horizontal;
                  entryAlignment = alignment_center;
                  inTabGroup = True;
                  spacing = 25;
                  packing = pack_column;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                    {
                      Process = DialogPush : mgiDialog;
                      Group: Widget
                        labelString = "Process Merge";
                        activateCallback = "D:StrainMerge";
                        traversalOn = False;
                    }
                    {
                      Done = DialogPush : mgiDialog;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        traversalOn = False;
                    }
              }
        }
        {
          TissueMergeDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Tissue Merge";
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1790;
              {
                Mode = XmRadioBox;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Merge1 = toggle : mgiDataTypes;
                      Group: Widget
                        set = True;
                        labelString = "Merge Non-standard Tissues into Standard Tissue\n(enter New Tissue only)";
                        valueChangedCallback = "D:SetModify,\nD:TissueMergeSet";
                    }
                    {
                      Merge2 = toggle : mgiDataTypes;
                      Group: Widget
                        labelString = "Merge Standard Tissues into Non-standard Tissue\n(enter New Tissue only)";
                        valueChangedCallback = "D:SetModify,\nD:TissueMergeSet";
                    }
                    {
                      Merge3 = toggle : mgiDataTypes;
                      Group: Widget
                        labelString = "Merge old Tissue into new Tissue";
                        valueChangedCallback = "D:SetModify,\nD:TissueMergeSet";
                    }
              }
              {
                New = Tissue : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Mode;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Mode;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "New Tissue";
                          }
                    }
              }
              {
                Old = Tissue : mgiDataTypes;
                Group: Widget
                  sensitive = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = New;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = New;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Old Tissue";
                          }
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = Old;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 2;
                  rightOffset = 2;
              }
              {
                Buttons = XmWorkArea;
                Group: Widget
                  orientation = horizontal;
                  entryAlignment = alignment_center;
                  inTabGroup = True;
                  spacing = 25;
                  packing = pack_column;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                    {
                      Process = DialogPush : mgiDialog;
                      Group: Widget
                        labelString = "Process Merge";
                        activateCallback = "D:TissueMerge";
                        traversalOn = False;
                    }
                    {
                      Done = DialogPush : mgiDialog;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        traversalOn = False;
                    }
              }
        }
        {
          WithdrawalDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Marker Withdrawal";
            managed = False;
            fractionBase = 3;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1845;
              {
                currentMarker = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              editable = False;
                              traversalOn = False;
                          }
                    }
              }
              {
                ChromosomeMenu = ChromosomeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = currentMarker;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = currentMarker;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 10;
              }
              {
                hasAlleles = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "The Marker being withdrawn has alleles.";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = currentMarker;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = currentMarker;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                addAsSynonym = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Add Marker being withdrawn as synonym.";
                  set = True;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = hasAlleles;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = hasAlleles;
                  topOffset = 5;
              }
              {
                MarkerEventMenu = MarkerEventMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = addAsSynonym;
                  topWidget = addAsSynonym;
                    Popups:
                    {
                      MarkerEventPulldown = OptionPulldown;
                      Group: User
                        sql = "select * from MRK_Event where _Marker_Event_key > 1 order by _Marker_Event_key";
                        childTemplate = EventToggle;
                    }
              }
              {
                MarkerEventReasonMenu = MarkerEventReasonMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = MarkerEventMenu;
                  leftOffset = 10;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = MarkerEventMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                nonVerified = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = MarkerEventMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MarkerEventReasonMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "New Symbol";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()";
                          }
                    }
              }
              {
                Name = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = nonVerified;
                  topOffset = 10;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = nonVerified;
                  rightOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "New Name";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 70;
                    }
              }
              {
                mgiMarker = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = MarkerEventMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = MarkerEventReasonMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  accessionWidget = markerAccession;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "New Symbol";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMarker() VerifyMarkerChromosome()";
                          }
                    }
              }
              {
                markerAccession = mgiAccession : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = mgiMarker;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = mgiMarker;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  tableID = 113;
                    {
                      ObjectID = ID : mgiDataTypes;
                    }
                    {
                      AccessionID = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() DisplayMarker()";
                          }
                    }
                    {
                      AccessionName = CharSText : mgiDataTypes;
                      Group: Widget
                        managed = False;
                    }
              }
              {
                NewMarker = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Name;
                  topWidget = Name;
                  topOffset = 5;
                  leftOffset = 25;
                    {
                      Table = mgiTable;
                      Group: Widget
                        xrtTblNumColumns = 3;
                        xrtTblColumnLabels = "Mode,Key,New Symbols";
                        xrtTblPixelWidthSeries = "(all 0-1 0)";
                        xrtTblEditableSeries = "(all 0-1 False)";
                        xrtTblTraversableSeries = "(all 0-1 False)";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 25)";
                        xrtTblMaxLengthSeries = "(all 2 25)";
                        userDefinedAttributes = "markerKey:Int(Int)=\"1\"\nmarkerSymbol:Int(Int)=\"2\"\nmarkerChr:Int(Int)=\"-1\"\nmarkerColumns:Int(Int)=\"1\"\n";
                        xrtTblVisibleRows = 4;
                        xrtTblNumRows = 4;
                    }
                    {
                      AddRow = TablePush;
                      Group: Widget
                        managed = False;
                    }
                    {
                      DeleteRow = TablePush;
                      Group: Widget
                        managed = False;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = NewMarker;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = MarkerEventMenu;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 50;
                              editable = False;
                              traversalOn = False;
                          }
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 2;
                  topWidget = mgiCitation;
                  topOffset = 5;
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Widget
                  spacing = 40;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topWidget = separator;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "D:MarkerWithdrawal";
                        labelString = Process;
                    }
                    {
                      Cancel = DialogPush;
                      Group: Widget
                        activateCallback = "D:MarkerWithdrawalCancel";
                    }
              }
              {
                Output = scrolledText : mgiDataTypes;
                Group: Widget
                  managed = False;
              }
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
        }
        {
          PromptDialog = XmPromptDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            managed = False;
            showHelpButton = False;
          Group: Control
            vip_x = 100;
            vip_y = 250;
        }
        {
          ImportMLCTextDialog = PromptDialog : mgiDialog;
          Group: Widget
            dialogTitle = Import;
            okCallback = "D:Import";
            showSelectionLabel = False;
            showText = False;
            navigationType = none;
          Group: Control
            vip_x = 100;
            vip_y = 800;
              {
                mgiMarker = mgiMarker : mgiDataTypes;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                      Group: Widget
                        xrtGearOrientation = vertical;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Import Text from which symbol?\n(TAB after entering symbol)";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMLCMarker()";
                          }
                    }
              }
              Popups:
              {
                WhichItem = WhichItem : mgiDialog;
              }
        }
        {
          ExitDialog = VerifyDialog;
          Group: Widget
            dialogTitle = "Exiting Form";
            messageString = "Changes have not been saved!\nAre you sure you want to exit this form?";
          Group: Control
            vip_x = 100;
            vip_y = 580;
        }
        {
          VerifyRecord = VerifyDialog;
          Group: Widget
            dialogTitle = "Verify Record Modifications";
            messageString = "Changes which have been made to this record have not been saved.\nDo you wish to CANCEL these modifications?";
            okCallback = "C: TuUnmanage";
          Group: Control
            vip_x = 100;
            vip_y = 690;
        }
        {
          SelectionDialog = XmSelectionDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            managed = False;
            showHelpButton = False;
            showApplyButton = False;
            cancelLabelString = Close;
          Group: Control
            vip_x = 100;
            vip_y = 140;
        }
        {
          ClearDialog = VerifyDialog;
          Group: Widget
            dialogTitle = "Are You Sure?";
            messageString = "Clearing will discard your most recent edits for the current record.\nAre you sure you want to Clear?";
            cancelCallback = "C: TuUnmanage";
          Group: Control
            vip_x = 100;
            vip_y = 195;
        }
        {
          AlleleMergeDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Marker Allele Merge";
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1680;
              {
                mgiMarker = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 25;
                              maxLength = 25;
                          }
                    }
              }
              {
                OldAllele = mgiAllele : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = mgiMarker;
                  topWidget = mgiMarker;
                    {
                      ObjectID = ID;
                    }
                    {
                      Allele = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Old Allele Symbol";
                          }
                    }
              }
              {
                NewAllele = mgiAllele : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = OldAllele;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = OldAllele;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Allele = CharText;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "New Allele Symbol";
                          }
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = NewAllele;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 2;
                  rightOffset = 2;
              }
              {
                Buttons = XmWorkArea;
                Group: Widget
                  orientation = horizontal;
                  entryAlignment = alignment_center;
                  inTabGroup = True;
                  spacing = 25;
                  packing = pack_column;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                    {
                      Process = DialogPush : mgiDialog;
                      Group: Widget
                        labelString = "Process Merge";
                        activateCallback = "D:AlleleMerge";
                        traversalOn = False;
                    }
                    {
                      Done = DialogPush : mgiDialog;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        traversalOn = False;
                    }
              }
        }
        {
          MRKBreakpointSplitDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Breakpoint Split";
            managed = False;
            fractionBase = 3;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 2065;
              {
                Lookup = XmFrame;
                Group: Widget
                  traversalOn = False;
                Group: Constraint
                  leftAttachment = attach_none;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_form;
                  resizable = true;
                    {
                      panedWindow = XmPanedWindow;
                          {
                            Output = XmScrolledText;
                            Group: Widget
                              editable = False;
                              editMode = multi_line_edit;
                              background = Wheat;
                              columns = 50;
                          }
                    }
              }
              {
                mgiMarker = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMarker() VerifyBreakpointMarker()";
                          }
                    }
              }
              {
                Band = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = mgiMarker;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = mgiMarker;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Band;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 20;
                        editable = False;
                        traversalOn = False;
                    }
              }
              {
                ProximalSymbol = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiMarker;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiMarker;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Proximal Symbol";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 25;
                        maxLength = 25;
                        editable = False;
                        traversalOn = False;
                    }
              }
              {
                DistalSymbol = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = ProximalSymbol;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ProximalSymbol;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Distal Symbol";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 25;
                        maxLength = 25;
                        editable = False;
                        traversalOn = False;
                    }
              }
              {
                ProximalBand = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = ProximalSymbol;
                  leftOffset = 5;
                  rightAttachment = attach_widget;
                  topAttachment = attach_opposite_widget;
                  topWidget = ProximalSymbol;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightWidget = Lookup;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Proximal Band";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 20;
                        columns = 20;
                        editable = False;
                        traversalOn = False;
                    }
              }
              {
                DistalBand = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = DistalSymbol;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = DistalSymbol;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Distal Band";
                    }
                    {
                      text = text;
                      Group: Widget
                        maxLength = 20;
                        columns = 20;
                    }
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topWidget = DistalSymbol;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "C: TuManage(find = VerifyBreakpointSplitDialog)";
                        labelString = "Process Split";
                    }
                    {
                      Cancel = DialogPush;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        labelString = Done;
                    }
              }
              Popups:
              {
                WhichItem = WhichItem : mgiDialog;
              }
              {
                VerifyBreakpointSplitDialog = VerifyDialog : mgiDialog;
                Group: Widget
                  dialogTitle = "Verify Breakpoint Split";
                  messageString = "Are you sure you want to continue with the split?";
                  okCallback = "D:MarkerBreakpointSplit";
              }
        }
        {
          MLCUnlockDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Unlock Record";
            managed = False;
            fractionBase = 3;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 1900;
              {
                mgiMarker = mgiMarker : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                  topOffset = 5;
                    {
                      ObjectID = ID;
                    }
                    {
                      Marker = CharText;
                      Group: Widget
                        xrtGearOrientation = vertical;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Marker\n(TAB after entering symbol)";
                          }
                          {
                            text = text;
                            Group: Widget
                              translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyAnyMarker()";
                          }
                    }
              }
              {
                Buttons = Buttons : mgiDialog;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 15;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                  topWidget = mgiMarker;
                  topOffset = 5;
                    {
                      OK = DialogPush;
                      Group: Widget
                        activateCallback = "D:Unlock";
                        labelString = Process;
                    }
                    {
                      Cancel = DialogPush;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        labelString = Done;
                    }
              }
              Popups:
              {
                WhichItem = WhichItem : mgiDialog;
              }
        }
        {
          BroadcastDialog = XmQuestionDialog;
          Group: Widget
            showHelpButton = False;
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Are You Sure?";
            managed = False;
            okCallback = "D:BroadcastExec";
            okLabelString = Yes;
            cancelLabelString = No;
          Group: Control
            vipComment = "";
            vip_x = 100;
            vip_y = 85;
        }
        {
          NextRecordDialog = VerifyDialog;
          Group: Widget
            messageString = "Changes have not been saved!\nAre you sure you want to continue to the next record?";
            dialogTitle = "Continue to Next Record?";
          Group: Control
            vip_x = 100;
            vip_y = 305;
        }
        {
          VerifyValueChange = VerifyDialog;
          Group: Widget
            dialogTitle = "Change Value?";
            messageString = "Are you sure you want to change this value?";
            cancelCallback = "D:ResetModificationFlags";
          Group: Control
            vip_x = 100;
            vip_y = 910;
        }
        {
          AttributeHistoryDialog = XmFormDialog;
          Group: Widget
            dialogStyle = dialog_primary_application_modal;
            dialogTitle = "Attribute History Dialog";
            managed = False;
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 100;
            vip_y = 2010;
            vipComment = "";
              {
                AttributeHistoryTable = Table : mgiTable;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  rightOffset = 5;
                    {
                      Table = mgiTable : mgiTable;
                      Group: Widget
                        xrtTblVisibleRows = 10;
                        xrtTblNumRows = 11;
                        xrtTblNumColumns = 3;
                        xrtTblColumnLabels = "Mode,Modified By,Modification Date";
                        xrtTblCharWidthSeries = "(all 0 1)(all 1 30)(all 2 20)(all label 20)";
                        xrtTblEditableSeries = "(all all False)";
                        xrtTblTraversableSeries = "(all all False)";
                    }
                    {
                      AddRow = TablePush : mgiTable;
                      Group: Widget
                        managed = False;
                    }
                    {
                      DeleteRow = TablePush : mgiTable;
                      Group: Widget
                        managed = False;
                    }
              }
              {
                separator = XmSeparator;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_widget;
                  topWidget = AttributeHistoryTable;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 2;
                  rightOffset = 2;
              }
              {
                Buttons = XmWorkArea;
                Group: Widget
                  orientation = horizontal;
                  entryAlignment = alignment_center;
                  inTabGroup = True;
                  spacing = 25;
                  packing = pack_column;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = separator;
                  bottomAttachment = attach_form;
                  bottomOffset = 2;
                  resizable = true;
                    {
                      Done = DialogPush : mgiDialog;
                      Group: Widget
                        activateCallback = "C: TuUnmanage";
                        traversalOn = False;
                    }
              }
        }
        {
          MolecularSourceAttributeHistoryDialog = AttributeHistoryDialog;
          Group: Control
            vip_x = 100;
            vip_y = 1955;
              {
                AttributeHistoryTable = Table : mgiTable;
                    {
                      Table = mgiTable : mgiTable;
                      Group: Widget
                        xrtTblRowLabels = "Library,Organism,Strain,Tissue,Cell Line,Age,Gender,Segment Type,Vector";
                        xrtTblNumRows = 9;
                        xrtTblVisibleRows = 9;
                        userDefinedAttributes = "library:Int(Int)=\"0\"\norganism:Int(Int)=\"1\"\nstrain:Int(Int)=\"2\"\ntissue:Int(Int)=\"3\"\ncellLine:Int(Int)=\"4\"\nage:Int(Int)=\"5\"\ngender:Int(Int)=\"6\"\nsegmentType:Int(Int)=\"7\"\nvectorType:Int(Int)=\"8\"\nmodifiedBy:Int=\"1\"\nmodifiedDate:Int=\"2\"\n";
                    }
              }
        }
}


Module: mgiTable
{
      autoCuil = False;
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Wed Sep 27 09:23:47 2000";
        {
          mgiTable = XtXrtTable;
          Group: Widget
            xrtTblAllowCellResize = resize_none;
            xrtTblDisplayHorizScrollBar = dispsb_never;
            xrtTblNumRows = 6;
            xrtTblBackgroundSeries = "(all all Wheat) (label all Thistle)(all label Thistle)";
            xrtTblVisibleRows = 5;
            xrtTblMarginHeight = 4;
            userDefinedAttributes = "requiredColumns:StringTable(StringTable)\nrequired:Boolean(Boolean)=\"False\"\nsqlCmd:String(String)\nsqlFrom:String(String)\nsqlWhere:String(String)\neditMode:Int(Int)=\"0\"\naddSeqNum:Boolean(Boolean)=\"False\"\nduplicateSeqNum:Boolean(Boolean)=\"False\"\nmodified:Boolean(Boolean)=\"False\"\n";
            xrtTblEditableSeries = "(all 0 False)";
            xrtTblTraversableSeries = "(all 0 False)";
            xrtTblPixelWidthSeries = "(all 0 0)";
            xrtTblCharWidthSeries = "(all 0 1)";
            xrtTblValidateCellCallback = "D:CommitTableCellEdit";
            xrtTblTrackCursor = False;
            xrtTblFontListSeries = "(all all fixed)";
          Group: Control
            vip_x = 180;
            vip_y = 30;
        }
        {
          TableLabel = XmForm;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            nodeAccess = access_any;
          Group: Control
            vip_x = 180;
            vip_y = 85;
              {
                Table = mgiTable : mgiTable;
                Group: Widget
                  nodeAccess = access_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XtXrtLabel;
                      Group: Widget
                        xrtLblBorderType = border_none;
                        marginHeight = 0;
                      Group: Constraint
                        xrtTblLocation = location_top;
                    }
              }
              {
                AddRow = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:AddTableRow";
                  labelString = "Add Row";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Table;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Table;
              }
              {
                DeleteRow = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:DeleteLogicalTableRow";
                  labelString = "Delete Row";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AddRow;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AddRow;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          mgiAccessionTable = Table : mgiTable;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 180;
            vip_y = 140;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblCharWidthSeries = "(all 0 1) (all 3 15) (all 4 10)";
                  xrtTblEditableSeries = "(all 0 False) (all 3 False)";
                  xrtTblNumColumns = 5;
                  xrtTblPixelWidthSeries = "(all 0-2 0)";
                  xrtTblTraversableSeries = "(all 0 False) (all 3 False)";
                  xrtTblVisibleRows = 2;
                  userDefinedAttributes = "logicalKey:Int(Int)=\"1\"\naccKey:Int(Int)=\"2\"\naccName:Int(Int)=\"3\"\naccID:Int(Int)=\"4\"\nshowMGI:Boolean=\"True\"\n";
                  xrtTblEnterCellCallback = "D:SetAccSourceMenu";
              }
              {
                Add : AddRow = TablePush;
                Group: Widget
                  labelString = Add;
                  activateCallback = "D:VerifyAccAdd";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AccSourceMenu;
                  leftOffset = 2;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AccSourceMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Delete : DeleteRow = TablePush;
                Group: Widget
                  labelString = Delete;
                  activateCallback = "D:VerifyAccDelete";
                Group: Constraint
                  leftWidget = Add;
                  topWidget = Add;
              }
              {
                AccSourceMenu = AccSourceMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftWidget = Table;
                  topWidget = Table;
                  topOffset = 5;
              }
        }
        {
          DataSetForm = XmForm;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 60;
            vip_y = 140;
              {
                Table = mgiTable : mgiTable;
                Group: Widget
                  xrtTblNumColumns = 3;
                  xrtTblColumnLabels = "Mode,Accession #,Data Set";
                  xrtTblCharWidthSeries = "(all 0 1)(all 1-2 15)";
                  userDefinedAttributes = "accID:Int=\"1\"\ndataSet:Int=\"2\"\n";
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XtXrtLabel;
                      Group: Widget
                        xrtLblBorderType = border_none;
                        marginHeight = 0;
                        labelString = "Data Sets";
                      Group: Constraint
                        xrtTblLocation = location_top;
                    }
              }
              {
                Retrieve = TablePush : mgiTable;
                Group: Widget
                  labelString = "Retrieve Info";
                  activateCallback = "D:SelectDataSets";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Table;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Table;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Records = XmLabel;
                Group: Widget
                  labelString = "0 Records";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = Retrieve;
                  leftOffset = 10;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Retrieve;
                  topOffset = 5;
              }
        }
        {
          TablePush = XmPushButton;
          Group: Widget
            traversalOn = False;
          Group: Control
            vip_x = 60;
            vip_y = 30;
        }
        {
          Table = XmForm;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            nodeAccess = access_any;
          Group: Control
            vip_x = 60;
            vip_y = 85;
              {
                Table = mgiTable : mgiTable;
                Group: Widget
                  nodeAccess = access_any;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_form;
                  topAttachment = attach_form;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                AddRow = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:AddTableRow";
                  labelString = "Add Row";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Table;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Table;
                  topOffset = 2;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                DeleteRow = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:DeleteLogicalTableRow";
                  labelString = "Delete Row";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AddRow;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AddRow;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          OrderedTable = Table;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
          Group: Control
            vip_x = 180;
            vip_y = 195;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblPixelWidthSeries = "(all 0-1 0)";
                  xrtTblEditableSeries = "(all 0-2 False)";
                  xrtTblTraversableSeries = "(all 0-2 False)";
                  xrtTblNumColumns = 3;
                  xrtTblColumnLabels = "Mode,Current Order,#";
                  userDefinedAttributes = "currentSeqNum:Int(Int)=\"1\"\nseqNum:Int(Int)=\"2\"\nsaveTraversableSeries:String(String)=\"(all 0-2 False)\"\nsaveEditableSeries:String(String)=\"(all 0-2 False)\"\n";
                  xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)";
                Group: User
                  addSeqNum = True;
              }
              {
                AddRow = TablePush;
              }
              {
                DeleteRow = TablePush;
              }
              {
                InsertRow = TablePush : mgiTable;
                Group: Widget
                  activateCallback = "D:InsertTableRow";
                  labelString = "Insert Row";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = DeleteRow;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = DeleteRow;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                EditOrder = toggle : mgiDataTypes;
                Group: Widget
                  labelString = "Edit Order";
                  valueChangedCallback = "D:EditTableOrder,\nD:SetModify";
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = InsertRow;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = InsertRow;
              }
        }
        {
          Statistics = OrderedTable;
          Group: Control
            vip_x = 180;
            vip_y = 250;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 4 3)(all 5-6 20)(all 7-10 6)";
                  xrtTblColumnLabels = "Mode,Current Order,Marker1 key,Marker 2 key,#,Marker 1,Marker 2,Recomb,Total,PcntRe,Stderr";
                  xrtTblEditableSeries = "(all 0-4 False)";
                  xrtTblTraversableSeries = "(all 0-4 False)";
                  xrtTblMaxLengthSeries = "(all 5-6 25)";
                  xrtTblNumColumns = 11;
                  xrtTblPixelWidthSeries = "(all 0-3 0)";
                  xrtTblValidateCellCallback = "D:VerifyMarker,\nD:CommitTableCellEdit";
                  userDefinedAttributes = "markerKey:Int=\"2\"\nmarkerSymbol:Int=\"5\"\nmarkerChr:Int=\"-1\"\nmarkerColumns:Int=\"2\"\nrecomb:Int=\"7\"\ntotal:Int=\"8\"\npcntre:Int=\"9\"\nstnderr:Int=\"10\"\n";
                  xrtTblVisibleRows = 3;
                Group: User
                  seqNum = 4;
                  saveTraversableSeries = "(all 0-4 False)";
                  saveEditableSeries = "(all 0-4 False)";
              }
        }
        {
          OrderedTableLabel = OrderedTable;
          Group: Control
            vip_x = 60;
            vip_y = 195;
              {
                Table = mgiTable;
                    {
                      label = XtXrtLabel;
                      Group: Widget
                        marginHeight = 0;
                        xrtLblBorderType = border_none;
                      Group: Constraint
                        xrtTblLocation = location_top;
                    }
              }
        }
        {
          ReferenceTable = Table : mgiTable;
          Group: Control
            vip_x = 60;
            vip_y = 250;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblMaxLengthSeries = "(all 4 255)";
                  xrtTblColumnLabels = "Mode,Current Key,New Key,J#,Citation";
                  xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 60)";
                  xrtTblEditableSeries = "(all 0-2 False)";
                  xrtTblPixelWidthSeries = "(all 0-2 0)";
                  xrtTblTraversableSeries = "(all 0-2 False)";
                  xrtTblVisibleRows = 3;
                  xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                  userDefinedAttributes = "refsCurrentKey:Int(Int)=\"1\"\nrefsKey:Int(Int)=\"2\"\njnum:Int(Int)=\"3\"\ncitation:Int(Int)=\"4\"\n";
              }
        }
        {
          RefDBSStatus = Table;
          Group: Control
            vip_x = 180;
            vip_y = 305;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblNumColumns = 5;
                  xrtTblColumnLabels = "Mode,Selected,Used,Not Used,Never Used";
                  xrtTblCharWidthSeries = "(all 0 1)(all 1 8)(all 2 4)(all 3 8)(all 4 10)";
                  xrtTblSelectCallback = "D:VerifyDBSStatus";
                  xrtTblSelectedBackground = None;
                  xrtTblSelectedForeground = None;
                  xrtTblSelectionPolicy = select_single;
                  xrtTblEditableSeries = "(all all False)(all 1 True)(all 4 True)";
                  xrtTblTraversableSeries = "(all all False)";
                  userDefinedAttributes = "selected:Int(Int)=\"1\"\nused:Int(Int)=\"2\"\nnotUsed:Int(Int)=\"3\"\nneverUsed:Int(Int)=\"4\"\ndataSets:String(String)\ntableIDs:String(String)\nbeginX:Int\nendX:Int\n";
              }
              {
                AddRow = TablePush;
                Group: Widget
                  managed = False;
              }
              {
                DeleteRow = TablePush;
                Group: Widget
                  managed = False;
              }
        }
        {
          RefDBSNonStatus = Table;
          Group: Control
            vip_x = 60;
            vip_y = 305;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblNumColumns = 3;
                  xrtTblColumnLabels = "Mode,Selected,Never Used";
                  xrtTblCharWidthSeries = "(all label 20)(all 0 1)(all 1 8)(all 2 10)";
                  xrtTblSelectCallback = "D:SetCellToX";
                  xrtTblSelectedBackground = None;
                  xrtTblSelectedForeground = None;
                  xrtTblSelectionPolicy = select_single;
                  xrtTblTraversableSeries = "(all all False)";
                  userDefinedAttributes = "selected:Int(Int)=\"1\"\nneverUsed:Int(Int)=\"2\"\ndataSets:String(String)\nbeginX:Int=\"1\"\nendX:Int=\"2\"\n";
              }
              {
                AddRow = TablePush;
                Group: Widget
                  managed = False;
              }
              {
                DeleteRow = TablePush;
                Group: Widget
                  managed = False;
              }
        }
        {
          AccessionReference = mgiAccessionTable : mgiTable;
          Group: Control
            vip_x = 60;
            vip_y = 360;
              {
                Table = mgiTable;
                Group: Widget
                  xrtTblNumColumns = 9;
                  xrtTblColumnLabels = "Mode,Logical Key,Acc Key,Ref Current Key,Ref Key,Acc Name,Acc ID,J#,Citation";
                  xrtTblCharWidthSeries = "(all 0 1) (all 5 15) (all 6 10)(all 7 10)(all 8 60)";
                  xrtTblEditableSeries = "(all 0 False) (all 5 False)";
                  xrtTblPixelWidthSeries = "(all 0-4 0)";
                  xrtTblTraversableSeries = "(all 0 False) (all 5 False)";
                  userDefinedAttributes = "refsCurrentKey:Int=\"3\"\nrefsKey:Int=\"4\"\njnum:Int=\"7\"\ncitation:Int=\"8\"\n";
                  xrtTblVisibleRows = 5;
                  xrtTblValidateCellCallback = "D:VerifyReference,\nD:CommitTableCellEdit";
                Group: User
                  accName = 5;
                  accID = 6;
                  requiredColumns = "4\n6";
              }
        }
}


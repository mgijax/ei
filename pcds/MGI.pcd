Module: MGI
{
      autoCuil = false;
      dDialogFile = "gxd_dlg.d";
      release = "TeleUSE version 4.0.0 rev 1 build 0001 / RedHat Enterprise Linux 5.0 AMD64";
      lastWritten = "Wed Mar 15 12:47:43 2017";
      copy = false;
      inCreateMenu = true;
        {
          Login = ApplicationShell;
          Group: Widget
            userDefinedAttributes = "recordModified:Boolean(Boolean)=\"False\"\n";
          Group: Control
            vip_x = 70;
            vip_y = 140;
              {
                Login = XmFrame;
                    {
                      LoginForm = XmForm;
                      Group: Widget
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        defaultButton = Login;
                          {
                            LoginServer = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_form;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topOffset = 5;
                              leftOffset = 5;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Server;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    traversalOn = False;
                                }
                          }
                          {
                            LoginDB = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = LoginServer;
                              rightAttachment = attach_form;
                              rightOffset = 5;
                              topAttachment = attach_opposite_widget;
                              topWidget = LoginServer;
                              bottomAttachment = attach_none;
                              resizable = true;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Database;
                                }
                                {
                                  text = text : mgiDataTypes;
                                  Group: Widget
                                    traversalOn = False;
                                }
                          }
                          {
                            separator = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = LoginServer;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 2;
                          }
                          {
                            separator1 = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = LoginServer;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = LoginServer;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Login = XmPushButton;
                            Group: Widget
                              activateCallback = "D:Login";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = separator1;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separator1;
                              topOffset = 2;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Cancel = XmPushButton;
                            Group: Widget
                              activateCallback = "D:ExitApplication";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Login;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Login;
                              bottomAttachment = attach_form;
                              bottomOffset = 2;
                              resizable = true;
                              leftOffset = 5;
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
                Group: Widget
                  messageString = "Initializing...";
                  dialogTitle = Initialization;
              }
        }
        {
          Module = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "allowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nhomeWidget:Widget\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String(String)\nallowSelect:Boolean(Boolean)=\"True\"\n";
            closeWindowCallback = "D:Exit";
            createCallback = "D:SetTitle";
          Group: Control
            vip_x = 70;
            vip_y = 30;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            EditForm = EditForm : MGI;
                          }
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = Edit;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = Edit;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          EditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:Widget(Widget)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
          Group: Control
            vip_x = 70;
            vip_y = 250;
            vipComment = "XmForm is a container widget with no input semantics. Constraints are placed on its children to define attachments for each of the child's four sides. These attachments can be to the XmForm, to another child, to a relative position or to the initial position of the child. The attachments determine the layout behavior of XmForm when resizing occurs.";
              {
                ID = ID : mgiDataTypes;
              }
        }
        {
          Module1 = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "homeWidget:Widget\nallowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String(String)\nallowSelect:Boolean(Boolean)=\"True\"\n";
            closeWindowCallback = "D:Exit";
            createCallback = "D:SetTitle";
          Group: Control
            vip_x = 70;
            vip_y = 85;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      EditForm = EditForm : MGI;
                      Group: Widget
                        width = 560;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = EditForm;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = EditForm;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
              }
        }
        {
          SourceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            userDefinedAttributes = "sqlFrom:String\nsqlWhere:String\n";
          Group: Control
            vip_x = 70;
            vip_y = 305;
          Group: User
            homeWidget = Library;
              {
                SourceID : ID = ID : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_none;
                  rightAttachment = attach_form;
                  rightOffset = 5;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Library = CharText : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Library;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Library;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Library;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                SourceSegmentTypeFrame = SegmentTypeFrame : mgiOption;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Library;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
                    {
                      SourceSegmentTypeMenu : SegmentTypeMenu = XmOptionMenu;
                      Group: Widget
                        subMenuId = SourceSegmentTypePulldown;
                      Group: User
                        required = False;
                    }
                    Popups:
                    {
                      SourceSegmentTypePulldown : SegmentTypePulldown = OptionPulldown;
                    }
              }
              {
                SourceVectorTypeFrame = VectorTypeFrame : mgiOption;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SourceSegmentTypeFrame;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = SourceSegmentTypeFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      SourceVectorTypeMenu : VectorTypeMenu = XmOptionMenu;
                      Group: Widget
                        subMenuId = SourceVectorTypePulldown;
                      Group: User
                        required = False;
                    }
                    Popups:
                    {
                      SourceVectorTypePulldown : VectorTypePulldown = OptionPulldown;
                    }
              }
              {
                ProbeOrganismFrame = ProbeOrganismFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = ProbeOrganismFrame;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ProbeOrganismFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
              }
              {
                Tissue = Tissue : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Strain;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Strain;
              }
              {
                Description = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Tissue;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Tissue;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Tissue\nDescription";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 50;
                    }
              }
              {
                CellLine = mgiVerify : mgiDataTypes;
                Group: Widget
                  userDefinedAttributes = "vocabKey:Int(Int)=\"18\"\n";
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Description;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Description;
                  bottomAttachment = attach_none;
                  resizable = true;
                Group: User
                  verifyKey = CellLineID;
                  verifyTable = 333;
                    {
                      Verify = CharText : mgiDataTypes;
                          {
                            label = XmLabel;
                            Group: Widget
                              labelString = "Cell Line";
                          }
                          {
                            text = text;
                            Group: Widget
                              columns = 50;
                          }
                    }
                    {
                      CellLineID : VerifyID = ID : mgiDataTypes;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              defaultValue = 316335;
                          }
                    }
              }
              {
                AgeFrame = AgeFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellLine;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellLine;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Age = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AgeFrame;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AgeFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      label = XmLabel;
                      Group: Widget
                        managed = False;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                GenderFrame = GenderFrame : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = AgeFrame;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = AgeFrame;
                  topOffset = 5;
                  bottomOffset = 5;
              }
              {
                mgiNoteForm = mgiNoteForm : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_none;
                  rightAttachment = attach_form;
                  rightOffset = 50;
                  topAttachment = attach_opposite_widget;
                  topWidget = GenderFrame;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
        }
        {
          ControlledVocabModule = Module;
          Group: Widget
            title = "MGI Controlled Vocabulary";
          Group: Control
            vip_x = 70;
            vip_y = 415;
          Group: User
            homeWidget = Name;
            activateButtonName = ControlledVocab;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  ControlledVocabFrame = ControlledVocabFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ControlledVocabPulldown = OptionPulldown;
                                            {
                                              MappingAssay = ControlledVocabToggle;
                                            }
                                            {
                                              EventReason = ControlledVocabToggle;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ControlledVocabFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  RNAAssayFrame = RNAAssayFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  GelAssayFrame = GelAssayFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RNAAssayFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RNAAssayFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AssayAbbrev = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = GelAssayFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Assay Abbreviation (for Web display)";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 2;
                                          maxLength = 2;
                                      }
                                }
                                {
                                  AllowOnlyOneFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AssayAbbrev;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                    vipComment = "";
                                      {
                                        AllowOnlyOneMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = AllowOnlyOnePulldown;
                                          labelString = "Allow Only One";
                                        Group: User
                                          defaultOption = Yes;
                                      }
                                      Popups:
                                      {
                                        AllowOnlyOnePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  PrivateFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AllowOnlyOneFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                    vipComment = "";
                                      {
                                        PrivateMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = PrivatePulldown;
                                          labelString = Private;
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        PrivatePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  MGITypeFrame = MGITypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = PrivateFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        MGITypeMenu = XmOptionMenu;
                                        Group: User
                                          required = False;
                                      }
                                      Popups:
                                      {
                                        MGITypePulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              NotSpecified = SearchAll : mgiOption;
                                              Group: Widget
                                                labelString = "Not Specified";
                                              Group: User
                                                defaultValue = NULL;
                                                searchValue = NULL;
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Application = TopLevelShell;
          Group: Widget
            createCallback = "D:SetServer";
            destroyCallback = "D:ExitApplication";
            userDefinedAttributes = "initDialog:StringTable\ndbInfo:String(String)\n";
          Group: Control
            vip_x = 70;
            vip_y = 195;
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
              }
        }
        {
          SubEditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:Widget(Widget)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
          Group: Control
            vip_x = 70;
            vip_y = 360;
            vipComment = "XmForm is a container widget with no input semantics. Constraints are placed on its children to define attachments for each of the child's four sides. These attachments can be to the XmForm, to another child, to a relative position or to the initial position of the child. The attachments determine the layout behavior of XmForm when resizing occurs.";
        }
        {
          GenotypeModule = Module : MGI;
          Group: Widget
            closeWindowCallback = "D:GenotypeExit";
          Group: Control
            vip_x = 70;
            vip_y = 470;
          Group: User
            homeWidget = Verify;
            activateButtonName = GenotypePush;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:GenotypeExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:SearchGenotype,\nD:GoHome";
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                            Group: Widget
                              managed = True;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown : mgiMenu;
                                      {
                                        MPVocAnnot = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"MPVocAnnot\")";
                                          labelString = "Mammalian Phenotype Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1002\"\n";
                                          managed = True;
                                      }
                                      {
                                        DOVocAnnot = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"DOVocAnnot\")";
                                          labelString = "DO Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1002\"\n";
                                          managed = True;
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          managed = True;
                                      }
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                    topOffset = 5;
                                    leftOffset = 5;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                                translations = "#override
 Shift<Key>Tab: prev-tab-group()
<Key>Tab:  VerifyItem()";
                                            }
                                      }
                                }
                                {
                                  AllelePair = OrderedTableLabel : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                    inTabGroup = True;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Strain;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 19;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Key,M Key, A1 Key,A2 Key,State Key,Comp Key,Mutant1 Key,Mutant2 Key,Chr,Marker,Allele1,Allele 2,State,Compound,Mutant 1,Mutant 2";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 11 3)(all 12 30)(all 13-14 30)(all 15 20)(all 16 15)(all 17-18 15)";
                                          xrtTblEditableSeries = "(all 0-10 0)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-10 0)";
                                          xrtTblTraversableSeries = "(all 0-11 0)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyAllele,\nD:VerifyAlleleMutantCellLine,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"4\"\nmarkerSymbol:Int(Int)=\"12\"\nmarkerChr:Int(Int)=\"11\"\nalleleSymbol:StringTable(StringTable)\nalleleKey:StringTable(StringTable)\npairKey:Int(Int)=\"3\"\nstate:Int(Int)=\"15\"\nmarkerColumns:Int(Int)=\"1\"\nstateKey:Int(Int)=\"7\"\ncompoundKey:Int(Int)=\"8\"\ncompound:Int(Int)=\"16\"\nmutantCellLine:StringTable(StringTable)\nmutantCellLineKey:StringTable(StringTable)\n";
                                          inTabGroup = True;
                                        Group: User
                                          alleleSymbol = "13\n14";
                                          alleleKey = "5\n6";
                                          requiredColumns = 7;
                                          saveEditableSeries = "(all 0-10 0)";
                                          saveTraversableSeries = "(all 0-11 0)";
                                          mutantCellLine = "17\n18";
                                          mutantCellLineKey = "9\n10";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Allele Pairs";
                                            }
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                      }
                                      {
                                        AllelePairStateFrame = AllelePairStateFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_widget;
                                          rightWidget = AlleleCompoundFrame;
                                          rightOffset = 2;
                                          topAttachment = attach_opposite_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topWidget = AlleleCompoundFrame;
                                            Popups:
                                            {
                                              AllelePairStatePulldown = OptionPulldown;
                                              Group: User
                                                tableForm = AllelePair;
                                                tableOption = 15;
                                                tableOptionKey = 7;
                                            }
                                      }
                                      {
                                        AlleleCompoundFrame = AlleleCompoundFrame : mgiOption;
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                            Popups:
                                            {
                                              AlleleCompoundPulldown = OptionPulldown;
                                              Group: User
                                                tableForm = AllelePair;
                                                tableOptionKey = 8;
                                                tableOption = 16;
                                            }
                                      }
                                }
                                {
                                  ConditionalFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AllelePair;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AllelePair;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = No;
                                      {
                                        ConditionalMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = ConditionalPulldown;
                                          labelString = "Conditionally Targeted";
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        ConditionalPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  GenotypeExistsAsFrame = GenotypeExistsAsFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = ConditionalFrame;
                                    leftOffset = 25;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = ConditionalFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CombinationNote1 = Notes : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ConditionalFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ConditionalFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Allele Detail Display";
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          rows = 5;
                                          columns = 70;
                                          editable = False;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ConditionalFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = CombinationNote1;
                                    topOffset = 20;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                          xrtTblNumColumns = 6;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 40)(all 5 20)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,J#,Citation/Strain/HT Sample,Data Set";
                                          userDefinedAttributes = "dataSet:Int=\"5\"\n";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Retrieve = XmPushButtonGadget;
                                        Group: Widget
                                          labelString = "Retrieve Records";
                                          activateCallback = "D:SelectReferences";
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topOffset = 5;
                                      }
                                      {
                                        Records = XmLabel;
                                        Group: Widget
                                          labelString = "0 Records";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = Retrieve;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topWidget = Retrieve;
                                          leftOffset = 5;
                                      }
                                }
                                {
                                  ImagePane = ImagePane : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Reference;
                                    leftOffset = 10;
                                    rightAttachment = attach_form;
                                    rightOffset = 5;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Reference;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = "-25";
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                        Group: User
                                          mgiTypeKey = 12;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = CombinationNote1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = CombinationNote1;
                                    leftOffset = 10;
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        rightOffset = 2;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:SearchGenotype,\nD:GoHome";
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Search;
                                    topWidget = Search;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Clear;
                                    topWidget = Clear;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Next;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Next;
                                    rightOffset = 5;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Bottom;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Bottom;
                                    rightOffset = 5;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RecordCount;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_form;
                                    rightOffset = 5;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_form;
                                    bottomOffset = 5;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RecordCount;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 2;
                                          xrtTblNumRows = 2;
                                      }
                                      {
                                        Add = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Delete = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame : mgiOption;
                                        Group: Widget
                                          managed = False;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = MGI;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MRK = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    J = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EntrezGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCBIGeneModelEvidence = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ATCC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMAGE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUREXPRESS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ARC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CRL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMSequenceType = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUMMCR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RuleyHECellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IshidaYCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NorCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Lexicon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMAP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AdultMouseAntatomy = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RRID = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                            }
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  GenotypeEditClipboard = GenotypeEditClipboard : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                      }
                                      {
                                        Add = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:GenotypeClipboardAdd";
                                      }
                                }
                          }
                    }
              }
        }
        {
          SimpleVocabModule = Module;
          Group: Control
            vip_x = 70;
            vip_y = 580;
          Group: User
            activateButtonName = SimpleVocab;
            homeWidget = Name;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Vocabulary Name";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  ACCLogicalFrame = ACCLogicalFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Name;
                                    topOffset = 5;
                                      Popups:
                                      {
                                        ACCLogicalPulldown = OptionPulldown;
                                        Group: User
                                          sql = "select _LogicalDB_key, name from ACC_LogicalDB\nwhere _LogicalDB_key in (-1, 1,15)\norder by name";
                                      }
                                }
                                {
                                  ACCPrivateFrame = YesNoFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ACCLogicalFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ACCLogicalFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ACCPrivateMenu : YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          subMenuId = ACCPrivatePulldown;
                                          labelString = "Accession IDs Private?";
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        ACCPrivatePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ACCPrivateFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Term = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 10;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Term Key,Obsolete Key,Acc ID,Term,Abbreviation,Definition,Obsolete";
                                          xrtTblEditableSeries = "(all 0-5 0)";
                                          xrtTblNumRows = 25;
                                          xrtTblVisibleRows = 20;
                                          xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-4 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 10)(all 4 1)(all 5 20)(all 6 50)(all 7 25)(all 8 25)(all 9 8)";
                                          userDefinedAttributes = "termKey:Int(Int)=\"3\"\nterm:Int(Int)=\"6\"\nabbreviation:Int(Int)=\"7\"\ndefinition:Int(Int)=\"8\"\nmgiID:Int(Int)=\"5\"\nisObsolete:Int(Int)=\"9\"\nobsoleteKey:Int=\"4\"\n";
                                          xrtTblTraversableSeries = "(all 0-5 0)";
                                          xrtTblEnterCellCallback = "D:LoadSimpleVocabSyn,\nD:SetOptions";
                                          xrtTblAllowCellResize = resize_all;
                                        Group: User
                                          saveEditableSeries = "(all 0-5 0)";
                                          saveTraversableSeries = "(all 0-5 0)";
                                          requiredColumns = 6;
                                      }
                                }
                                {
                                  SynonymTypeTable = SynonymTypeTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Term;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    topWidget = Term;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-3 0)(all 8-9 0)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        SynonymTypeFrame = SynonymTypeFrame : mgiOption;
                                            Popups:
                                            {
                                              SynonymTypePulldown = OptionPulldown : mgiOption;
                                              Group: User
                                                sql = "select _SynonymType_key, synonymType from MGI_SynonymType_GOTerm_View where allowOnlyOne = 0 ";
                                            }
                                      }
                                      {
                                        Save = ControlPush : mgiControl;
                                        Group: Widget
                                          labelString = "Save Synonyms";
                                          activateCallback = "D:ModifySimpleVocabSyn";
                                        Group: Constraint
                                          leftAttachment = attach_none;
                                          rightAttachment = attach_opposite_widget;
                                          rightWidget = Table;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          topOffset = 2;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    sensitive = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: Widget
                                    labelString = Definition;
                                  Group: User
                                    targetWidget = Term;
                                    targetColumn = 8;
                                }
                                {
                                  YesNoFrame = YesNoFrame : mgiOption;
                                  Group: User
                                    defaultOption = No;
                                      {
                                        YesNoMenu = XmOptionMenu;
                                        Group: Widget
                                          labelString = "Obsolete?";
                                        Group: User
                                          defaultOption = No;
                                      }
                                      Popups:
                                      {
                                        YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = Term;
                                          tableOption = 9;
                                          tableOptionKey = 4;
                                      }
                                }
                          }
                    }
              }
        }
        {
          TranslationModule = Module : MGI;
          Group: Widget
            width = 1050;
            height = 1000;
          Group: Control
            vip_x = 70;
            vip_y = 635;
          Group: User
            activateButtonName = Translation;
            homeWidget = Term;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  TranslationTypeFrame = TranslationTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  MGITypeFrame = MGITypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = TranslationTypeFrame;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = TranslationTypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        MGITypePulldown = OptionPulldown;
                                        Group: User
                                          childTemplate = MGITypeToggle;
                                      }
                                }
                                {
                                  SortFrame = SortFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MGITypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      Popups:
                                      {
                                        SortMenuPulldown = OptionPulldown : mgiOption;
                                            {
                                              MGITerm = SortToggle : mgiOption;
                                              Group: Widget
                                                labelString = "MGI Term (good name)";
                                                valueChangedCallback = "D:SortTable,\nD:SetModify";
                                              Group: User
                                                columnValue = 6;
                                            }
                                            {
                                              NonMGITerm = SortToggle : mgiOption;
                                              Group: Widget
                                                labelString = "Non-MGI Term (bad name)";
                                                valueChangedCallback = "D:SortTable,\nD:SetModify";
                                              Group: User
                                                columnValue = 5;
                                            }
                                      }
                                }
                                {
                                  Compression = CharText : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MGITypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MGITypeFrame;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 20;
                                    topOffset = "-5";
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Compression Chars";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  Translation = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = TranslationTypeFrame;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = FindTerm2;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 5;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 9;
                                          xrtTblNumRows = 1000;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Key,Object Key,Non-MGI Term,MGI Term,Acc ID,Modified By,Modified Date";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 2 4)(all 5-6 50)(all 7 15)(all 8 11)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)(all 3-4 0)";
                                          xrtTblEditableSeries = "(all 0-4 0)";
                                          xrtTblTraversableSeries = "(all 0-4 0)";
                                          xrtTblVisibleRows = 30;
                                          userDefinedAttributes = "transKey:Int(Int)=\"3\"\nobjectKey:Int(Int)=\"4\"\nnonmgiTerm:Int(Int)=\"5\"\nmgiTerm:Int(Int)=\"6\"\nmodifiedBy:Int(Int)=\"8\"\nmodifiedDate:Int(Int)=\"9\"\naccID:Int(Int)=\"7\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyTransMGITermAccID,\nD:CommitTableCellEdit";
                                        Group: User
                                          saveEditableSeries = "(all 0-4 0)";
                                          saveTraversableSeries = "(all 0-4 0)";
                                      }
                                      {
                                        AddRow = TablePush;
                                      }
                                      {
                                        DeleteRow = TablePush;
                                      }
                                      {
                                        InsertRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditOrder = toggle : mgiDataTypes;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  FindTerm1 = push : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Find Non-MGI Term";
                                    activateCallback = "D:FindTerm(column = 5),\nD:GoHome";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = TranslationTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = TranslationTypeFrame;
                                    topOffset = 5;
                                }
                                {
                                  FindTerm2 = push : mgiDataTypes;
                                  Group: Widget
                                    labelString = "Find MGI Term";
                                    activateCallback = "D:FindTerm (column = 6),\nD:GoHome";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FindTerm1;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = FindTerm1;
                                }
                                {
                                  Term = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FindTerm1;
                                    leftOffset = 10;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FindTerm1;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 3;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = " ";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 100;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    rightOffset = 2;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 40;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          UserRoleModule = Module;
          Group: Control
            vip_x = 70;
            vip_y = 690;
          Group: User
            homeWidget = Tasks;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  UserRoleFrame = UserRoleFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Tasks = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = UserRoleFrame;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                    leftOffset = 10;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 2;
                                          xrtTblColumnLabels = "Mode,Task";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 100)";
                                          userDefinedAttributes = "task:Int=\"1\"\n";
                                          xrtTblNumRows = 2;
                                          xrtTblVisibleRows = 10;
                                      }
                                }
                                {
                                  Users = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Tasks;
                                    topOffset = 10;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    rightOffset = 5;
                                    bottomOffset = 5;
                                    leftOffset = 10;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 4;
                                          xrtTblColumnLabels = "Mode,Key,Key,User";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 10)(all 3 30)";
                                          xrtTblPixelWidthSeries = "(all 0-2 0)";
                                          xrtTblTraversableSeries = "(all 0-2 0)";
                                          userDefinedAttributes = "userRoleKey:Int(Int)=\"1\"\nuserKey:Int(Int)=\"2\"\nuserLogin:Int(Int)=\"3\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyUser\nD:CommitTableCellEdit";
                                          xrtTblNumRows = 11;
                                          xrtTblVisibleRows = 10;
                                          xrtTblEditableSeries = "(all 0-2 0)";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Modify,\nD:GoHome";
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 2;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RecordCount;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Widget
                        managed = False;
                    }
              }
        }
        {
          ImageModule = Module : MGI;
          Group: Control
            vip_x = 70;
            vip_y = 525;
          Group: User
            homeWidget = Jnum;
            activateButtonName = Image;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                          {
                            File = File;
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:ClearImage";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                            Group: User
                              homeWidget = Jnum;
                                {
                                  ID = ID;
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        Jnum = Jnum : mgiDataTypes;
                                      }
                                      {
                                        Citation = Citation : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 50;
                                                inTabGroup = False;
                                            }
                                      }
                                }
                                {
                                  FigureLabel = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Figure Label";
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  MGITypeFrame = MGITypeFrame : mgiOption;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FigureLabel;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FigureLabel;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 2;
                                      {
                                        MGITypeMenu = XmOptionMenu;
                                        Group: Widget
                                          labelString = "Image used in\n(search only)";
                                          managed = False;
                                        Group: User
                                          required = False;
                                      }
                                      Popups:
                                      {
                                        MGITypePulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              Expression = OptionToggle : mgiOption;
                                              Group: Widget
                                                labelString = Expression;
                                              Group: User
                                                defaultValue = 8;
                                                searchValue = 8;
                                            }
                                            {
                                              Alleles = OptionToggle : mgiOption;
                                              Group: Widget
                                                labelString = "Alleles & Phenotypes";
                                              Group: User
                                                defaultValue = 11;
                                                searchValue = 11;
                                            }
                                      }
                                }
                                {
                                  ImageClassFrame = ImageClassFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = FigureLabel;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = FigureLabel;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                    leftOffset = 5;
                                    topOffset = 5;
                                }
                                {
                                  separatorGadget3 = XmSeparatorGadget;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = FigureLabel;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = FigureLabel;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                }
                                {
                                  Caption = Notes : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = separatorGadget3;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separatorGadget3;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                  Group: User
                                    noteTypeKey = 1024;
                                    mgiTypeKey = 9;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Caption;
                                      }
                                      {
                                        text = scrolledText;
                                        Group: Widget
                                          columns = 100;
                                          rows = 10;
                                          scrollVertical = False;
                                      }
                                }
                                {
                                  captionButtons = XmRowColumn;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Caption;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Caption;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        AlleleSymbol = AppendNotePush : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Allele Symbol Tag";
                                        Group: User
                                          note = "\\AlleleSymbol(|0)";
                                          noteWidget = Caption;
                                      }
                                }
                                {
                                  separatorGadget = XmSeparatorGadget;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = captionButtons;
                                    rightAttachment = attach_form;
                                    rightOffset = 5;
                                    topAttachment = attach_widget;
                                    topWidget = captionButtons;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Copyright = SingleNote : mgiDataTypes;
                                  Group: Widget
                                    xrtGearOrientation = vertical;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = separatorGadget;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = separatorGadget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                  Group: User
                                    noteTypeKey = 1023;
                                    mgiTypeKey = 9;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Copyright;
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          rows = 3;
                                          columns = 100;
                                          scrollHorizontal = False;
                                          scrollVertical = False;
                                      }
                                }
                                {
                                  ImagePane = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = Copyright;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                    rightOffset = 10;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          xrtTblCharWidthSeries = "(all 0 1) (all 2 25) (all 3 20)";
                                          xrtTblColumnLabels = "Mode,IP Key,Label,X-Y-Width-Height";
                                          userDefinedAttributes = "imagePaneKey:Int(Int)=\"1\"\npaneLabel:Int(Int)=\"2\"\nxywidthheight:Int(Int)=\"3\"\n";
                                          xrtTblEditableSeries = "(all 0 0)";
                                          xrtTblNumColumns = 4;
                                          xrtTblNumRows = 16;
                                          xrtTblVisibleRows = 7;
                                          xrtTblTraversableSeries = "(all 0 0) (all 3 0)";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Image Panes";
                                            }
                                      }
                                }
                                {
                                  separatorGadget1 = XmSeparatorGadget;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_widget;
                                    topWidget = Copyright;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = mgiCitation;
                                    rightWidget = ImagePane;
                                    rightOffset = 5;
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = separatorGadget1;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  separatorGadget2 = XmSeparatorGadget;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_widget;
                                    topWidget = mgiNoteForm;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = ImagePane;
                                    rightOffset = 5;
                                }
                                {
                                  ImageTypeFrame = ImageTypeFrame : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = mgiNoteForm;
                                    topWidget = separatorGadget2;
                                      {
                                        ImageTypeMenu = XmOptionMenu;
                                        Group: User
                                          required = False;
                                      }
                                }
                                {
                                  ThumbnailImage = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ImageTypeFrame;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ImageTypeFrame;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: Control
                                    vipComment = "";
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = "MGI Accession ID\nof Thumbnail Image";
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                editable = False;
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  xDim = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ThumbnailImage;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ThumbnailImage;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "X Dimension";
                                      }
                                }
                                {
                                  yDim = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = xDim;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = xDim;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Y Dimension";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:ClearImage";
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Modify;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Modify;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 2;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Add;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Add;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Next;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Next;
                                    rightOffset = 5;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Bottom;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Bottom;
                                    rightOffset = 5;
                                }
                                {
                                  Bottom = ControlArrow : mgiControl;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Search;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblDisplayVertScrollBar = dispsb_never;
                                          xrtTblNumRows = 2;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceFrame = AccSourceFrame;
                                            {
                                              AccSourceMenu = XmOptionMenu;
                                              Group: User
                                                defaultOption = MGIImage;
                                            }
                                            Popups:
                                            {
                                              AccSourcePulldown = OptionPulldown;
                                                  {
                                                    MGI = AccToggle;
                                                  }
                                                  {
                                                    MRK = AccToggle;
                                                  }
                                                  {
                                                    J = AccToggle;
                                                  }
                                                  {
                                                    PubMed = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    DXDOI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GOREF = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NSequence = AccToggle;
                                                  }
                                                  {
                                                    EnsemblGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EnsemblTranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RefSeq = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SWISSPROT = AccToggle;
                                                  }
                                                  {
                                                    TrEMBL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAGeneModel = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGAProtein = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    VEGATranscript = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AllenBrainAtlas = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy1 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Affy430 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    AffyU74 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ArrayExpress = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CCDS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EC = AccToggle;
                                                  }
                                                  {
                                                    FuncBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HomoloGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    miRBase = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    PDB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ProteinOntology = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENCluster = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENClone = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENFANTOM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniGene = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    QTLArchive = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    InterPro = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGE = AccToggle;
                                                  }
                                                  {
                                                    MGC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WashU = AccToggle;
                                                  }
                                                  {
                                                    ATCC = AccToggle;
                                                  }
                                                  {
                                                    MGIImage = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    BGEM = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    GUDMAP = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EMAGE = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    EUREXPRESS = AccToggle : mgiOption;
                                                    Group: Widget
                                                      managed = True;
                                                  }
                                                  {
                                                    CREX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HYEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    INEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    FSEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TEXT = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TXEX = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    E = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HGNC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OMIM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RGD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA7 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIA15K = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI23 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RPCI24 = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    UniSTS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BROAD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Taxon = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JRS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MMRRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    APB = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BCBC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CARD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CMMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    CRL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMMA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EMS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Harwell = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    JPGA = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMP = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NCIMR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MPD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MTG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    MUGEN = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NIG = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NMICE = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    OBS = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ORNL = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RIKENBRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SMOC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TAC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RMRC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    WTSI = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IMAGELibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    dbESTLibrary = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IGTC = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    LexiconGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    BayGenomicGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TexasGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    TIGEMGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ModellingHumanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ESCDGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    ExchangeableClonesGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    GermanGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    SangerGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    HutchinsonGeneTrap = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneron = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSD = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RegeneronOther = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPRegeneronProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    KOMPCSDProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NORCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMProject = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Genentech = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUCOMMSequenceType = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    EUMMCR = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    RuleyHECellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    IshidaYCellLine = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    NorCOMM = AccToggle : mgiOption;
                                                  }
                                                  {
                                                    Lexicon = AccToggle : mgiOption;
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
}


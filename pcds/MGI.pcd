Module: MGI
{
      autoCuil = false;
      dDialogFile = "gxd_dlg.d";
      release = "TeleUSE v3.2 / Solaris 2.6";
      lastWritten = "Fri Nov  2 13:44:51 2001";
      copy = false;
      inCreateMenu = true;
        {
          Login = ApplicationShell;
          Group: Widget
            userDefinedAttributes = "recordModified:Boolean(Boolean)=\"False\"\n";
          Group: Control
            vip_x = 70;
            vip_y = 140;
              {
                Login = XmFrame;
                    {
                      LoginForm = XmForm;
                      Group: Widget
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        defaultButton = Login;
                          {
                            LoginServer = LoginServer : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_form;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                                Popups:
                                {
                                  LoginServerPulldown = OptionPulldown;
                                      {
                                        Production = ServerToggle : mgiOption;
                                      }
                                      {
                                        Development = ServerToggle : mgiOption;
                                      }
                                      {
                                        Public = ServerToggle : mgiOption;
                                      }
                                      {
                                        Junior = ServerToggle : mgiOption;
                                        Group: User
                                          defaultValue = MGI_DEV_1151;
                                      }
                                }
                          }
                          {
                            LoginDB = LoginDB : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              rightAttachment = attach_form;
                              topAttachment = attach_opposite_widget;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = LoginServer;
                              leftWidget = LoginServer;
                              leftOffset = 4;
                              rightOffset = 5;
                          }
                          {
                            separator = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = LoginDB;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 2;
                          }
                          {
                            User = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topOffset = 2;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = separator;
                              leftWidget = LoginServer;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = User;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 10;
                                }
                          }
                          {
                            Password = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = User;
                              rightAttachment = attach_form;
                              topAttachment = attach_opposite_widget;
                              topWidget = User;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                              rightOffset = 5;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Password;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    modifyVerifyCallback = "D:HidePassword";
                                }
                          }
                          {
                            separator1 = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = User;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = Password;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Login = XmPushButton;
                            Group: Widget
                              activateCallback = "D:Login";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = separator1;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separator1;
                              topOffset = 2;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Cancel = XmPushButton;
                            Group: Widget
                              activateCallback = "D:ExitApplication";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Login;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Login;
                              bottomAttachment = attach_form;
                              bottomOffset = 2;
                              resizable = true;
                              leftOffset = 5;
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
                Group: Widget
                  messageString = "Initializing...";
                  dialogTitle = Initialization;
              }
        }
        {
          Module = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "allowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nhomeWidget:StringTable(StringTable)\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String(String)\n";
            destroyCallback = "D:Exit";
            createCallback = "D:SetTitle";
          Group: Control
            vip_x = 70;
            vip_y = 30;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
          Group: User
            homeWidget = mgiAccessionTable;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            EditForm = EditForm : MGI;
                          }
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = Edit;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = Edit;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          EditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
            focusCallback = "D:StatusReportFront";
          Group: Control
            vip_x = 70;
            vip_y = 250;
              {
                ID = ID : mgiDataTypes;
              }
        }
        {
          Module1 = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nallowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String\n";
            destroyCallback = "D:Exit";
            createCallback = "D:SetTitle";
          Group: Control
            vip_x = 70;
            vip_y = 85;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      EditForm = EditForm : MGI;
                      Group: Widget
                        width = 560;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = EditForm;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = EditForm;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
              }
        }
        {
          SourceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            userDefinedAttributes = "sqlFrom:String\nsqlWhere:String\n";
          Group: Control
            vip_x = 70;
            vip_y = 305;
          Group: User
            homeWidget = Library;
              {
                SourceID : ID = ID : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_none;
                  rightAttachment = attach_form;
                  rightOffset = 5;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Library = CharText : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Library;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Library;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Library;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                ProbeSpeciesMenu = ProbeSpeciesMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = ProbeSpeciesMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ProbeSpeciesMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
              }
              {
                Tissue = Tissue : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Strain;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Strain;
              }
              {
                Description = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Tissue;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Tissue;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Tissue\nTreatment";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 50;
                        maxLength = 255;
                    }
              }
              {
                CellLine = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Description;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Description;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell Line";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 50;
                        maxLength = 100;
                    }
              }
              {
                AgeMenu = AgeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellLine;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellLine;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Age = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AgeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AgeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      label = XmLabel;
                      Group: Widget
                        managed = False;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                        translations = "#override
 Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() VerifyAge()";
                    }
              }
              {
                AgeMin = ID : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = SexMenu;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Age;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                AgeMax = ID : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AgeMin;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AgeMin;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                SexMenu = SexMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = AgeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = AgeMenu;
                  topOffset = 5;
                  bottomOffset = 5;
              }
        }
        {
          ControlledVocabModule = Module;
          Group: Widget
            title = "MGI Controlled Vocabulary";
          Group: Control
            vip_x = 70;
            vip_y = 470;
          Group: User
            homeWidget = Name;
            activateButtonName = ControlledVocab;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  ControlledVocabMenu = ControlledVocabMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ControlledVocabPulldown = OptionPulldown;
                                            {
                                              HomologyAssay = ControlledVocabToggle;
                                            }
                                            {
                                              MappingAssay = ControlledVocabToggle;
                                            }
                                            {
                                              MLCClass = ControlledVocabToggle;
                                            }
                                            {
                                              MarkerType = ControlledVocabToggle;
                                            }
                                            {
                                              EventReason = ControlledVocabToggle;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              ReviewStatus = ControlledVocabToggle;
                                            }
                                            {
                                              AlleleType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              InheritanceMode = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              MolecularMutation = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              ESCellLine = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AlleleNoteType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AlleleReferenceType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              VectorType = ControlledVocabToggle;
                                            }
                                            {
                                              StrainType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              StrainSpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              MolecularSourceSpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              separator = XmSeparator;
                                            }
                                            {
                                              AntibodyClass = ControlledVocabToggle;
                                            }
                                            {
                                              AntibodyType = ControlledVocabToggle;
                                            }
                                            {
                                              AntibodySpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AssayType = ControlledVocabToggle;
                                            }
                                            {
                                              ExpPattern = ControlledVocabToggle;
                                            }
                                            {
                                              ExpStrength = ControlledVocabToggle;
                                            }
                                            {
                                              GelRNAType = ControlledVocabToggle;
                                            }
                                            {
                                              GelUnit = ControlledVocabToggle;
                                            }
                                            {
                                              GelControl = ControlledVocabToggle;
                                            }
                                            {
                                              ImageFieldType = ControlledVocabToggle;
                                            }
                                            {
                                              Labels = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeLabelCoverage = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeSense = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeVisualization = ControlledVocabToggle;
                                            }
                                            {
                                              Secondary = ControlledVocabToggle;
                                            }
                                            {
                                              EmbeddingMethod = ControlledVocabToggle;
                                            }
                                            {
                                              FixationMethod = ControlledVocabToggle;
                                            }
                                            {
                                              separator1 = XmSeparator;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              GeneFamily = ControlledVocabToggle;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ControlledVocabMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  RNAAssayMenu = RNAAssayMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  GelAssayMenu = GelAssayMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RNAAssayMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RNAAssayMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AssayAbbrev = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = GelAssayMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Assay Abbreviation (for Web display)";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 2;
                                          maxLength = 2;
                                      }
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AssayAbbrev;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    leftWidget = Name;
                                }
                                {
                                  AllowOnlyOne = OptionMenu;
                                  Group: Widget
                                    subMenuId = YesNoPulldown;
                                    labelString = "Allow Only One";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                  Group: User
                                    defaultOption = Yes;
                                      Popups:
                                      {
                                        YesNoPulldown : OptionPulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              Yes = Yes : mgiOption;
                                              Group: Widget
                                                labelString = Yes;
                                              Group: User
                                                searchValue = 1;
                                                defaultValue = 1;
                                            }
                                            {
                                              No = No : mgiOption;
                                              Group: Widget
                                                labelString = No;
                                              Group: User
                                                searchValue = 0;
                                                defaultValue = 0;
                                            }
                                      }
                                }
                                {
                                  Private = OptionMenu;
                                  Group: Widget
                                    subMenuId = YesNoPulldown;
                                    labelString = Private;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AllowOnlyOne;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        YesNoPulldown : OptionPulldown = OptionPulldown;
                                            {
                                              SearchAll = SearchAll : mgiOption;
                                            }
                                            {
                                              Yes = Yes : mgiOption;
                                              Group: Widget
                                                labelString = Yes;
                                              Group: User
                                                searchValue = 1;
                                                defaultValue = 1;
                                            }
                                            {
                                              No = No : mgiOption;
                                              Group: Widget
                                                labelString = No;
                                              Group: User
                                                searchValue = 0;
                                                defaultValue = 0;
                                            }
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Application = TopLevelShell;
          Group: Widget
            createCallback = "D:SetServer";
            destroyCallback = "D:ExitApplication";
            userDefinedAttributes = "initDialog:StringTable\ndbInfo:String(String)\n";
          Group: Control
            vip_x = 70;
            vip_y = 195;
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
              }
        }
        {
          MGI = Application : MGI;
          Group: Control
            vip_x = 70;
            vip_y = 415;
          Group: User
            initDialog = "StrainDialog\nTissueDialog\nRIDialog\nCrossDialog";
              {
                MGDForm = XmForm;
                    {
                      MGDMenu = MenuBar : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown;
                                      {
                                        Exit = MenuPush;
                                        Group: Widget
                                          activateCallback = "D:ExitApplication";
                                      }
                                }
                          }
                    }
                    {
                      MGDFrame = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MGDMenu;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MGDMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            mgiModules = XmRowColumn;
                            Group: Widget
                              entryAlignment = alignment_center;
                              spacing = 5;
                                {
                                  Reference = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Reference\")";
                                    labelString = References;
                                    traversalOn = False;
                                }
                                {
                                  Marker = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Marker\")";
                                    labelString = Markers;
                                    traversalOn = False;
                                }
                                {
                                  MolecularSegment = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MolecularSegment\")";
                                    labelString = "Molecular Probes & Segments";
                                    traversalOn = False;
                                }
                                {
                                  Homology = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Homology\")";
                                    traversalOn = False;
                                }
                                {
                                  MLDP = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLDP\")";
                                    labelString = Mapping;
                                    traversalOn = False;
                                }
                                {
                                  MLC = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"MLCED\")";
                                    traversalOn = False;
                                }
                                {
                                  separator = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  Antigen = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Antigen\")";
                                    traversalOn = False;
                                    labelString = Antigens;
                                }
                                {
                                  Antibody = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Antibody\")";
                                    traversalOn = False;
                                    labelString = Antibodies;
                                }
                                {
                                  Image = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Image\")";
                                    traversalOn = False;
                                    labelString = Images;
                                }
                                {
                                  Assay = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Assay\")";
                                    traversalOn = False;
                                    labelString = Assays;
                                }
                                {
                                  Dictionary = XmPushButton;
                                  Group: Widget
                                    labelString = "Anat. Dictionary";
                                    activateCallback = "D:CreateMGIModule(name = \"Dictionary\")";
                                    traversalOn = False;
                                }
                                {
                                  IndexStage = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"IndexStage\")";
                                    traversalOn = False;
                                    labelString = "GXD Index/Stages";
                                }
                                {
                                  separator1 = XmSeparator;
                                  Group: Widget
                                    separatorType = shadow_etched_out;
                                    shadowThickness = 5;
                                }
                                {
                                  Lookups = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Lookups\")";
                                    labelString = Lookups;
                                    traversalOn = False;
                                }
                                {
                                  Species = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Species\")";
                                    traversalOn = False;
                                }
                                {
                                  Strains = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Strains\")";
                                    traversalOn = False;
                                }
                                {
                                  Tissues = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Tissues\")";
                                    traversalOn = False;
                                }
                                {
                                  Cross = XmPushButton;
                                  Group: Widget
                                    activateCallback = "D:CreateMGIModule(name = \"Cross\")";
                                    labelString = Crosses;
                                    traversalOn = False;
                                }
                                {
                                  RISet = XmPushButton;
                                  Group: Widget
                                    labelString = "RI Sets";
                                    activateCallback = "D:CreateMGIModule(name = \"RISet\")";
                                    traversalOn = False;
                                }
                                {
                                  ActualLogical = XmPushButton;
                                  Group: Widget
                                    labelString = "Actual/Logical DBs";
                                    activateCallback = "D:CreateMGIModule(name = \"ActualLogical\")";
                                    traversalOn = False;
                                    managed = True;
                                }
                                {
                                  Nomen = XmPushButton;
                                  Group: Widget
                                    labelString = Nomen;
                                    activateCallback = "D:CreateMGIModule(name = \"Nomen\")";
                                    traversalOn = False;
                                    managed = False;
                                }
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog;
              }
              {
                WorkingDialog = WorkingDialog;
              }
              {
                StrainDialog = StrainDialog : mgiDialog;
              }
              {
                TissueDialog = TissueDialog : mgiDialog;
              }
              {
                RIDialog = RIDialog : mgiDialog;
              }
              {
                CrossDialog = CrossDialog : mgiDialog;
              }
        }
        {
          SubEditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
            focusCallback = "D:StatusReportFront";
          Group: Control
            vip_x = 70;
            vip_y = 360;
        }
        {
          VocabAnnotModule = Module : MGI;
          Group: Control
            vip_x = 73;
            vip_y = 531;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeMenu = OptionMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Annotation Type";
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                      Popups:
                                      {
                                        OptionPulldown = OptionPulldown : mgiOption;
                                            {
                                              GOMarker = OptionToggle : mgiOption;
                                            }
                                            {
                                              PhenoSlimGenotype = OptionToggle : mgiOption;
                                            }
                                            {
                                              PhenoSlimQTL = OptionToggle : mgiOption;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeMenu;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                value = "MGI:97490";
                                            }
                                      }
                                      {
                                        AccessionName = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Object;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                                value = Pax6;
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 18;
                                          xrtTblColumnLabels = "Mode,Anot key,Vocab key,Term key,Not key, Refs key,Evidence key,WITH key,Term Accession ID,Vocabulary DAG,Vocabulary Term,NOT,J:,Evidence,Inferred From,Editor,Date,Notes";
                                          xrtTblPixelWidthSeries = "(all 0-7 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-7 10)(all 8 20)(all 9-10 25)(all 11 3)(all 12 10)(all 13 10)(all 14 20)(all 15 6)(all 16 10)(all 17 5)";
                                          xrtTblBackgroundSeries = "(all all Wheat)(0 all Red)(4-5 all Gray)(8 all Red) (label all Thistle)(all label Thistle)";
                                          xrtTblCellValues = "(1,1,1,1,1,1,1,1,GO:,Biological Process,biological_process unknown,,70000,NA,,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Biological Process,eye morphogenesis, ,65765,IMP, ,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Biological Process,embryogenesis and morphology, ,54357,SBA, ,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Biological Process,transcription regulation, ,54357,SBA, ,dph,10/01/2001)(1,1,1,1,1,1,1,1,GO:,Cellular Component,nucleus,,60000,EA,,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Cellular Component,transcription factor component,,54357,SBA,,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Molecular Function,DNA binding,,60000,EA,,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Molecular Function,transcription factor,,54357,SBA,,dph,10/25/2001)(1,1,1,1,1,1,1,1,GO:,Molecular Function,molecular_function unknown,,45000,EA,,dph,09/29/2001)";
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Annotation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Annotation;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    leftOffset = 300;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 10;
                                          xrtTblCellValues = "(X,1,1,J:63349,Behrens)(X,1,1,J:61535,Bishop)(X,1,1,J:54240,Briscoe)";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Table = mgiTable;
                                      }
                                      {
                                        Add = TablePush;
                                      }
                                      {
                                        Delete = TablePush;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  EvidenceMenu = OptionMenu : mgiOption;
                                  Group: Widget
                                    labelString = Evidence;
                                      Popups:
                                      {
                                        OptionPulldown = OptionPulldown : mgiOption;
                                            {
                                              IMP = OptionToggle : mgiOption;
                                            }
                                            {
                                              IGI = OptionToggle : mgiOption;
                                            }
                                            {
                                              IPI = OptionToggle : mgiOption;
                                            }
                                      }
                                }
                          }
                    }
              }
        }
}


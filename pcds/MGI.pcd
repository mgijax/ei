Module: MGI
{
      autoCuil = false;
      dDialogFile = "gxd_dlg.d";
      release = "TeleUSE v3.2.3 / Solaris 8";
      lastWritten = "Wed Apr 28 12:55:30 2004";
      copy = false;
      inCreateMenu = true;
        {
          Login = ApplicationShell;
          Group: Widget
            userDefinedAttributes = "recordModified:Boolean(Boolean)=\"False\"\n";
          Group: Control
            vip_x = 70;
            vip_y = 140;
              {
                Login = XmFrame;
                    {
                      LoginForm = XmForm;
                      Group: Widget
                        rubberPositioning = False;
                        resizePolicy = resize_any;
                        defaultButton = Login;
                          {
                            LoginServer = LoginServer : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_none;
                              topAttachment = attach_form;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                          }
                          {
                            LoginDB = LoginDB : mgiOption;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              rightAttachment = attach_form;
                              topAttachment = attach_opposite_widget;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = LoginServer;
                              leftWidget = LoginServer;
                              leftOffset = 4;
                              rightOffset = 5;
                          }
                          {
                            separator = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_form;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = LoginDB;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 2;
                          }
                          {
                            User = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topOffset = 2;
                              bottomAttachment = attach_none;
                              resizable = true;
                              topWidget = separator;
                              leftWidget = LoginServer;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = User;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    columns = 10;
                                }
                          }
                          {
                            Password = CharText : mgiDataTypes;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = User;
                              rightAttachment = attach_form;
                              topAttachment = attach_opposite_widget;
                              topWidget = User;
                              bottomAttachment = attach_none;
                              resizable = true;
                              leftOffset = 5;
                              rightOffset = 5;
                                {
                                  label = XmLabel;
                                  Group: Widget
                                    labelString = Password;
                                }
                                {
                                  text = text;
                                  Group: Widget
                                    modifyVerifyCallback = "D:HidePassword";
                                }
                          }
                          {
                            separator1 = XmSeparator;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = User;
                              rightAttachment = attach_form;
                              rightOffset = 2;
                              topAttachment = attach_widget;
                              topWidget = Password;
                              topOffset = 5;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Login = XmPushButton;
                            Group: Widget
                              activateCallback = "D:Login";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_opposite_widget;
                              leftWidget = separator1;
                              rightAttachment = attach_none;
                              topAttachment = attach_widget;
                              topWidget = separator1;
                              topOffset = 2;
                              bottomAttachment = attach_none;
                              resizable = true;
                          }
                          {
                            Cancel = XmPushButton;
                            Group: Widget
                              activateCallback = "D:ExitApplication";
                              traversalOn = False;
                            Group: Constraint
                              leftAttachment = attach_widget;
                              leftWidget = Login;
                              rightAttachment = attach_none;
                              topAttachment = attach_opposite_widget;
                              topWidget = Login;
                              bottomAttachment = attach_form;
                              bottomOffset = 2;
                              resizable = true;
                              leftOffset = 5;
                          }
                    }
              }
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
                Group: Widget
                  messageString = "Initializing...";
                  dialogTitle = Initialization;
              }
        }
        {
          Module = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "allowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nhomeWidget:StringTable(StringTable)\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String(String)\n";
            createCallback = "D:SetTitle";
            deleteResponse = do_nothing;
            closeWindowCallback = "D:Exit";
          Group: Control
            vip_x = 70;
            vip_y = 30;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
          Group: User
            homeWidget = mgiAccessionTable;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Edit = XmFrame;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_form;
                        resizable = true;
                          {
                            EditForm = EditForm : MGI;
                          }
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = Edit;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = Edit;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                    }
              }
        }
        {
          EditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
            focusCallback = "D:StatusReportFront";
          Group: Control
            vip_x = 70;
            vip_y = 250;
              {
                ID = ID : mgiDataTypes;
              }
        }
        {
          Module1 = TopLevelShell;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nallowEdit:Boolean(Boolean)=\"True\"\neditForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nclearForms:StringTable(StringTable)=\"ControlForm\nEditForm\"\nallowMultiple:Boolean(Boolean)=\"False\"\nactivateButtonName:String\n";
            closeWindowCallback = "D:Exit";
            createCallback = "D:SetTitle";
            deleteResponse = do_nothing;
          Group: Control
            vip_x = 70;
            vip_y = 85;
            vipComment = "TopLevelShell is used for normal top-level windows such as any additional top-level widgets an application needs.";
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                      Group: Constraint
                        leftAttachment = attach_form;
                        rightAttachment = attach_form;
                        topAttachment = attach_form;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      EditForm = EditForm : MGI;
                      Group: Widget
                        width = 560;
                      Group: Constraint
                        leftAttachment = attach_opposite_widget;
                        leftWidget = MainMenu;
                        rightAttachment = attach_none;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                    }
                    {
                      Control = Control : mgiControl;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = MainMenu;
                        bottomAttachment = attach_none;
                        resizable = true;
                        leftWidget = EditForm;
                          {
                            ControlForm = XmForm;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                }
                                {
                                  Next = ControlArrow;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                      {
                                        Clear = XmCascadeButton;
                                        Group: Widget
                                          traversalOn = False;
                                          marginHeight = 0;
                                          marginWidth = 0;
                                          shadowThickness = 3;
                                      }
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_form;
                        resizable = true;
                        leftWidget = EditForm;
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
              }
        }
        {
          SourceForm = EditForm : MGI;
          Group: Widget
            rubberPositioning = False;
            resizePolicy = resize_any;
            userDefinedAttributes = "sqlFrom:String\nsqlWhere:String\n";
          Group: Control
            vip_x = 70;
            vip_y = 305;
          Group: User
            homeWidget = Library;
              {
                SourceID : ID = ID : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_none;
                  rightAttachment = attach_form;
                  rightOffset = 5;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Library = CharText : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_form;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                  leftOffset = 5;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = Library;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 75;
                    }
              }
              {
                mgiCitation = mgiCitation : mgiDataTypes;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Library;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Library;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      ObjectID = ID;
                    }
                    {
                      Jnum = Jnum;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
                    {
                      Citation = Citation;
                          {
                            label = XmLabel;
                          }
                          {
                            text = text;
                            Group: User
                              required = False;
                          }
                    }
              }
              {
                SegmentTypeMenu = SegmentTypeMenu : mgiOption;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = mgiCitation;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = mgiCitation;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                VectorTypeMenu = VectorTypeMenu : mgiOption;
                Group: Widget
                  managed = False;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = SegmentTypeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = SegmentTypeMenu;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                ProbeSpeciesMenu = ProbeSpeciesMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_form;
                  leftOffset = 5;
                  rightAttachment = attach_none;
                  topAttachment = attach_form;
                  topOffset = 5;
                  bottomAttachment = attach_none;
                  resizable = true;
              }
              {
                Strain = Strain : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = ProbeSpeciesMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = ProbeSpeciesMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      Verify = CharText;
                    }
              }
              {
                Tissue = Tissue : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Strain;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topWidget = Strain;
              }
              {
                Description = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Tissue;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Tissue;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Tissue\nTreatment";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 50;
                        maxLength = 255;
                    }
              }
              {
                CellLine = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = Description;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = Description;
                  bottomAttachment = attach_none;
                  resizable = true;
                    {
                      label = XmLabel;
                      Group: Widget
                        labelString = "Cell Line";
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 50;
                        maxLength = 100;
                    }
              }
              {
                AgeMenu = AgeMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = CellLine;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  topWidget = CellLine;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = 5;
              }
              {
                Age = CharText : mgiDataTypes;
                Group: Constraint
                  leftAttachment = attach_widget;
                  leftWidget = AgeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_opposite_widget;
                  topWidget = AgeMenu;
                  bottomAttachment = attach_none;
                  resizable = true;
                  topOffset = "-5";
                    {
                      label = XmLabel;
                      Group: Widget
                        managed = False;
                    }
                    {
                      text = text;
                      Group: Widget
                        columns = 20;
                        maxLength = 50;
                    }
              }
              {
                SexMenu = SexMenu : mgiOption;
                Group: Constraint
                  leftAttachment = attach_opposite_widget;
                  leftWidget = AgeMenu;
                  rightAttachment = attach_none;
                  topAttachment = attach_widget;
                  bottomAttachment = attach_form;
                  resizable = true;
                  topWidget = AgeMenu;
                  topOffset = 5;
                  bottomOffset = 5;
              }
        }
        {
          ControlledVocabModule = Module;
          Group: Widget
            title = "MGI Controlled Vocabulary";
          Group: Control
            vip_x = 70;
            vip_y = 415;
          Group: User
            homeWidget = Name;
            activateButtonName = ControlledVocab;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID;
                                }
                                {
                                  ControlledVocabMenu = ControlledVocabMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        ControlledVocabPulldown = OptionPulldown;
                                            {
                                              HomologyAssay = ControlledVocabToggle;
                                            }
                                            {
                                              MappingAssay = ControlledVocabToggle;
                                            }
                                            {
                                              MLCClass = ControlledVocabToggle;
                                            }
                                            {
                                              MarkerType = ControlledVocabToggle;
                                            }
                                            {
                                              EventReason = ControlledVocabToggle;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              ReviewStatus = ControlledVocabToggle;
                                            }
                                            {
                                              AlleleType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              InheritanceMode = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              MolecularMutation = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              ESCellLine = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AlleleNoteType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AlleleReferenceType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              VectorType = ControlledVocabToggle;
                                            }
                                            {
                                              StrainType = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              StrainSpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              MolecularSourceSpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              separator = XmSeparator;
                                            }
                                            {
                                              AntibodyClass = ControlledVocabToggle;
                                            }
                                            {
                                              AntibodyType = ControlledVocabToggle;
                                            }
                                            {
                                              AntibodySpecies = ControlledVocabToggle : mgiOption;
                                            }
                                            {
                                              AssayType = ControlledVocabToggle;
                                            }
                                            {
                                              ExpPattern = ControlledVocabToggle;
                                            }
                                            {
                                              ExpStrength = ControlledVocabToggle;
                                            }
                                            {
                                              GelRNAType = ControlledVocabToggle;
                                            }
                                            {
                                              GelUnit = ControlledVocabToggle;
                                            }
                                            {
                                              GelControl = ControlledVocabToggle;
                                            }
                                            {
                                              ImageFieldType = ControlledVocabToggle;
                                            }
                                            {
                                              Labels = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeLabelCoverage = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeSense = ControlledVocabToggle;
                                            }
                                            {
                                              ProbeVisualization = ControlledVocabToggle;
                                            }
                                            {
                                              Secondary = ControlledVocabToggle;
                                            }
                                            {
                                              EmbeddingMethod = ControlledVocabToggle;
                                            }
                                            {
                                              FixationMethod = ControlledVocabToggle;
                                            }
                                            {
                                              separator1 = XmSeparator;
                                              Group: Widget
                                                managed = True;
                                            }
                                            {
                                              GeneFamily = ControlledVocabToggle;
                                              Group: Widget
                                                managed = True;
                                            }
                                      }
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ControlledVocabMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = Name;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          columns = 75;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  RNAAssayMenu = RNAAssayMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  GelAssayMenu = GelAssayMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RNAAssayMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RNAAssayMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  AssayAbbrev = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = GelAssayMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Assay Abbreviation (for Web display)";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 2;
                                          maxLength = 2;
                                      }
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AssayAbbrev;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 5;
                                    leftWidget = Name;
                                }
                                {
                                  AllowOnlyOne = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = YY;
                                    labelString = "Allow Only One";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                    vipComment = "";
                                  Group: User
                                    defaultOption = Yes;
                                }
                                {
                                  Private = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = YY;
                                    labelString = Private;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AllowOnlyOne;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Name;
                                    topOffset = 5;
                                  Group: Control
                                    vip_x = 80;
                                    vip_y = 4100;
                                    vipComment = "";
                                  Group: User
                                    defaultOption = No;
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                      }
                                      {
                                        PrinterList = LookupList;
                                      }
                                      {
                                        PrintOrient = Choice : mgiDataTypes;
                                            {
                                              PrintOrientBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    Portrait = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = Portrait;
                                                  }
                                                  {
                                                    Landscape = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = Landscape;
                                                  }
                                            }
                                      }
                                      {
                                        PrintColumn = Choice : mgiDataTypes;
                                            {
                                              PrintColumnBox : ChoiceBox = XmRowColumn;
                                                  {
                                                    OneColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      set = True;
                                                      labelString = "1 column";
                                                  }
                                                  {
                                                    TwoColumn = toggle : mgiDataTypes;
                                                    Group: Widget
                                                      labelString = "2 column";
                                                  }
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          Application = TopLevelShell;
          Group: Widget
            createCallback = "D:SetServer";
            destroyCallback = "D:ExitApplication";
            userDefinedAttributes = "initDialog:StringTable\ndbInfo:String(String)\n";
          Group: Control
            vip_x = 70;
            vip_y = 195;
              Popups:
              {
                StatusDialog = StatusDialog : mgiDialog;
              }
              {
                WorkingDialog = WorkingDialog : mgiDialog;
              }
        }
        {
          SubEditForm = XmForm;
          Group: Widget
            userDefinedAttributes = "homeWidget:StringTable(StringTable)\nqueryList:String(String)=\"QueryList\"\nconditionalList:String(String)=\"QueryList\"\nsql:String(String)\n";
            focusCallback = "D:StatusReportFront";
          Group: Control
            vip_x = 70;
            vip_y = 360;
        }
        {
          GenotypeModule = Module : MGI;
          Group: Widget
            closeWindowCallback = "D:GenotypeExit";
          Group: Control
            vip_x = 70;
            vip_y = 470;
          Group: User
            homeWidget = Verify;
            activateButtonName = GenotypePush;
              {
                MainForm = XmForm;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:GenotypeExit";
                                      }
                                }
                          }
                          {
                            Commands = Commands : mgiMenu;
                                Popups:
                                {
                                  CommandsPulldown = MenuPulldown : mgiMenu;
                                      {
                                        Search = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:SearchGenotype,\nD:GoHome";
                                      }
                                      {
                                        Modify = MenuPush : mgiMenu;
                                      }
                                      {
                                        Add = MenuPush : mgiMenu;
                                      }
                                      {
                                        Delete = MenuPush : mgiMenu;
                                      }
                                      {
                                        separator1 = XmSeparator;
                                      }
                                      {
                                        Clear = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:Clear(clearLists = 3)";
                                      }
                                      {
                                        Clear1 = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Clear2 = MenuPush : mgiMenu;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                          }
                          {
                            Edit = Edit : mgiMenu;
                                Popups:
                                {
                                  EditPulldown = MenuPulldown : mgiMenu;
                                      {
                                        PSAnnotation = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"VocAnnot\")";
                                          labelString = "PhenoSlim Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1001\"\n";
                                      }
                                      {
                                        MPAnnotation = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:CreateMGIModule(name = \"VocAnnot\")";
                                          labelString = "Mammalian Phenotype Annotations";
                                          userDefinedAttributes = "annotTypeKey:Int(Int)=\"1002\"\n";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          managed = True;
                                      }
                                      {
                                        text = text;
                                        Group: Widget
                                          managed = True;
                                      }
                                }
                                {
                                  Strain = Strain : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_form;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                    topOffset = 5;
                                    leftOffset = 5;
                                      {
                                        StrainID = ID;
                                      }
                                      {
                                        Verify = CharText;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                columns = 75;
                                            }
                                      }
                                }
                                {
                                  AllelePair = OrderedTableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Strain;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 11;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Key,M Key, A1 Key,A2 Key,Marker,Allele1,Allele 2,State";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 7-9 20)(all 10 12)";
                                          xrtTblEditableSeries = "(all 0-6 False)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-6 0)";
                                          xrtTblTraversableSeries = "(all 0-6 False)";
                                          xrtTblValidateCellCallback = "D:VerifyMarker,\nD:VerifyAllele,\nD:VerifyAllelePairState,\nD:CommitTableCellEdit";
                                          userDefinedAttributes = "markerKey:Int(Int)=\"4\"\nmarkerSymbol:Int(Int)=\"7\"\nmarkerChr:Int(Int)=\"-1\"\nalleleSymbol:StringTable(StringTable)\nalleleKey:StringTable(StringTable)\npairKey:Int(Int)=\"3\"\nalleleState:Int(Int)=\"10\"\nmarkerColumns:Int=\"1\"\n";
                                        Group: User
                                          alleleSymbol = "8\n9";
                                          alleleKey = "5\n6";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = "Allele Pairs";
                                            }
                                      }
                                }
                                {
                                  ConditionalMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Conditional Genotype";
                                    subMenuId = ConditionalPulldown;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = AllelePair;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = AllelePair;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        ConditionalPulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  Note = SingleNote : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ConditionalMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ConditionalMenu;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 50;
                                      {
                                        label = XmLabel;
                                      }
                                      {
                                        text = scrolledText : mgiDataTypes;
                                        Group: Widget
                                          rows = 5;
                                          scrollHorizontal = False;
                                          scrollVertical = False;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ConditionalMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Note;
                                    topOffset = 10;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 5;
                                          xrtTblNumColumns = 6;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-3 10)(all 4 40)(all 5 20)";
                                          xrtTblColumnLabels = "Mode,Current Key,New Key,J#,Citation,Data Set";
                                          userDefinedAttributes = "dataSet:Int=\"5\"\n";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Retrieve = XmPushButtonGadget;
                                        Group: Widget
                                          labelString = "Retrieve Records";
                                          activateCallback = "D:SelectReferences";
                                        Group: Constraint
                                          leftAttachment = attach_opposite_widget;
                                          leftWidget = Table;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_widget;
                                          topWidget = Table;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topOffset = 5;
                                      }
                                      {
                                        Records = XmLabel;
                                        Group: Widget
                                          labelString = "0 Records";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = Retrieve;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                          topWidget = Retrieve;
                                          leftOffset = 5;
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:SearchGenotype,\nD:GoHome";
                                }
                                {
                                  Clear = ControlPush;
                                  Group: Widget
                                    activateCallback = "D:Clear(clearLists = 3)";
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Search;
                                    topWidget = Search;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftOffset = 2;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftWidget = Clear;
                                    topWidget = Clear;
                                }
                                {
                                  Add = ControlPush;
                                }
                                {
                                  Delete = ControlPush;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_widget;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = Next;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightWidget = Next;
                                    rightOffset = 5;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    topAttachment = attach_widget;
                                    topWidget = Delete;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 2;
                                    rightWidget = Delete;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Search;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Search;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RecordCount;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = CreationDate;
                                    rightAttachment = attach_form;
                                    rightOffset = 5;
                                    topAttachment = attach_widget;
                                    topWidget = CreationDate;
                                    bottomAttachment = attach_form;
                                    bottomOffset = 5;
                                    resizable = true;
                                }
                                {
                                  ModificationHistory = ModificationHistory : mgiTable;
                                  Group: Widget
                                    managed = True;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = RecordCount;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = RecordCount;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  mgiAccessionTable = mgiAccessionTable : mgiTable;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblVisibleRows = 1;
                                      }
                                      {
                                        Add = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        Delete = TablePush;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        AccSourceMenu = AccSourceMenu : mgiOption;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  QueryList = QueryList : mgiLookup;
                                }
                                {
                                  AllelePairStateMenu = AllelePairStateMenu : mgiOption;
                                      Popups:
                                      {
                                        AllelePairStatePulldown = OptionPulldown;
                                        Group: User
                                          tableForm = AllelePair;
                                          tableOption = 10;
                                          tableOptionKey = "-1";
                                      }
                                }
                                {
                                  GenotypeEditClipboard = GenotypeEditClipboard : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                      }
                                      {
                                        Add = TablePush : mgiTable;
                                        Group: Widget
                                          activateCallback = "D:GenotypeClipboardAdd";
                                      }
                                }
                                {
                                  ESCellLineList = ESCellLineList : mgiLookup;
                                }
                          }
                    }
              }
        }
        {
          SimpleVocabModule = Module;
          Group: Control
            vip_x = 70;
            vip_y = 525;
          Group: User
            activateButtonName = SimpleVocab;
            homeWidget = Name;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Vocabulary Name";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  ACCLogicalMenu = ACCLogicalMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = Name;
                                    leftOffset = 20;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = Name;
                                    topOffset = 5;
                                      Popups:
                                      {
                                        ACCLogicalPulldown = OptionPulldown;
                                        Group: User
                                          sql = "select _LogicalDB_key, name from ACC_LogicalDB\nwhere _LogicalDB_key in (-1, 1,15)\norder by name";
                                      }
                                }
                                {
                                  ACCPrivateMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = ACCPrivatePulldown;
                                    labelString = "Accession IDs Private?";
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = ACCLogicalMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ACCLogicalMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        ACCPrivatePulldown : YesNoPulldown = OptionPulldown;
                                      }
                                }
                                {
                                  mgiCitation = mgiCitation : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = ACCPrivateMenu;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Term = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiCitation;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiCitation;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 10;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Term Key,Obsolete Key,Acc ID,Term,Abbr,Definition,Obsolete";
                                          xrtTblEditableSeries = "(all 0-5 False)";
                                          xrtTblNumRows = 25;
                                          xrtTblVisibleRows = 20;
                                          xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-4 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-2 3)(all 3 10)(all 4 1)(all 5 20)(all 6 70)(all 7 5)(all 8 15)(all 9 8)";
                                          userDefinedAttributes = "termKey:Int(Int)=\"3\"\nterm:Int(Int)=\"6\"\nabbreviation:Int(Int)=\"7\"\ndefinition:Int(Int)=\"8\"\nmgiID:Int(Int)=\"5\"\nisObsolete:Int(Int)=\"9\"\nobsoleteKey:Int=\"4\"\n";
                                          xrtTblTraversableSeries = "(all 0-5 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions,\nD:SelectSynonym";
                                        Group: User
                                          saveEditableSeries = "(all 0-5 False)";
                                          saveTraversableSeries = "(all 0-5 False)";
                                          requiredColumns = 6;
                                      }
                                }
                                {
                                  Synonym = TableLabel : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Term;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Term;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 3;
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 10)(all 2 70)";
                                          xrtTblEditableSeries = "(all 0-1 False)";
                                          xrtTblTraversableSeries = "(all 0-1 False)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)";
                                          xrtTblColumnLabels = "Mode,Syn Key,Synonym";
                                          userDefinedAttributes = "synKey:Int=\"1\"\nsynonym:Int=\"2\"\n";
                                            {
                                              label = XtXrtLabel;
                                              Group: Widget
                                                labelString = Synonyms;
                                            }
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 15;
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: Widget
                                    labelString = Definition;
                                  Group: User
                                    targetWidget = Term;
                                    targetColumn = 8;
                                }
                                {
                                  YesNoMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    labelString = "Obsolete?";
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = Term;
                                          tableOption = 9;
                                          tableOptionKey = 4;
                                      }
                                }
                          }
                    }
              }
        }
        {
          TranslationModule = Module : MGI;
          Group: Widget
            width = 1050;
            height = 825;
            closeWindowCallback = "D:VocAnnotExit";
          Group: Control
            vip_x = 70;
            vip_y = 635;
          Group: User
            activateButtonName = Translation;
            homeWidget = Name;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  Name = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Translation Type";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                        Group: User
                                          required = True;
                                      }
                                }
                                {
                                  MGITypeMenu = MGITypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Name;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Name;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topOffset = 10;
                                }
                                {
                                  Compression = CharText : mgiDataTypes;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = MGITypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    topWidget = MGITypeMenu;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    leftOffset = 20;
                                    topOffset = "-5";
                                      {
                                        label = XmLabel;
                                        Group: Widget
                                          labelString = "Compression Chars";
                                      }
                                      {
                                        text = text : mgiDataTypes;
                                        Group: Widget
                                          columns = 50;
                                      }
                                }
                                {
                                  Translation = OrderedTable : mgiTable;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = MGITypeMenu;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = MGITypeMenu;
                                    topOffset = 20;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    rightOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumColumns = 9;
                                          xrtTblNumRows = 1000;
                                          xrtTblColumnLabels = "Mode,Current Order,#,Key,Object Key,Non-MGI Term,MGI Term,Acc ID,Modified By,Modified Date";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1 3)(all 2 4)(all 5-6 50)(all 7-8 15)";
                                          xrtTblPixelWidthSeries = "(all 0-1 0)(all 3-4 0)";
                                          xrtTblEditableSeries = "(all 0-4 False)";
                                          xrtTblTraversableSeries = "(all 0-4 False)";
                                          xrtTblVisibleRows = 25;
                                          userDefinedAttributes = "transKey:Int(Int)=\"3\"\nobjectKey:Int(Int)=\"4\"\nnonmgiTerm:Int(Int)=\"5\"\nmgiTerm:Int(Int)=\"6\"\nmodifiedBy:Int(Int)=\"8\"\nmodifiedDate:Int(Int)=\"9\"\naccID:Int(Int)=\"7\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyTransMGITermAccID,\nD:CommitTableCellEdit";
                                        Group: User
                                          saveEditableSeries = "(all 0-4 False)";
                                          saveTraversableSeries = "(all 0-4 False)";
                                      }
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 25;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
              }
        }
        {
          VocAnnotModule = Module : MGI;
          Group: Widget
            width = 1200;
            height = 825;
            closeWindowCallback = "D:VocAnnotExit";
          Group: Control
            vip_x = 70;
            vip_y = 580;
          Group: User
            activateButtonName = VocAnnot;
            homeWidget = mgiAccession;
              {
                MainForm = XmForm;
                Group: Widget
                  rubberPositioning = False;
                  resizePolicy = resize_any;
                    {
                      MainMenu = MainMenu : mgiMenu;
                          {
                            File = File : mgiMenu;
                                Popups:
                                {
                                  FilePulldown = MenuPulldown : mgiMenu;
                                      {
                                        Exit = MenuPush : mgiMenu;
                                        Group: Widget
                                          activateCallback = "D:VocAnnotExit";
                                      }
                                }
                          }
                    }
                    {
                      Edit = XmFrame;
                          {
                            EditForm = EditForm : MGI;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  ID = ID : mgiDataTypes;
                                }
                                {
                                  VocAnnotTypeMenu = VocAnnotTypeMenu : mgiOption;
                                  Group: Constraint
                                    leftAttachment = attach_form;
                                    leftOffset = 5;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_form;
                                    topOffset = 5;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      Popups:
                                      {
                                        VocAnnotTypePulldown = OptionPulldown;
                                            {
                                              GOMarker = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\n";
                                                labelString = "GO/Marker";
                                              Group: User
                                                annotVocab = GO;
                                                evidenceKey = 3;
                                                mgiTypeKey = 2;
                                                vocabKey = 4;
                                                defaultValue = 1000;
                                            }
                                            {
                                              MPGenotype = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\n";
                                                labelString = "Mammalian Phenotype/Genotype";
                                              Group: User
                                                annotVocab = "Mammalian Phenotype";
                                                evidenceKey = 2;
                                                mgiTypeKey = 12;
                                                vocabKey = 5;
                                                defaultValue = 1002;
                                            }
                                            {
                                              PSGenotype = OptionToggle;
                                              Group: Widget
                                                valueChangedCallback = "D:SetModify,\nD:SetAnnotTypeDefaults";
                                                userDefinedAttributes = "evidenceKey:Int(Int)=\"0\"\nmgiTypeKey:Int(Int)=\"0\"\nvocabKey:Int(Int)=\"0\"\nannotVocab:String(String)\n";
                                                labelString = "PhenoSlim/Genotype";
                                              Group: User
                                                annotVocab = PhenoSlim;
                                                evidenceKey = 2;
                                                mgiTypeKey = 12;
                                                vocabKey = 1;
                                                defaultValue = 1001;
                                            }
                                      }
                                }
                                {
                                  mgiAccession = mgiAccession : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = VocAnnotTypeMenu;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = VocAnnotTypeMenu;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        ObjectID = ID : mgiDataTypes;
                                      }
                                      {
                                        AccessionID = CharText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                            }
                                            {
                                              text = text;
                                              Group: Widget
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: VerifyMGIAcc() Search()";
                                            }
                                      }
                                      {
                                        AccessionName = CharSText : mgiDataTypes;
                                            {
                                              label = XmLabel;
                                              Group: Widget
                                                labelString = Object;
                                            }
                                            {
                                              text = scrolledText : mgiDataTypes;
                                              Group: Widget
                                                columns = 75;
                                                scrollHorizontal = True;
                                                translations = "#override
Shift<Key>Tab: prev-tab-group()
<Key>Tab: SetDefault() Search()";
                                            }
                                      }
                                }
                                {
                                  Annotation = Table : mgiTable;
                                  Group: Widget
                                    rubberPositioning = False;
                                    resizePolicy = resize_any;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = mgiAccession;
                                    rightAttachment = attach_form;
                                    topAttachment = attach_widget;
                                    topWidget = mgiAccession;
                                    topOffset = 10;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                      {
                                        Table = mgiTable : mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 15;
                                          xrtTblNumColumns = 25;
                                          xrtTblColumnLabels = "Mode,AnnotEvidence key,Annot key,Term key,Term SeqNum,Not key,Refs key,Current Refs key,Evidence key,Current Evidence key,Evidence SeqNum,Note key,Term Acc ID,DAG,Vocabulary Term,NOT,J:,Citation,Evidence,Inferred From,Modified By,Date,Notes,Created By,Date";
                                          xrtTblPixelWidthSeries = "(all 0-11 0)";
                                          xrtTblCharWidthSeries = "(all 0 1)(all 1-11 10)(all 12 15)(all 13 5)(all 14 25)(all 15 3)(all 17 10)(all 18 10)(all 19 20)(all 20 11)(all 21 10)(all 22 20)(all 24 10)";
                                          xrtTblDisplayHorizScrollBar = dispsb_always;
                                          userDefinedAttributes = "annotKey:Int(Int)=\"2\"\ntermKey:Int(Int)=\"3\"\nnotKey:Int(Int)=\"5\"\nrefsKey:Int(Int)=\"6\"\nevidenceKey:Int(Int)=\"8\"\ntermAccID:Int(Int)=\"12\"\ndag:Int(Int)=\"13\"\nterm:Int(Int)=\"14\"\nnotCode:Int(Int)=\"15\"\njnum:Int(Int)=\"16\"\ncitation:Int(Int)=\"17\"\nevidence:Int(Int)=\"18\"\ninferredFrom:Int(Int)=\"19\"\neditor:Int(Int)=\"20\"\nmodifiedDate:Int(Int)=\"21\"\nnotes:Int(Int)=\"22\"\nvocabKey:Int(Int)=\"0\"\nvocabEvidenceKey:Int(Int)=\"0\"\ncurrentRefsKey:Int(Int)=\"7\"\ncurrentEvidenceKey:Int(Int)=\"9\"\ntermSeqNum:Int(Int)=\"4\"\nevidenceSeqNum:Int(Int)=\"10\"\nannotVocab:String(String)\ncreatedBy:Int(Int)=\"23\"\ncreatedDate:Int(Int)=\"24\"\nannotEvidenceKey:Int(Int)=\"1\"\nmgiTypeKey:Int(Int)=\"25\"\nnoteTypeKey:Int(Int)=\"1008\"\nnoteKey:Int=\"11\"\n";
                                          xrtTblValidateCellCallback = "D:VerifyVocabTermAccID,\nD:VerifyReference,\nD:VerifyGOReference,\nD:VerifyVocabEvidenceCode,\nD:CommitTableCellEdit";
                                          xrtTblTraversableSeries = "(all 0-11 False)(all 13-15 False)(all 17 False)";
                                          xrtTblEnterCellCallback = "D:SetOptions";
                                          xrtTblFrozenColumns = 12;
                                          xrtTblAllowCellResize = resize_horizontal;
                                          width = 950;
                                        Group: User
                                          requiredColumns = "3\n6\n8";
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                      }
                                      {
                                        EditTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Edit Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = DeleteRow;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = DeleteRow;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                      {
                                        SearchObsoleteTerm = toggle : mgiDataTypes;
                                        Group: Widget
                                          labelString = "Search Obsolete Term";
                                        Group: Constraint
                                          leftAttachment = attach_widget;
                                          leftWidget = EditTerm;
                                          rightAttachment = attach_none;
                                          topAttachment = attach_opposite_widget;
                                          topWidget = EditTerm;
                                          bottomAttachment = attach_none;
                                          resizable = true;
                                      }
                                }
                                {
                                  Reference = ReferenceTable : mgiTable;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_opposite_widget;
                                    leftWidget = Annotation;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_widget;
                                    topWidget = Annotation;
                                    topOffset = 5;
                                    bottomAttachment = attach_form;
                                    resizable = true;
                                    leftOffset = 300;
                                    bottomOffset = 5;
                                      {
                                        Table = mgiTable;
                                        Group: Widget
                                          xrtTblNumRows = 20;
                                          xrtTblVisibleRows = 9;
                                      }
                                      {
                                        AddRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                      {
                                        DeleteRow = TablePush : mgiTable;
                                        Group: Widget
                                          managed = False;
                                      }
                                }
                                {
                                  mgiNoteForm = mgiNoteForm : mgiDataTypes;
                                  Group: Widget
                                    orientation = horizontal;
                                  Group: Constraint
                                    leftAttachment = attach_widget;
                                    leftWidget = VocAnnotTypeMenu;
                                    leftOffset = 30;
                                    rightAttachment = attach_none;
                                    topAttachment = attach_opposite_widget;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                    topWidget = VocAnnotTypeMenu;
                                    topOffset = "-5";
                                }
                          }
                    }
                    {
                      Control = Control : mgiControl;
                          {
                            ControlForm = XmForm;
                            Group: Widget
                              rubberPositioning = False;
                              resizePolicy = resize_any;
                                {
                                  Search = ControlPush;
                                }
                                {
                                  Clear = ControlPush;
                                }
                                {
                                  Modify = ControlPush;
                                  Group: Widget
                                    labelString = Save;
                                }
                                {
                                  Add = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Delete = ControlPush;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Previous = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  Next = ControlArrow;
                                  Group: Widget
                                    managed = False;
                                  Group: Constraint
                                    leftAttachment = attach_none;
                                    rightAttachment = attach_opposite_widget;
                                    rightWidget = Modify;
                                    topAttachment = attach_widget;
                                    topWidget = Modify;
                                    topOffset = 2;
                                    bottomAttachment = attach_none;
                                    resizable = true;
                                }
                                {
                                  Clear1 = XmMenuBar;
                                }
                                {
                                  RecordCount = RecordCount : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  CreationDate = CreationDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                                {
                                  ModifiedDate = ModifiedDate : mgiDataTypes;
                                  Group: Widget
                                    managed = False;
                                }
                          }
                    }
                    {
                      Lookup = Lookup : mgiLookup;
                      Group: Constraint
                        leftAttachment = attach_widget;
                        leftWidget = Edit;
                        rightAttachment = attach_form;
                        topAttachment = attach_widget;
                        topWidget = Control;
                        bottomAttachment = attach_none;
                        resizable = true;
                          {
                            panedWindow = XmPanedWindow;
                                {
                                  QueryList = QueryList : mgiLookup;
                                      {
                                        Label = LookupLabel;
                                      }
                                      {
                                        List = list;
                                        Group: Widget
                                          visibleItemCount = 5;
                                      }
                                }
                                {
                                  NotMenu = YesNoMenu : mgiOption;
                                  Group: Widget
                                    subMenuId = NotPulldown;
                                    labelString = NOT;
                                  Group: User
                                    defaultOption = No;
                                      Popups:
                                      {
                                        NotPulldown : YesNoPulldown = OptionPulldown;
                                        Group: User
                                          tableForm = Annotation;
                                          tableOption = 15;
                                          tableOptionKey = 5;
                                      }
                                }
                                {
                                  NotePush = NotePush : mgiDataTypes;
                                  Group: User
                                    targetColumn = 22;
                                    targetWidget = Annotation;
                                }
                                {
                                  EvidenceCodeList = EvidenceCodeList : mgiLookup;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: User
                                          targetWidget = Annotation;
                                          targetKey = 8;
                                          targetText = 18;
                                      }
                                }
                                {
                                  PhenoSlimList = PhenoSlimList : mgiLookup;
                                  Group: Widget
                                    managed = False;
                                      {
                                        Label = LookupLabel : mgiLookup;
                                      }
                                      {
                                        List = list : mgiDataTypes;
                                        Group: Widget
                                          visibleItemCount = 25;
                                        Group: User
                                          targetKey = 3;
                                          targetWidget = Annotation;
                                          targetText = 14;
                                          targetAccID = 12;
                                      }
                                }
                          }
                    }
                    Popups:
                    {
                      StatusDialog = StatusDialog : mgiDialog;
                    }
                    {
                      DeleteDialog = DeleteDialog : mgiDialog;
                    }
                    {
                      ReportDialog = ReportDialog : mgiDialog;
                          {
                            FileSelection = FileSelection;
                          }
                          {
                            Lookup = XmFrame;
                                {
                                  panedWindow = XmPanedWindow;
                                      {
                                        ReportList = LookupList : mgiLookup;
                                            {
                                              Label = LookupLabel;
                                            }
                                            {
                                              List = list;
                                              Group: Widget
                                                items = "Potential GO References";
                                              Group: User
                                                keys = "GORefs.py";
                                            }
                                      }
                                }
                          }
                    }
                    {
                      SearchDialog = SearchDialog : mgiDialog;
                    }
                    {
                      WhichItem = WhichItem : mgiDialog;
                    }
                    {
                      VerifyItemAdd = VerifyItemAdd : mgiDialog;
                    }
                    {
                      WorkingDialog = WorkingDialog : mgiDialog;
                    }
                    {
                      NoteDialog = NoteDialog : mgiDialog;
                      Group: Widget
                        dialogStyle = dialog_primary_application_modal;
                    }
              }
        }
}


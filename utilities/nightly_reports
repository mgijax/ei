#!/bin/sh

#
# nightly_reports 07/21/99
#
# Script to generate nightly reports.  This script is executed from the 'sybase'
# load_production script.
#
# Usage: nightly_reports <DBServer> <database> 
#                        <internal_reports_directory_root> <ftp_reports_dir>
# (where <internal_reports_directory_root> is a directory which contains
#  a 'mgireport' target subdirectory, and <ftp_reports_dir> is the target 
#  directory on the ftp site for the generated reports).
#
# Public reports are generated in <current_working_directory>/mgireport
# and are copied to <ftp_reports_dir>. 
#
# Private reports are sent to <internal_reports_directory_root>/mgireport and 
# are accessible via the QCR page (http://kelso:4444/qcr.html) when in 
# Production mode. Alternative locations will be set up for testing 
# report generation on Development.
#
#

export DSQUERY MGD INTERNAL_RPTS_DIR FTP_RPTS_DIR
export NOMEN HOME FTP PYTHONPATH SYBASE PATH PUBLIC_RPTS

if [ "$#" -ne 4 ]
then
    echo usage: "$0 <dbserver> <database> <internal_reports_directory> <ftp_reports_directory>"
    echo '(<internal_reports_directory> should have a "mgireport" subdirectory'
    echo '<ftp_reports_directory> is the target directory for ftp site reports)'
    exit 1
fi

DSQUERY=$1
MGD=$2
INTERNAL_RPTS_DIR=$3
FTP_RPTS_DIR=$4

NOMEN=nomen
FTP=$FTP_RPTS_DIR
PYTHONPATH=/usr/local/lib/python1.4:/usr/local/etc/httpd/python
SYBASE=/opt/sybase
PATH=$PATH:$SYBASE/bin

umask 002

# check command-line arguments for validity
if [ ! -d $INTERNAL_RPTS_DIR/mgireport ]
then
    echo "$INTERNAL_RPTS_DIR/mgireport does not exist."
	exit 1
fi

if [ ! -d $FTP_RPTS_DIR ]
then
    echo "$FTP_RPTS_DIR is not a directory."
	exit 1
fi

# determine script's installation directory and cd to it.
# mgireport directory is relative to installation directory.
BASENAME=`basename $0`; NOTBASENAME=`echo $0 | sed "s/$BASENAME$//"`
[ "$NOTBASENAME" != "" ] && {
   cd $NOTBASENAME
}
 
HOME=`pwd`
cd $HOME

PUBLIC_RPTS="GDB_Accession.py \
HMD_Human1.sql \
HMD_Human2.sql \
HMD_Human3.sql \
HMD_Human4.sql \
HMD_Rat1.sql \
HMD_Rat2.sql \
HMD_Rat3.sql \
HMD_Rat4.sql \
MGD_Stats.sql \
MRK_List1.sql \
MRK_List2.sql \
MRK_List3.sql \
MRK_List4.sql \
MRK_Dump1.py \
MRK_Dump2.py \
MRK_LocusLink.py \
MRK_Sequence.py \
MRK_SwissProt.py \
MRK_SwissProt_Sequence.py \
MRK_Mutants1.sql \
MRK_Mutants2.sql \
MRK_Mutants3.sql \
MRK_MLC.py \
MRK_Recent.sql \
PRB_AltTranscripts.py \
PRB_PrimerSeq.py \
PRB_Strain1.sql \
PRB_Strain2.sql \
PRB_TissueMouse.sql"

# Copy all of the generated reports from the EI installation filesystem
# to the FTP site.

for i in $PUBLIC_RPTS
do
$i $DSQUERY $MGD
done
cp $HOME/mgireport/*.rpt $FTP

HOME=$INTERNAL_RPTS_DIR
INTERNAL_RPTS="ACC_Accession.sql \
BIB_InPress.sql \
BIB_NeedNLM.sql \
BIB_NoAbstract.sql \
BIB_Null.sql \
BIB_Submission.sql \
GXD_NotInCache.sql \
GXD_ProbeMarker.sql \
GXD_ProbeReference.sql \
GXD_Stats.sql \
HMD_ConservedUN.sql \
HMD_Duplicates.sql \
HMD_References1.sql \
HMD_References2.sql \
HMD_References3.sql \
HMD_References4.sql \
HMD_References6.sql \
HMD_SpeciesCount.py \
HMD_Unreviewed.sql \
MLC_Allele.sql \
MLC_Alleles.sql \
MRK_AllelesAll.sql \
MLC_CheckImageIndex.py \
MLC_References.sql \
MLC_TransferStats.py \
MLD_2Point.sql \
MLD_Assays.sql \
MLD_Chromosome.sql \
MLD_Cross.sql \
MLD_Crosses.sql \
MLD_DupMarker.sql \
MLD_ExptMismatch.sql \
MLD_Marker.sql \
MLD_Statistics.sql \
MRK_AccDup.sql \
MRK_Alias.sql \
MRK_Alleles.sql \
MRK_AllelesByDate.sql \
MRK_Classes.sql \
MRK_Duplicates.sql \
MRK_Matrix.sql \
MRK_MLC_Withdrawn.sql \
MRK_NoReferences.sql \
MRK_Offsets.sql \
MRK_OffsetsMLDP.sql \
MRK_OffsetsUN.sql \
MRK_Ref15839.sql \
MRK_RefMLC.sql \
MRK_RefNo15839.sql \
MRK_References.sql \
MRK_Species.sql \
MRK_Withdrawn.sql \
PRB_AltTranscripts.sql \
PRB_CellLine.sql \
PRB_Marker.sql \
PRB_NoGenBank.sql \
PRB_NoMarkerSeq.sql \
PRB_Reference.sql \
PRB_Strain.sql \
PRB_StrainNonStd.sql \
PRB_StrainNonStdUpdate.sql \
PRB_StrainDup.sql \
PRB_Tissue.sql \
PRB_TissueCell.sql \
PRB_TissueNonStd.sql \
MLP_Nomenclature.sql"

for i in $INTERNAL_RPTS
do
$i $DSQUERY $MGD $NOMEN
done

